{"version":3,"sources":["useToastController.js"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { dispatchToast as dispatchToastVanilla, dismissToast as dismissToastVanilla, dismissAllToasts as dismissAllToastsVanilla, updateToast as updateToastVanilla, playToast as playToastVanilla, pauseToast as pauseToastVanilla } from './vanilla';\nconst noop = ()=>undefined;\n/**\n * @param toasterId - If an id is provided all imperative methods control that specific toaster\n * @returns Imperative methods to control toasts\n */ export function useToastController(toasterId) {\n    const { targetDocument  } = useFluent();\n    return React.useMemo(()=>{\n        if (!targetDocument) {\n            return {\n                dispatchToast: noop,\n                dismissToast: noop,\n                dismissAllToasts: noop,\n                updateToast: noop,\n                pauseToast: noop,\n                playToast: noop\n            };\n        }\n        return {\n            dispatchToast: (content, options)=>{\n                dispatchToastVanilla(content, {\n                    ...options,\n                    toasterId,\n                    data: {\n                        root: options === null || options === void 0 ? void 0 : options.root\n                    }\n                }, targetDocument);\n            },\n            dismissToast: (toastId)=>{\n                dismissToastVanilla(toastId, toasterId, targetDocument);\n            },\n            dismissAllToasts: ()=>{\n                dismissAllToastsVanilla(toasterId, targetDocument);\n            },\n            updateToast: (options)=>{\n                updateToastVanilla({\n                    ...options,\n                    data: {\n                        root: options.root\n                    },\n                    toasterId\n                }, targetDocument);\n            },\n            pauseToast: (toastId)=>{\n                pauseToastVanilla(toastId, toasterId, targetDocument);\n            },\n            playToast: (toastId)=>{\n                playToastVanilla(toastId, toasterId, targetDocument);\n            }\n        };\n    }, [\n        targetDocument,\n        toasterId\n    ]);\n}\n"],"names":["useToastController","noop","undefined","toasterId","targetDocument","useFluent","React","useMemo","dispatchToast","dismissToast","dismissAllToasts","updateToast","pauseToast","playToast","content","options","dispatchToastVanilla","data","root","toastId","dismissToastVanilla","dismissAllToastsVanilla","updateToastVanilla","pauseToastVanilla","playToastVanilla"],"mappings":";;;;+BAOoBA;;aAAAA;;;6DAPG;qCACyB;yBAC2L;AAC3O,MAAMC,OAAO,IAAIC;AAIN,SAASF,mBAAmBG,SAAS,EAAE;IAC9C,MAAM,EAAEC,eAAc,EAAG,GAAGC,IAAAA,uCAAS;IACrC,OAAOC,OAAMC,OAAO,CAAC,IAAI;QACrB,IAAI,CAACH,gBAAgB;YACjB,OAAO;gBACHI,eAAeP;gBACfQ,cAAcR;gBACdS,kBAAkBT;gBAClBU,aAAaV;gBACbW,YAAYX;gBACZY,WAAWZ;YACf;QACJ,CAAC;QACD,OAAO;YACHO,eAAe,CAACM,SAASC,UAAU;gBAC/BC,IAAAA,sBAAoB,EAACF,SAAS;oBAC1B,GAAGC,OAAO;oBACVZ;oBACAc,MAAM;wBACFC,MAAMH,YAAY,IAAI,IAAIA,YAAY,KAAK,IAAI,KAAK,IAAIA,QAAQG,IAAI;oBACxE;gBACJ,GAAGd;YACP;YACAK,cAAc,CAACU,UAAU;gBACrBC,IAAAA,qBAAmB,EAACD,SAAShB,WAAWC;YAC5C;YACAM,kBAAkB,IAAI;gBAClBW,IAAAA,yBAAuB,EAAClB,WAAWC;YACvC;YACAO,aAAa,CAACI,UAAU;gBACpBO,IAAAA,oBAAkB,EAAC;oBACf,GAAGP,OAAO;oBACVE,MAAM;wBACFC,MAAMH,QAAQG,IAAI;oBACtB;oBACAf;gBACJ,GAAGC;YACP;YACAQ,YAAY,CAACO,UAAU;gBACnBI,IAAAA,mBAAiB,EAACJ,SAAShB,WAAWC;YAC1C;YACAS,WAAW,CAACM,UAAU;gBAClBK,IAAAA,kBAAgB,EAACL,SAAShB,WAAWC;YACzC;QACJ;IACJ,GAAG;QACCA;QACAD;KACH;AACL"}