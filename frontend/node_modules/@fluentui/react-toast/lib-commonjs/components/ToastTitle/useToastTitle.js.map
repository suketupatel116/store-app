{"version":3,"sources":["useToastTitle.js"],"sourcesContent":["import * as React from 'react';\nimport { CheckmarkCircleFilled, DismissCircleFilled, InfoFilled, WarningFilled } from '@fluentui/react-icons';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\nimport { useBackgroundAppearance } from '@fluentui/react-shared-contexts';\nimport { useToastContainerContext } from '../../contexts/toastContainerContext';\n/**\n * Create the state required to render ToastTitle.\n *\n * The returned state can be modified with hooks such as useToastTitleStyles_unstable,\n * before being passed to renderToastTitle_unstable.\n *\n * @param props - props from this instance of ToastTitle\n * @param ref - reference to root HTMLElement of ToastTitle\n */ export const useToastTitle_unstable = (props, ref)=>{\n    const { intent , titleId  } = useToastContainerContext();\n    const backgroundAppearance = useBackgroundAppearance();\n    /** Determine the role and media to render based on the intent */ let defaultIcon;\n    switch(intent){\n        case 'success':\n            defaultIcon = /*#__PURE__*/ React.createElement(CheckmarkCircleFilled, null);\n            break;\n        case 'error':\n            defaultIcon = /*#__PURE__*/ React.createElement(DismissCircleFilled, null);\n            break;\n        case 'warning':\n            defaultIcon = /*#__PURE__*/ React.createElement(WarningFilled, null);\n            break;\n        case 'info':\n            defaultIcon = /*#__PURE__*/ React.createElement(InfoFilled, null);\n            break;\n    }\n    return {\n        action: resolveShorthand(props.action),\n        components: {\n            root: 'div',\n            media: 'div',\n            action: 'div'\n        },\n        media: resolveShorthand(props.media, {\n            required: !!intent,\n            defaultProps: {\n                children: defaultIcon\n            }\n        }),\n        root: getNativeElementProps('div', {\n            ref,\n            children: props.children,\n            id: titleId,\n            ...props\n        }),\n        intent,\n        backgroundAppearance\n    };\n};\n"],"names":["useToastTitle_unstable","props","ref","intent","titleId","useToastContainerContext","backgroundAppearance","useBackgroundAppearance","defaultIcon","React","createElement","CheckmarkCircleFilled","DismissCircleFilled","WarningFilled","InfoFilled","action","resolveShorthand","components","root","media","required","defaultProps","children","getNativeElementProps","id"],"mappings":";;;;+BAaiBA;;aAAAA;;;6DAbM;4BAC+D;gCAC9B;qCAChB;uCACC;AAS9B,MAAMA,yBAAyB,CAACC,OAAOC,MAAM;IACpD,MAAM,EAAEC,OAAM,EAAGC,QAAO,EAAG,GAAGC,IAAAA,+CAAwB;IACtD,MAAMC,uBAAuBC,IAAAA,4CAAuB;IACpD,+DAA+D,GAAG,IAAIC;IACtE,OAAOL;QACH,KAAK;YACDK,cAAc,WAAW,GAAGC,OAAMC,aAAa,CAACC,iCAAqB,EAAE,IAAI;YAC3E,KAAM;QACV,KAAK;YACDH,cAAc,WAAW,GAAGC,OAAMC,aAAa,CAACE,+BAAmB,EAAE,IAAI;YACzE,KAAM;QACV,KAAK;YACDJ,cAAc,WAAW,GAAGC,OAAMC,aAAa,CAACG,yBAAa,EAAE,IAAI;YACnE,KAAM;QACV,KAAK;YACDL,cAAc,WAAW,GAAGC,OAAMC,aAAa,CAACI,sBAAU,EAAE,IAAI;YAChE,KAAM;IACd;IACA,OAAO;QACHC,QAAQC,IAAAA,gCAAgB,EAACf,MAAMc,MAAM;QACrCE,YAAY;YACRC,MAAM;YACNC,OAAO;YACPJ,QAAQ;QACZ;QACAI,OAAOH,IAAAA,gCAAgB,EAACf,MAAMkB,KAAK,EAAE;YACjCC,UAAU,CAAC,CAACjB;YACZkB,cAAc;gBACVC,UAAUd;YACd;QACJ;QACAU,MAAMK,IAAAA,qCAAqB,EAAC,OAAO;YAC/BrB;YACAoB,UAAUrB,MAAMqB,QAAQ;YACxBE,IAAIpB;YACJ,GAAGH,KAAK;QACZ;QACAE;QACAG;IACJ;AACJ"}