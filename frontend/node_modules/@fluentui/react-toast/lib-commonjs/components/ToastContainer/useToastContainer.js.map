{"version":3,"sources":["useToastContainer.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useMergedRefs, useEventCallback, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { useFluent_unstable } from '@fluentui/react-shared-contexts';\nimport { Timer } from '../Timer/Timer';\nimport { useFocusFinders } from '@fluentui/react-tabster';\nconst intentPolitenessMap = {\n    success: 'assertive',\n    warning: 'assertive',\n    error: 'assertive',\n    info: 'polite'\n};\n/**\n * Create the state required to render ToastContainer.\n *\n * The returned state can be modified with hooks such as useToastContainerStyles_unstable,\n * before being passed to renderToastContainer_unstable.\n *\n * @param props - props from this instance of ToastContainer\n * @param ref - reference to root HTMLElement of ToastContainer\n */ export const useToastContainer_unstable = (props, ref)=>{\n    const { visible , children , close: closeProp , remove , updateId , announce , data , timeout: timerTimeout , politeness: desiredPoliteness , intent ='info' , pauseOnHover , pauseOnWindowBlur , imperativeRef , tryRestoreFocus , ...rest } = props;\n    const titleId = useId('toast-title');\n    const bodyId = useId('toast-body');\n    const toastRef = React.useRef(null);\n    const { targetDocument  } = useFluent_unstable();\n    const [running, setRunning] = React.useState(false);\n    const imperativePauseRef = React.useRef(false);\n    const focusedToastBeforeClose = React.useRef(false);\n    const close = useEventCallback(()=>{\n        var _toastRef_current;\n        const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;\n        if (activeElement && ((_toastRef_current = toastRef.current) === null || _toastRef_current === void 0 ? void 0 : _toastRef_current.contains(activeElement))) {\n            focusedToastBeforeClose.current = true;\n        }\n        closeProp();\n    });\n    const onStatusChange = useEventCallback((status)=>{\n        var _props_onStatusChange;\n        return (_props_onStatusChange = props.onStatusChange) === null || _props_onStatusChange === void 0 ? void 0 : _props_onStatusChange.call(props, null, {\n            status,\n            ...props\n        });\n    });\n    const pause = useEventCallback(()=>setRunning(false));\n    const play = useEventCallback(()=>{\n        var _toastRef_current;\n        if (imperativePauseRef.current) {\n            return;\n        }\n        var _targetDocument_activeElement;\n        const containsActive = !!((_toastRef_current = toastRef.current) === null || _toastRef_current === void 0 ? void 0 : _toastRef_current.contains((_targetDocument_activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement) !== null && _targetDocument_activeElement !== void 0 ? _targetDocument_activeElement : null));\n        if (timerTimeout < 0) {\n            setRunning(true);\n            return;\n        }\n        if (!containsActive) {\n            setRunning(true);\n        }\n    });\n    const { findFirstFocusable  } = useFocusFinders();\n    React.useImperativeHandle(imperativeRef, ()=>({\n            focus: ()=>{\n                if (!toastRef.current) {\n                    return;\n                }\n                const firstFocusable = findFirstFocusable(toastRef.current);\n                if (firstFocusable) {\n                    firstFocusable.focus();\n                } else {\n                    toastRef.current.focus();\n                }\n            },\n            play: ()=>{\n                imperativePauseRef.current = false;\n                play();\n            },\n            pause: ()=>{\n                imperativePauseRef.current = true;\n                pause();\n            }\n        }));\n    React.useEffect(()=>{\n        return ()=>onStatusChange('unmounted');\n    }, [\n        onStatusChange\n    ]);\n    React.useEffect(()=>{\n        if (!targetDocument) {\n            return;\n        }\n        if (pauseOnWindowBlur) {\n            var _targetDocument_defaultView, _targetDocument_defaultView1;\n            (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.addEventListener('focus', play);\n            (_targetDocument_defaultView1 = targetDocument.defaultView) === null || _targetDocument_defaultView1 === void 0 ? void 0 : _targetDocument_defaultView1.addEventListener('blur', pause);\n            return ()=>{\n                var _targetDocument_defaultView, _targetDocument_defaultView1;\n                (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.removeEventListener('focus', play);\n                (_targetDocument_defaultView1 = targetDocument.defaultView) === null || _targetDocument_defaultView1 === void 0 ? void 0 : _targetDocument_defaultView1.removeEventListener('blur', pause);\n            };\n        }\n    }, [\n        targetDocument,\n        pause,\n        play,\n        pauseOnWindowBlur\n    ]);\n    // It's impossible to animate to height: auto in CSS, the actual pixel value must be known\n    // Get the height of the toast before animation styles have been applied and set a CSS\n    // variable with its height. The CSS variable will be used by the styles\n    const onTransitionEntering = ()=>{\n        if (!toastRef.current) {\n            return;\n        }\n        const element = toastRef.current;\n        element.style.setProperty('--fui-toast-height', `${element.scrollHeight}px`);\n    };\n    // Users never actually use ToastContainer as a JSX but imperatively through useToastContainerController\n    const userRootSlot = data.root;\n    // Using a ref callback here because addEventListener supports `once`\n    const toastAnimationRef = React.useCallback((el)=>{\n        if (el && toastRef.current) {\n            toastRef.current.addEventListener('animationend', ()=>{\n                // start toast once it's fully animated in\n                play();\n                onStatusChange('visible');\n            }, {\n                once: true\n            });\n        }\n    }, [\n        play,\n        onStatusChange\n    ]);\n    const onMouseEnter = useEventCallback((e)=>{\n        var _userRootSlot_onMouseEnter;\n        pause();\n        userRootSlot === null || userRootSlot === void 0 ? void 0 : (_userRootSlot_onMouseEnter = userRootSlot.onMouseEnter) === null || _userRootSlot_onMouseEnter === void 0 ? void 0 : _userRootSlot_onMouseEnter.call(userRootSlot, e);\n    });\n    const onMouseLeave = useEventCallback((e)=>{\n        var _userRootSlot_onMouseEnter;\n        play();\n        userRootSlot === null || userRootSlot === void 0 ? void 0 : (_userRootSlot_onMouseEnter = userRootSlot.onMouseEnter) === null || _userRootSlot_onMouseEnter === void 0 ? void 0 : _userRootSlot_onMouseEnter.call(userRootSlot, e);\n    });\n    const onKeyDown = useEventCallback((e)=>{\n        var _userRootSlot_onKeyDown;\n        if (e.key === 'Escape') {\n            e.preventDefault();\n            close();\n        }\n        userRootSlot === null || userRootSlot === void 0 ? void 0 : (_userRootSlot_onKeyDown = userRootSlot.onKeyDown) === null || _userRootSlot_onKeyDown === void 0 ? void 0 : _userRootSlot_onKeyDown.call(userRootSlot, e);\n    });\n    React.useEffect(()=>{\n        var _toastRef_current;\n        if (!visible) {\n            return;\n        }\n        const politeness = desiredPoliteness !== null && desiredPoliteness !== void 0 ? desiredPoliteness : intentPolitenessMap[intent];\n        var _toastRef_current_textContent;\n        announce((_toastRef_current_textContent = (_toastRef_current = toastRef.current) === null || _toastRef_current === void 0 ? void 0 : _toastRef_current.textContent) !== null && _toastRef_current_textContent !== void 0 ? _toastRef_current_textContent : '', {\n            politeness\n        });\n    }, [\n        announce,\n        desiredPoliteness,\n        toastRef,\n        visible,\n        updateId,\n        intent\n    ]);\n    React.useEffect(()=>{\n        return ()=>{\n            if (focusedToastBeforeClose.current) {\n                focusedToastBeforeClose.current = false;\n                tryRestoreFocus();\n            }\n        };\n    }, [\n        tryRestoreFocus\n    ]);\n    return {\n        components: {\n            timer: Timer,\n            root: 'div'\n        },\n        timer: resolveShorthand({\n            key: updateId,\n            onTimeout: close,\n            running,\n            timeout: timerTimeout !== null && timerTimeout !== void 0 ? timerTimeout : -1\n        }, {\n            required: true\n        }),\n        root: getNativeElementProps('div', {\n            ref: useMergedRefs(ref, toastRef, toastAnimationRef),\n            children,\n            tabIndex: -1,\n            role: 'group',\n            'aria-labelledby': titleId,\n            'aria-describedby': bodyId,\n            ...rest,\n            ...userRootSlot,\n            onMouseEnter,\n            onMouseLeave,\n            onKeyDown\n        }),\n        timerTimeout,\n        transitionTimeout: 500,\n        running,\n        visible,\n        remove,\n        close,\n        onTransitionEntering,\n        updateId,\n        nodeRef: toastRef,\n        intent,\n        titleId,\n        bodyId\n    };\n};\n"],"names":["useToastContainer_unstable","intentPolitenessMap","success","warning","error","info","props","ref","visible","children","close","closeProp","remove","updateId","announce","data","timeout","timerTimeout","politeness","desiredPoliteness","intent","pauseOnHover","pauseOnWindowBlur","imperativeRef","tryRestoreFocus","rest","titleId","useId","bodyId","toastRef","React","useRef","targetDocument","useFluent_unstable","running","setRunning","useState","imperativePauseRef","focusedToastBeforeClose","useEventCallback","_toastRef_current","activeElement","current","contains","onStatusChange","status","_props_onStatusChange","call","pause","play","_targetDocument_activeElement","containsActive","findFirstFocusable","useFocusFinders","useImperativeHandle","focus","firstFocusable","useEffect","_targetDocument_defaultView","_targetDocument_defaultView1","defaultView","addEventListener","removeEventListener","onTransitionEntering","element","style","setProperty","scrollHeight","userRootSlot","root","toastAnimationRef","useCallback","el","once","onMouseEnter","e","_userRootSlot_onMouseEnter","onMouseLeave","onKeyDown","_userRootSlot_onKeyDown","key","preventDefault","_toastRef_current_textContent","textContent","components","timer","Timer","resolveShorthand","onTimeout","required","getNativeElementProps","useMergedRefs","tabIndex","role","transitionTimeout","nodeRef"],"mappings":"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"}