/** @jsxRuntime classic */ /** @jsx createElement */ import { createElement } from '@fluentui/react-jsx-runtime';
import { getSlotsNext } from '@fluentui/react-utilities';
import { FieldContextProvider, getFieldControlProps } from '../../contexts/index';
/**
 * Render the final JSX of Field
 */ export const renderField_unstable = (state, contextValues)=>{
    const { slots , slotProps  } = getSlotsNext(state);
    let { children  } = state;
    if (typeof children === 'function') {
        children = children(getFieldControlProps(contextValues.field) || {});
    }
    return /*#__PURE__*/ createElement(FieldContextProvider, {
        value: contextValues === null || contextValues === void 0 ? void 0 : contextValues.field
    }, /*#__PURE__*/ createElement(slots.root, slotProps.root, slots.label && /*#__PURE__*/ createElement(slots.label, slotProps.label), children, slots.validationMessage && /*#__PURE__*/ createElement(slots.validationMessage, slotProps.validationMessage, slots.validationMessageIcon && /*#__PURE__*/ createElement(slots.validationMessageIcon, slotProps.validationMessageIcon), slotProps.validationMessage.children), slots.hint && /*#__PURE__*/ createElement(slots.hint, slotProps.hint)));
};
