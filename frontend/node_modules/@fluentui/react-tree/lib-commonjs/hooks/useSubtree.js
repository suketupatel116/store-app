"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useSubtree", {
    enumerable: true,
    get: ()=>useSubtree
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _index = require("../contexts/index");
const _reactUtilities = require("@fluentui/react-utilities");
function useSubtree(props, ref) {
    const contextAppearance = (0, _index.useTreeContext_unstable)((ctx)=>ctx.appearance);
    const contextSize = (0, _index.useTreeContext_unstable)((ctx)=>ctx.size);
    const subtreeRef = (0, _index.useTreeItemContext_unstable)((ctx)=>ctx.subtreeRef);
    const value = (0, _index.useTreeItemContext_unstable)((ctx)=>ctx.value);
    const { appearance =contextAppearance !== null && contextAppearance !== void 0 ? contextAppearance : 'subtle' , size =contextSize !== null && contextSize !== void 0 ? contextSize : 'medium'  } = props;
    const parentLevel = (0, _index.useTreeContext_unstable)((ctx)=>ctx.level);
    const selectionMode = (0, _index.useTreeContext_unstable)((ctx)=>ctx.selectionMode);
    const openItems = (0, _index.useTreeContext_unstable)((ctx)=>ctx.openItems);
    const checkedItems = (0, _index.useTreeContext_unstable)((ctx)=>ctx.checkedItems);
    const requestTreeResponse = (0, _index.useTreeContext_unstable)((ctx)=>ctx.requestTreeResponse);
    const open = openItems.has(value);
    return {
        open,
        components: {
            root: 'div'
        },
        appearance,
        size,
        selectionMode,
        level: parentLevel + 1,
        root: (0, _reactUtilities.getNativeElementProps)('div', {
            ref: (0, _reactUtilities.useMergedRefs)(ref, subtreeRef),
            role: 'group',
            ...props
        }),
        openItems,
        checkedItems,
        requestTreeResponse
    };
}
