{"version":3,"sources":["useTreeItemLayout.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, isResolvedShorthand, resolveShorthand, useMergedRefs } from '@fluentui/react-utilities';\nimport { useTreeItemContext_unstable, useTreeContext_unstable } from '../../contexts';\nimport { Checkbox } from '@fluentui/react-checkbox';\nimport { Radio } from '@fluentui/react-radio';\nimport { TreeItemChevron } from '../TreeItemChevron';\n/**\n * Create the state required to render TreeItemLayout.\n *\n * The returned state can be modified with hooks such as useTreeItemLayoutStyles_unstable,\n * before being passed to renderTreeItemLayout_unstable.\n *\n * @param props - props from this instance of TreeItemLayout\n * @param ref - reference to root HTMLElement of TreeItemLayout\n */ export const useTreeItemLayout_unstable = (props, ref)=>{\n    const { content , iconAfter , iconBefore , as ='span'  } = props;\n    const layoutRef = useTreeItemContext_unstable((ctx)=>ctx.layoutRef);\n    const selectionMode = useTreeContext_unstable((ctx)=>ctx.selectionMode);\n    const [isActionsVisibleExternal, actionsShorthand] = isResolvedShorthand(props.actions) ? [\n        props.actions.visible,\n        {\n            ...props.actions,\n            visible: undefined\n        }\n    ] : [\n        undefined,\n        props.actions\n    ];\n    const isActionsVisible = useTreeItemContext_unstable((ctx)=>ctx.isActionsVisible) || isActionsVisibleExternal;\n    const isAsideVisible = useTreeItemContext_unstable((ctx)=>ctx.isAsideVisible);\n    const selectionRef = useTreeItemContext_unstable((ctx)=>ctx.selectionRef);\n    const expandIconRef = useTreeItemContext_unstable((ctx)=>ctx.expandIconRef);\n    const actionsRef = useTreeItemContext_unstable((ctx)=>ctx.actionsRef);\n    const value = useTreeItemContext_unstable((ctx)=>ctx.value);\n    var _ctx_checkedItems_get;\n    const checked = useTreeContext_unstable((ctx)=>(_ctx_checkedItems_get = ctx.checkedItems.get(value)) !== null && _ctx_checkedItems_get !== void 0 ? _ctx_checkedItems_get : false);\n    const isBranch = useTreeItemContext_unstable((ctx)=>ctx.itemType === 'branch');\n    const expandIcon = resolveShorthand(props.expandIcon, {\n        required: isBranch,\n        defaultProps: {\n            children: /*#__PURE__*/ React.createElement(TreeItemChevron, null),\n            'aria-hidden': true\n        }\n    });\n    const expandIconRefs = useMergedRefs(expandIcon === null || expandIcon === void 0 ? void 0 : expandIcon.ref, expandIconRef);\n    if (expandIcon) {\n        expandIcon.ref = expandIconRefs;\n    }\n    const actions = isActionsVisible ? resolveShorthand(actionsShorthand) : undefined;\n    const actionsRefs = useMergedRefs(actions === null || actions === void 0 ? void 0 : actions.ref, actionsRef);\n    if (actions) {\n        actions.ref = actionsRefs;\n    }\n    return {\n        components: {\n            root: 'div',\n            expandIcon: 'div',\n            iconBefore: 'div',\n            content: 'div',\n            iconAfter: 'div',\n            actions: 'div',\n            aside: 'div',\n            // Casting here to a union between checkbox and radio\n            selector: selectionMode === 'multiselect' ? Checkbox : Radio\n        },\n        buttonContextValue: {\n            size: 'small'\n        },\n        root: getNativeElementProps(as, {\n            ...props,\n            ref: useMergedRefs(ref, layoutRef)\n        }),\n        iconBefore: resolveShorthand(iconBefore, {\n            defaultProps: {\n                'aria-hidden': true\n            }\n        }),\n        content: resolveShorthand(content, {\n            required: true\n        }),\n        iconAfter: resolveShorthand(iconAfter, {\n            defaultProps: {\n                'aria-hidden': true\n            }\n        }),\n        aside: isAsideVisible ? resolveShorthand(props.aside) : undefined,\n        actions,\n        expandIcon,\n        selector: resolveShorthand(props.selector, {\n            required: selectionMode !== 'none',\n            defaultProps: {\n                checked,\n                tabIndex: -1,\n                'aria-hidden': true,\n                ref: selectionRef\n            }\n        })\n    };\n};\n"],"names":["useTreeItemLayout_unstable","props","ref","content","iconAfter","iconBefore","as","layoutRef","useTreeItemContext_unstable","ctx","selectionMode","useTreeContext_unstable","isActionsVisibleExternal","actionsShorthand","isResolvedShorthand","actions","visible","undefined","isActionsVisible","isAsideVisible","selectionRef","expandIconRef","actionsRef","value","_ctx_checkedItems_get","checked","checkedItems","get","isBranch","itemType","expandIcon","resolveShorthand","required","defaultProps","children","React","createElement","TreeItemChevron","expandIconRefs","useMergedRefs","actionsRefs","components","root","aside","selector","Checkbox","Radio","buttonContextValue","size","getNativeElementProps","tabIndex"],"mappings":";;;;+BAciBA;;aAAAA;;;6DAdM;gCACqE;0BACvB;+BAC5C;4BACH;iCACU;AASrB,MAAMA,6BAA6B,CAACC,OAAOC,MAAM;IACxD,MAAM,EAAEC,QAAO,EAAGC,UAAS,EAAGC,WAAU,EAAGC,IAAI,OAAM,EAAG,GAAGL;IAC3D,MAAMM,YAAYC,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIF,SAAS;IAClE,MAAMG,gBAAgBC,IAAAA,iCAAuB,EAAC,CAACF,MAAMA,IAAIC,aAAa;IACtE,MAAM,CAACE,0BAA0BC,iBAAiB,GAAGC,IAAAA,mCAAmB,EAACb,MAAMc,OAAO,IAAI;QACtFd,MAAMc,OAAO,CAACC,OAAO;QACrB;YACI,GAAGf,MAAMc,OAAO;YAChBC,SAASC;QACb;KACH,GAAG;QACAA;QACAhB,MAAMc,OAAO;KAChB;IACD,MAAMG,mBAAmBV,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIS,gBAAgB,KAAKN;IACrF,MAAMO,iBAAiBX,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIU,cAAc;IAC5E,MAAMC,eAAeZ,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIW,YAAY;IACxE,MAAMC,gBAAgBb,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIY,aAAa;IAC1E,MAAMC,aAAad,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIa,UAAU;IACpE,MAAMC,QAAQf,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIc,KAAK;IAC1D,IAAIC;IACJ,MAAMC,UAAUd,IAAAA,iCAAuB,EAAC,CAACF,MAAM,AAACe,CAAAA,wBAAwBf,IAAIiB,YAAY,CAACC,GAAG,CAACJ,MAAK,MAAO,IAAI,IAAIC,0BAA0B,KAAK,IAAIA,wBAAwB,KAAK;IACjL,MAAMI,WAAWpB,IAAAA,qCAA2B,EAAC,CAACC,MAAMA,IAAIoB,QAAQ,KAAK;IACrE,MAAMC,aAAaC,IAAAA,gCAAgB,EAAC9B,MAAM6B,UAAU,EAAE;QAClDE,UAAUJ;QACVK,cAAc;YACVC,UAAU,WAAW,GAAGC,OAAMC,aAAa,CAACC,gCAAe,EAAE,IAAI;YACjE,eAAe,IAAI;QACvB;IACJ;IACA,MAAMC,iBAAiBC,IAAAA,6BAAa,EAACT,eAAe,IAAI,IAAIA,eAAe,KAAK,IAAI,KAAK,IAAIA,WAAW5B,GAAG,EAAEmB;IAC7G,IAAIS,YAAY;QACZA,WAAW5B,GAAG,GAAGoC;IACrB,CAAC;IACD,MAAMvB,UAAUG,mBAAmBa,IAAAA,gCAAgB,EAAClB,oBAAoBI,SAAS;IACjF,MAAMuB,cAAcD,IAAAA,6BAAa,EAACxB,YAAY,IAAI,IAAIA,YAAY,KAAK,IAAI,KAAK,IAAIA,QAAQb,GAAG,EAAEoB;IACjG,IAAIP,SAAS;QACTA,QAAQb,GAAG,GAAGsC;IAClB,CAAC;IACD,OAAO;QACHC,YAAY;YACRC,MAAM;YACNZ,YAAY;YACZzB,YAAY;YACZF,SAAS;YACTC,WAAW;YACXW,SAAS;YACT4B,OAAO;YACP,qDAAqD;YACrDC,UAAUlC,kBAAkB,gBAAgBmC,uBAAQ,GAAGC,iBAAK;QAChE;QACAC,oBAAoB;YAChBC,MAAM;QACV;QACAN,MAAMO,IAAAA,qCAAqB,EAAC3C,IAAI;YAC5B,GAAGL,KAAK;YACRC,KAAKqC,IAAAA,6BAAa,EAACrC,KAAKK;QAC5B;QACAF,YAAY0B,IAAAA,gCAAgB,EAAC1B,YAAY;YACrC4B,cAAc;gBACV,eAAe,IAAI;YACvB;QACJ;QACA9B,SAAS4B,IAAAA,gCAAgB,EAAC5B,SAAS;YAC/B6B,UAAU,IAAI;QAClB;QACA5B,WAAW2B,IAAAA,gCAAgB,EAAC3B,WAAW;YACnC6B,cAAc;gBACV,eAAe,IAAI;YACvB;QACJ;QACAU,OAAOxB,iBAAiBY,IAAAA,gCAAgB,EAAC9B,MAAM0C,KAAK,IAAI1B,SAAS;QACjEF;QACAe;QACAc,UAAUb,IAAAA,gCAAgB,EAAC9B,MAAM2C,QAAQ,EAAE;YACvCZ,UAAUtB,kBAAkB;YAC5BuB,cAAc;gBACVR;gBACAyB,UAAU,CAAC;gBACX,eAAe,IAAI;gBACnBhD,KAAKkB;YACT;QACJ;IACJ;AACJ"}