{"version":3,"sources":["createHeadlessTree.js"],"sourcesContent":["/**\n * creates a list of virtual tree items\n * and provides a map to access each item by id\n */ export function createHeadlessTree(virtualTreeItemProps) {\n    const root = createHeadlessTreeRootItem();\n    const itemsPerValue = new Map([\n        [\n            root.value,\n            root\n        ]\n    ]);\n    const items = [];\n    for(let index = 0; index < virtualTreeItemProps.length; index++){\n        const { parentValue =virtualTreeRootId , ...treeItemProps } = virtualTreeItemProps[index];\n        const nextItemProps = virtualTreeItemProps[index + 1];\n        const currentParent = itemsPerValue.get(parentValue);\n        if (!currentParent) {\n            if (process.env.NODE_ENV === 'development') {\n                // eslint-disable-next-line no-console\n                console.error(`useHeadlessTree: item ${virtualTreeItemProps[index].value} is wrongly positioned, did you properly ordered provided item props? make sure provided items are organized`);\n            }\n            break;\n        }\n        var _treeItemProps_itemType;\n        const itemType = (_treeItemProps_itemType = treeItemProps.itemType) !== null && _treeItemProps_itemType !== void 0 ? _treeItemProps_itemType : treeItemProps.value === undefined || (nextItemProps === null || nextItemProps === void 0 ? void 0 : nextItemProps.parentValue) !== treeItemProps.value ? 'leaf' : 'branch';\n        var _currentParent_level;\n        const currentLevel = ((_currentParent_level = currentParent.level) !== null && _currentParent_level !== void 0 ? _currentParent_level : 0) + 1;\n        const virtualTreeItem = {\n            value: treeItemProps.value,\n            getTreeItemProps: ()=>({\n                    ...treeItemProps,\n                    'aria-level': currentLevel,\n                    'aria-posinset': currentChildrenSize,\n                    'aria-setsize': currentParent.childrenValues.length,\n                    itemType\n                }),\n            level: currentLevel,\n            parentValue,\n            childrenValues: [],\n            index: -1\n        };\n        const currentChildrenSize = currentParent.childrenValues.push(virtualTreeItem.value);\n        itemsPerValue.set(virtualTreeItem.value, virtualTreeItem);\n        items.push(virtualTreeItem);\n    }\n    var _itemsPerValue_get_parentValue, _itemsPerValue_get;\n    const virtualTreeItems = {\n        root,\n        size: items.length,\n        getByIndex: (index)=>items[index],\n        getParent: (key)=>{\n            var _itemsPerValue_get1;\n            return (_itemsPerValue_get = itemsPerValue.get((_itemsPerValue_get_parentValue = (_itemsPerValue_get1 = itemsPerValue.get(key)) === null || _itemsPerValue_get1 === void 0 ? void 0 : _itemsPerValue_get1.parentValue) !== null && _itemsPerValue_get_parentValue !== void 0 ? _itemsPerValue_get_parentValue : root.value)) !== null && _itemsPerValue_get !== void 0 ? _itemsPerValue_get : root;\n        },\n        get: (key)=>itemsPerValue.get(key),\n        subtree: (key)=>HeadlessTreeSubtreeGenerator(key, virtualTreeItems),\n        children: (key)=>HeadlessTreeChildrenGenerator(key, virtualTreeItems),\n        ancestors: (key)=>HeadlessTreeAncestorsGenerator(key, virtualTreeItems),\n        visibleItems: (openItems)=>HeadlessTreeVisibleItemsGenerator(openItems, virtualTreeItems)\n    };\n    return virtualTreeItems;\n}\nexport const virtualTreeRootId = '__fuiHeadlessTreeRoot';\nfunction createHeadlessTreeRootItem() {\n    return {\n        parentValue: undefined,\n        value: virtualTreeRootId,\n        getTreeItemProps: ()=>{\n            if (process.env.NODE_ENV !== 'production') {\n                // eslint-disable-next-line no-console\n                console.error('useHeadlessTree: internal error, trying to access treeitem props from invalid root element');\n            }\n            return {\n                id: virtualTreeRootId,\n                value: virtualTreeRootId,\n                'aria-setsize': -1,\n                'aria-level': -1,\n                'aria-posinset': -1,\n                itemType: 'branch'\n            };\n        },\n        childrenValues: [],\n        get index () {\n            if (process.env.NODE_ENV !== 'production') {\n                // eslint-disable-next-line no-console\n                console.error('useHeadlessTree: internal error, trying to access treeitem props from invalid root element');\n            }\n            return -1;\n        },\n        level: 0\n    };\n}\n/**\n * Generator that returns all subtree of a given virtual tree item\n * @param key the key of the item to get the subtree from\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeSubtreeGenerator(key, virtualTreeItems) {\n    const item = virtualTreeItems.get(key);\n    if (!item || item.childrenValues.length === 0) {\n        return [];\n    }\n    let counter = item.childrenValues.length;\n    let index = item.index;\n    while(counter > 0){\n        const children = virtualTreeItems.getByIndex(++index);\n        yield children;\n        counter += children.childrenValues.length - 1;\n    }\n}\n/**\n * Generator that returns all children of a given virtual tree item\n * @param key the key of the item to get the children from\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeChildrenGenerator(key, virtualTreeItems) {\n    const item = virtualTreeItems.get(key);\n    if (!item || item.childrenValues.length === 0) {\n        return;\n    }\n    for (const childValue of item.childrenValues){\n        yield virtualTreeItems.get(childValue);\n    }\n}\n/**\n * Generator that returns all ancestors of a given virtual tree item\n * @param key the key of the item to get the children from\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeAncestorsGenerator(key, virtualTreeItems) {\n    let parent = virtualTreeItems.getParent(key);\n    while(parent !== virtualTreeItems.root){\n        yield parent;\n        parent = virtualTreeItems.getParent(parent.value);\n    }\n}\n/**\n * Generator that returns all visible items of a given virtual tree\n * @param openItems the open items of the tree\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeVisibleItemsGenerator(openItems, virtualTreeItems) {\n    for(let index = 0, visibleIndex = 0; index < virtualTreeItems.size; index++){\n        const item = virtualTreeItems.getByIndex(index);\n        if (isItemVisible(item, openItems, virtualTreeItems)) {\n            item.index = visibleIndex++;\n            yield item;\n        } else {\n            // Jump the amount of children the current item has, since those items will also be hidden\n            index += item.childrenValues.length;\n        }\n    }\n}\nfunction isItemVisible(item, openItems, virtualTreeItems) {\n    if (item.level === 1) {\n        return true;\n    }\n    while(item.parentValue && item.parentValue !== virtualTreeItems.root.value){\n        if (!openItems.has(item.parentValue)) {\n            return false;\n        }\n        const parent = virtualTreeItems.get(item.parentValue);\n        if (!parent) {\n            return false;\n        }\n        item = parent;\n    }\n    return true;\n}\n"],"names":["createHeadlessTree","virtualTreeRootId","virtualTreeItemProps","root","createHeadlessTreeRootItem","itemsPerValue","Map","value","items","index","length","parentValue","treeItemProps","nextItemProps","currentParent","get","process","env","NODE_ENV","console","error","_treeItemProps_itemType","itemType","undefined","_currentParent_level","currentLevel","level","virtualTreeItem","getTreeItemProps","currentChildrenSize","childrenValues","push","set","_itemsPerValue_get_parentValue","_itemsPerValue_get","virtualTreeItems","size","getByIndex","getParent","key","_itemsPerValue_get1","subtree","HeadlessTreeSubtreeGenerator","children","HeadlessTreeChildrenGenerator","ancestors","HeadlessTreeAncestorsGenerator","visibleItems","openItems","HeadlessTreeVisibleItemsGenerator","id","item","counter","childValue","parent","visibleIndex","isItemVisible","has"],"mappings":"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"}