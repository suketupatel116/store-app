{"version":3,"sources":["ImmutableSet.js"],"sourcesContent":["const emptyImmutableSet = createImmutableSet();\n/**\n * Avoid using *dangerouslyCreateImmutableSet*, since this method will expose internally used set, use  createImmutableSet instead,\n * @param internalSet - a set that is used internally to store values.\n */ function dangerouslyCreateImmutableSet(internalSet) {\n    return {\n        size: internalSet.size,\n        add (value) {\n            const nextSet = new Set(internalSet);\n            nextSet.add(value);\n            return dangerouslyCreateImmutableSet(nextSet);\n        },\n        clear () {\n            return emptyImmutableSet;\n        },\n        delete (value) {\n            const nextSet = new Set(internalSet);\n            nextSet.delete(value);\n            return dangerouslyCreateImmutableSet(nextSet);\n        },\n        has (value) {\n            return internalSet.has(value);\n        },\n        [Symbol.iterator] () {\n            return internalSet[Symbol.iterator]();\n        },\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        dangerouslyGetInternalSet_unstable: ()=>internalSet\n    };\n}\nfunction isImmutableSet(value) {\n    return typeof value === 'object' && value !== null && 'dangerouslyGetInternalSet_unstable' in value;\n}\n/**\n * properly creates an ImmutableSet instance from an iterable\n */ function createImmutableSet(iterable) {\n    const internalSet = new Set(iterable);\n    return dangerouslyCreateImmutableSet(internalSet);\n}\nexport const ImmutableSet = {\n    empty: emptyImmutableSet,\n    create: createImmutableSet,\n    isImmutableSet,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    dangerouslyCreate_unstable: dangerouslyCreateImmutableSet\n};\n"],"names":["ImmutableSet","emptyImmutableSet","createImmutableSet","dangerouslyCreateImmutableSet","internalSet","size","add","value","nextSet","Set","clear","delete","has","Symbol","iterator","dangerouslyGetInternalSet_unstable","isImmutableSet","iterable","empty","create","dangerouslyCreate_unstable"],"mappings":";;;;+BAuCaA;;aAAAA;;AAvCb,MAAMC,oBAAoBC;AAC1B;;;CAGC,GAAG,SAASC,8BAA8BC,WAAW,EAAE;IACpD,OAAO;QACHC,MAAMD,YAAYC,IAAI;QACtBC,KAAKC,KAAK,EAAE;YACR,MAAMC,UAAU,IAAIC,IAAIL;YACxBI,QAAQF,GAAG,CAACC;YACZ,OAAOJ,8BAA8BK;QACzC;QACAE,SAAS;YACL,OAAOT;QACX;QACAU,QAAQJ,KAAK,EAAE;YACX,MAAMC,UAAU,IAAIC,IAAIL;YACxBI,QAAQG,MAAM,CAACJ;YACf,OAAOJ,8BAA8BK;QACzC;QACAI,KAAKL,KAAK,EAAE;YACR,OAAOH,YAAYQ,GAAG,CAACL;QAC3B;QACA,CAACM,OAAOC,QAAQ,CAAC,IAAI;YACjB,OAAOV,WAAW,CAACS,OAAOC,QAAQ,CAAC;QACvC;QACA,gEAAgE;QAChEC,oCAAoC,IAAIX;IAC5C;AACJ;AACA,SAASY,eAAeT,KAAK,EAAE;IAC3B,OAAO,OAAOA,UAAU,YAAYA,UAAU,IAAI,IAAI,wCAAwCA;AAClG;AACA;;CAEC,GAAG,SAASL,mBAAmBe,QAAQ,EAAE;IACtC,MAAMb,cAAc,IAAIK,IAAIQ;IAC5B,OAAOd,8BAA8BC;AACzC;AACO,MAAMJ,eAAe;IACxBkB,OAAOjB;IACPkB,QAAQjB;IACRc;IACA,gEAAgE;IAChEI,4BAA4BjB;AAChC"}