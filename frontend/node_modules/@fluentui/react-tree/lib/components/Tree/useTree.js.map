{"version":3,"sources":["useTree.ts"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport type {\n  TreeCheckedChangeData,\n  TreeCheckedChangeEvent,\n  TreeNavigationData_unstable,\n  TreeNavigationEvent_unstable,\n  TreeOpenChangeData,\n  TreeOpenChangeEvent,\n  TreeProps,\n  TreeState,\n} from './Tree.types';\nimport { createNextOpenItems, useControllableOpenItems } from '../../hooks/useControllableOpenItems';\nimport { useTreeNavigation } from './useTreeNavigation';\nimport { useControllableCheckedItems } from './useControllableCheckedItems';\nimport { useTreeContext_unstable } from '../../contexts/treeContext';\nimport { useRootTree } from '../../hooks/useRootTree';\nimport { useSubtree } from '../../hooks/useSubtree';\n\nexport const useTree_unstable = (props: TreeProps, ref: React.Ref<HTMLElement>): TreeState => {\n  const [openItems, setOpenItems] = useControllableOpenItems(props);\n  const [checkedItems] = useControllableCheckedItems(props);\n  const [navigate, navigationRef] = useTreeNavigation();\n\n  const handleOpenChange = useEventCallback((event: TreeOpenChangeEvent, data: TreeOpenChangeData) => {\n    props.onOpenChange?.(event, data);\n    setOpenItems(createNextOpenItems(data, openItems));\n  });\n  const handleCheckedChange = useEventCallback((event: TreeCheckedChangeEvent, data: TreeCheckedChangeData) => {\n    props.onCheckedChange?.(event, data);\n    // TODO: implement next checked items for  tree\n  });\n  const handleNavigation = useEventCallback(\n    (event: TreeNavigationEvent_unstable, data: TreeNavigationData_unstable) => {\n      props.onNavigation_unstable?.(event, data);\n      navigate(data);\n    },\n  );\n\n  const baseProps = {\n    ...props,\n    openItems,\n    checkedItems,\n    onOpenChange: handleOpenChange,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    onNavigation_unstable: handleNavigation,\n    onCheckedChange: handleCheckedChange,\n  };\n\n  const baseRef = useMergedRefs(ref, navigationRef);\n\n  const isSubtree = useTreeContext_unstable(ctx => ctx.level > 0);\n  // as isSubTree is static, this doesn't break rule of hooks\n  // and if this becomes an issue later on, this can be easily converted\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isSubtree ? useSubtree(baseProps, baseRef) : useRootTree(baseProps, baseRef);\n};\n"],"names":["React","useEventCallback","useMergedRefs","createNextOpenItems","useControllableOpenItems","useTreeNavigation","useControllableCheckedItems","useTreeContext_unstable","useRootTree","useSubtree","useTree_unstable","props","ref","openItems","setOpenItems","checkedItems","navigate","navigationRef","handleOpenChange","event","data","onOpenChange","handleCheckedChange","onCheckedChange","handleNavigation","onNavigation_unstable","baseProps","baseRef","isSubtree","ctx","level"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,gBAAgB,EAAEC,aAAa,QAAQ,4BAA4B;AAW5E,SAASC,mBAAmB,EAAEC,wBAAwB,QAAQ,uCAAuC;AACrG,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,2BAA2B,QAAQ,gCAAgC;AAC5E,SAASC,uBAAuB,QAAQ,6BAA6B;AACrE,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,UAAU,QAAQ,yBAAyB;AAEpD,OAAO,MAAMC,mBAAmB,CAACC,OAAkBC,MAA2C;IAC5F,MAAM,CAACC,WAAWC,aAAa,GAAGV,yBAAyBO;IAC3D,MAAM,CAACI,aAAa,GAAGT,4BAA4BK;IACnD,MAAM,CAACK,UAAUC,cAAc,GAAGZ;IAElC,MAAMa,mBAAmBjB,iBAAiB,CAACkB,OAA4BC,OAA6B;YAClGT;QAAAA,CAAAA,sBAAAA,MAAMU,YAAY,cAAlBV,iCAAAA,KAAAA,IAAAA,oBAAAA,KAAAA,OAAqBQ,OAAOC;QAC5BN,aAAaX,oBAAoBiB,MAAMP;IACzC;IACA,MAAMS,sBAAsBrB,iBAAiB,CAACkB,OAA+BC,OAAgC;YAC3GT;QAAAA,CAAAA,yBAAAA,MAAMY,eAAe,cAArBZ,oCAAAA,KAAAA,IAAAA,uBAAAA,KAAAA,OAAwBQ,OAAOC;IAC/B,+CAA+C;IACjD;IACA,MAAMI,mBAAmBvB,iBACvB,CAACkB,OAAqCC,OAAsC;YAC1ET;QAAAA,CAAAA,+BAAAA,MAAMc,qBAAqB,cAA3Bd,0CAAAA,KAAAA,IAAAA,6BAAAA,KAAAA,OAA8BQ,OAAOC;QACrCJ,SAASI;IACX;IAGF,MAAMM,YAAY;QAChB,GAAGf,KAAK;QACRE;QACAE;QACAM,cAAcH;QACd,gEAAgE;QAChEO,uBAAuBD;QACvBD,iBAAiBD;IACnB;IAEA,MAAMK,UAAUzB,cAAcU,KAAKK;IAEnC,MAAMW,YAAYrB,wBAAwBsB,CAAAA,MAAOA,IAAIC,KAAK,GAAG;IAC7D,2DAA2D;IAC3D,sEAAsE;IACtE,sDAAsD;IACtD,OAAOF,YAAYnB,WAAWiB,WAAWC,WAAWnB,YAAYkB,WAAWC,QAAQ;AACrF,EAAE"}