{"version":3,"sources":["useProgressBar.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldContext_unstable } from '@fluentui/react-field';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\nimport { clampValue, clampMax } from '../../utils/index';\n/**\n * Create the state required to render ProgressBar.\n *\n * The returned state can be modified with hooks such as useProgressBarStyles_unstable,\n * before being passed to renderProgressBar_unstable.\n *\n * @param props - props from this instance of ProgressBar\n * @param ref - reference to root HTMLElement of ProgressBar\n */ export const useProgressBar_unstable = (props, ref)=>{\n    const field = useFieldContext_unstable();\n    const fieldState = field === null || field === void 0 ? void 0 : field.validationState;\n    const { color =fieldState === 'error' || fieldState === 'warning' || fieldState === 'success' ? fieldState : 'brand' , shape ='rounded' , thickness ='medium'  } = props;\n    var _props_max;\n    const max = clampMax((_props_max = props.max) !== null && _props_max !== void 0 ? _props_max : 1);\n    const value = clampValue(props.value, max);\n    const root = getNativeElementProps('div', {\n        ref,\n        role: 'progressbar',\n        'aria-valuemin': value !== undefined ? 0 : undefined,\n        'aria-valuemax': value !== undefined ? max : undefined,\n        'aria-valuenow': value,\n        'aria-labelledby': field === null || field === void 0 ? void 0 : field.labelId,\n        ...props\n    });\n    if (field && (field.validationMessageId || field.hintId)) {\n        // Prepend the field's validation message and/or hint to the user's aria-describedby\n        root['aria-describedby'] = [\n            field === null || field === void 0 ? void 0 : field.validationMessageId,\n            field === null || field === void 0 ? void 0 : field.hintId,\n            root['aria-describedby']\n        ].filter(Boolean).join(' ');\n    }\n    const bar = resolveShorthand(props.bar, {\n        required: true\n    });\n    const state = {\n        color,\n        max,\n        shape,\n        thickness,\n        value,\n        components: {\n            root: 'div',\n            bar: 'div'\n        },\n        root,\n        bar\n    };\n    return state;\n};\n"],"names":["useProgressBar_unstable","props","ref","field","useFieldContext_unstable","fieldState","validationState","color","shape","thickness","_props_max","max","clampMax","value","clampValue","root","getNativeElementProps","role","undefined","labelId","validationMessageId","hintId","filter","Boolean","join","bar","resolveShorthand","required","state","components"],"mappings":";;;;+BAYiBA;;aAAAA;;;6DAZM;4BACkB;gCACe;uBACnB;AAS1B,MAAMA,0BAA0B,CAACC,OAAOC,MAAM;IACrD,MAAMC,QAAQC,IAAAA,oCAAwB;IACtC,MAAMC,aAAaF,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMG,eAAe;IACtF,MAAM,EAAEC,OAAOF,eAAe,WAAWA,eAAe,aAAaA,eAAe,YAAYA,aAAa,OAAO,CAAA,EAAGG,OAAO,UAAS,EAAGC,WAAW,SAAQ,EAAG,GAAGR;IACnK,IAAIS;IACJ,MAAMC,MAAMC,IAAAA,eAAQ,EAAC,AAACF,CAAAA,aAAaT,MAAMU,GAAG,AAAD,MAAO,IAAI,IAAID,eAAe,KAAK,IAAIA,aAAa,CAAC;IAChG,MAAMG,QAAQC,IAAAA,iBAAU,EAACb,MAAMY,KAAK,EAAEF;IACtC,MAAMI,OAAOC,IAAAA,qCAAqB,EAAC,OAAO;QACtCd;QACAe,MAAM;QACN,iBAAiBJ,UAAUK,YAAY,IAAIA,SAAS;QACpD,iBAAiBL,UAAUK,YAAYP,MAAMO,SAAS;QACtD,iBAAiBL;QACjB,mBAAmBV,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMgB,OAAO;QAC9E,GAAGlB,KAAK;IACZ;IACA,IAAIE,SAAUA,CAAAA,MAAMiB,mBAAmB,IAAIjB,MAAMkB,MAAM,AAAD,GAAI;QACtD,oFAAoF;QACpFN,IAAI,CAAC,mBAAmB,GAAG;YACvBZ,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMiB,mBAAmB;YACvEjB,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMkB,MAAM;YAC1DN,IAAI,CAAC,mBAAmB;SAC3B,CAACO,MAAM,CAACC,SAASC,IAAI,CAAC;IAC3B,CAAC;IACD,MAAMC,MAAMC,IAAAA,gCAAgB,EAACzB,MAAMwB,GAAG,EAAE;QACpCE,UAAU,IAAI;IAClB;IACA,MAAMC,QAAQ;QACVrB;QACAI;QACAH;QACAC;QACAI;QACAgB,YAAY;YACRd,MAAM;YACNU,KAAK;QACT;QACAV;QACAU;IACJ;IACA,OAAOG;AACX"}