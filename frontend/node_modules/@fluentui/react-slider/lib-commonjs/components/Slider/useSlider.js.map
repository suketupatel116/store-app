{"version":3,"sources":["useSlider.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useId, useMergedRefs } from '@fluentui/react-utilities';\nimport { useSliderState_unstable } from './useSliderState';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nexport const useSlider_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true\n    });\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'input',\n        excludedPropNames: [\n            'onChange',\n            'size'\n        ]\n    });\n    const { disabled , vertical , size ='medium' , // Slots\n    root , input , rail , thumb  } = props;\n    const state = {\n        disabled,\n        size,\n        vertical,\n        components: {\n            input: 'input',\n            rail: 'div',\n            root: 'div',\n            thumb: 'div'\n        },\n        root: resolveShorthand(root, {\n            required: true,\n            defaultProps: nativeProps.root\n        }),\n        input: resolveShorthand(input, {\n            required: true,\n            defaultProps: {\n                id: useId('slider-', props.id),\n                ref,\n                ...nativeProps.primary,\n                type: 'range',\n                orient: vertical ? 'vertical' : undefined\n            }\n        }),\n        rail: resolveShorthand(rail, {\n            required: true\n        }),\n        thumb: resolveShorthand(thumb, {\n            required: true\n        })\n    };\n    state.root.ref = useMergedRefs(state.root.ref, useFocusWithin());\n    useSliderState_unstable(state, props);\n    return state;\n};\n"],"names":["useSlider_unstable","props","ref","useFieldControlProps_unstable","supportsLabelFor","nativeProps","getPartitionedNativeProps","primarySlotTagName","excludedPropNames","disabled","vertical","size","root","input","rail","thumb","state","components","resolveShorthand","required","defaultProps","id","useId","primary","type","orient","undefined","useMergedRefs","useFocusWithin","useSliderState_unstable"],"mappings":";;;;+BAKaA;;aAAAA;;;6DALU;4BACuB;gCACoC;gCAC1C;8BACT;AACxB,MAAMA,qBAAqB,CAACC,OAAOC,MAAM;IAC5C,+CAA+C;IAC/CD,QAAQE,IAAAA,yCAA6B,EAACF,OAAO;QACzCG,kBAAkB,IAAI;IAC1B;IACA,MAAMC,cAAcC,IAAAA,yCAAyB,EAAC;QAC1CL;QACAM,oBAAoB;QACpBC,mBAAmB;YACf;YACA;SACH;IACL;IACA,MAAM,EAAEC,SAAQ,EAAGC,SAAQ,EAAGC,MAAM,SAAQ,EAC5CC,KAAI,EAAGC,MAAK,EAAGC,KAAI,EAAGC,MAAK,EAAG,GAAGd;IACjC,MAAMe,QAAQ;QACVP;QACAE;QACAD;QACAO,YAAY;YACRJ,OAAO;YACPC,MAAM;YACNF,MAAM;YACNG,OAAO;QACX;QACAH,MAAMM,IAAAA,gCAAgB,EAACN,MAAM;YACzBO,UAAU,IAAI;YACdC,cAAcf,YAAYO,IAAI;QAClC;QACAC,OAAOK,IAAAA,gCAAgB,EAACL,OAAO;YAC3BM,UAAU,IAAI;YACdC,cAAc;gBACVC,IAAIC,IAAAA,qBAAK,EAAC,WAAWrB,MAAMoB,EAAE;gBAC7BnB;gBACA,GAAGG,YAAYkB,OAAO;gBACtBC,MAAM;gBACNC,QAAQf,WAAW,aAAagB,SAAS;YAC7C;QACJ;QACAZ,MAAMI,IAAAA,gCAAgB,EAACJ,MAAM;YACzBK,UAAU,IAAI;QAClB;QACAJ,OAAOG,IAAAA,gCAAgB,EAACH,OAAO;YAC3BI,UAAU,IAAI;QAClB;IACJ;IACAH,MAAMJ,IAAI,CAACV,GAAG,GAAGyB,IAAAA,6BAAa,EAACX,MAAMJ,IAAI,CAACV,GAAG,EAAE0B,IAAAA,4BAAc;IAC7DC,IAAAA,uCAAuB,EAACb,OAAOf;IAC/B,OAAOe;AACX"}