{"version":3,"sources":["toFloatingUIPadding.ts"],"sourcesContent":["import type { SideObject } from '@floating-ui/dom';\nimport { PositioningOptions } from '../types';\n\nexport function toFloatingUIPadding(\n  padding: NonNullable<PositioningOptions['overflowBoundaryPadding']>,\n  isRtl: boolean,\n): number | Partial<SideObject> {\n  if (typeof padding === 'number') {\n    return padding;\n  }\n\n  const { start, end, ...verticalPadding } = padding;\n\n  const paddingObject: Partial<SideObject> = verticalPadding;\n\n  const left = isRtl ? 'end' : 'start';\n  const right = isRtl ? 'start' : 'end';\n\n  // assign properties explicitly since undefined values are actually handled by floating UI\n  // TODO create floating UI issue\n  if (padding[left]) {\n    paddingObject.left = padding[left];\n  }\n\n  if (padding[right]) {\n    paddingObject.right = padding[right];\n  }\n\n  return paddingObject;\n}\n"],"names":["toFloatingUIPadding","padding","isRtl","start","end","verticalPadding","paddingObject","left","right"],"mappings":"AAGA,OAAO,SAASA,oBACdC,OAAmE,EACnEC,KAAc,EACgB;IAC9B,IAAI,OAAOD,YAAY,UAAU;QAC/B,OAAOA;IACT,CAAC;IAED,MAAM,EAAEE,MAAK,EAAEC,IAAG,EAAE,GAAGC,iBAAiB,GAAGJ;IAE3C,MAAMK,gBAAqCD;IAE3C,MAAME,OAAOL,QAAQ,QAAQ,OAAO;IACpC,MAAMM,QAAQN,QAAQ,UAAU,KAAK;IAErC,0FAA0F;IAC1F,gCAAgC;IAChC,IAAID,OAAO,CAACM,KAAK,EAAE;QACjBD,cAAcC,IAAI,GAAGN,OAAO,CAACM,KAAK;IACpC,CAAC;IAED,IAAIN,OAAO,CAACO,MAAM,EAAE;QAClBF,cAAcE,KAAK,GAAGP,OAAO,CAACO,MAAM;IACtC,CAAC;IAED,OAAOF;AACT,CAAC"}