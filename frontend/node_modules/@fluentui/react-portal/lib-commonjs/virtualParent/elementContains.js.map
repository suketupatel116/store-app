{"version":3,"sources":["elementContains.js"],"sourcesContent":["import { getParent } from './getParent';\n/**\n * Similar functionality to `element.contains` DOM API for use without of order DOM elements that\n * checks the virtual parent hierarchy. If a virtual parents exists, it is chosen over the actual parent\n *\n * @returns true if the child can find the parent in its virtual hierarchy\n */ export function elementContains(parent, child) {\n    if (!parent || !child) {\n        return false;\n    }\n    if (parent === child) {\n        return true;\n    } else {\n        // Tracks references of nodes that have been visited to prevent infinite loops\n        const set = new WeakSet();\n        while(child){\n            const nextParent = getParent(child, {\n                skipVirtual: set.has(child)\n            });\n            set.add(child);\n            if (nextParent === parent) {\n                return true;\n            }\n            child = nextParent;\n        }\n    }\n    return false;\n}\n"],"names":["elementContains","parent","child","set","WeakSet","nextParent","getParent","skipVirtual","has","add"],"mappings":";;;;+BAMoBA;;aAAAA;;2BANM;AAMf,SAASA,gBAAgBC,MAAM,EAAEC,KAAK,EAAE;IAC/C,IAAI,CAACD,UAAU,CAACC,OAAO;QACnB,OAAO,KAAK;IAChB,CAAC;IACD,IAAID,WAAWC,OAAO;QAClB,OAAO,IAAI;IACf,OAAO;QACH,8EAA8E;QAC9E,MAAMC,MAAM,IAAIC;QAChB,MAAMF,MAAM;YACR,MAAMG,aAAaC,IAAAA,oBAAS,EAACJ,OAAO;gBAChCK,aAAaJ,IAAIK,GAAG,CAACN;YACzB;YACAC,IAAIM,GAAG,CAACP;YACR,IAAIG,eAAeJ,QAAQ;gBACvB,OAAO,IAAI;YACf,CAAC;YACDC,QAAQG;QACZ;IACJ,CAAC;IACD,OAAO,KAAK;AAChB"}