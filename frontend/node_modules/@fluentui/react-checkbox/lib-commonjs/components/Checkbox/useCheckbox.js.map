{"version":3,"sources":["useCheckbox.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useControllableState, useEventCallback, useId, useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-utilities';\nimport { Checkmark12Filled, Checkmark16Filled, Square12Filled, Square16Filled, CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Checkbox.\n *\n * The returned state can be modified with hooks such as useCheckboxStyles_unstable,\n * before being passed to renderCheckbox_unstable.\n *\n * @param props - props from this instance of Checkbox\n * @param ref - reference to `<input>` element of Checkbox\n */ export const useCheckbox_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true,\n        supportsRequired: true\n    });\n    const { disabled =false , required , shape ='square' , size ='medium' , labelPosition ='after' , onChange  } = props;\n    const [checked, setChecked] = useControllableState({\n        defaultState: props.defaultChecked,\n        state: props.checked,\n        initialState: false\n    });\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'input',\n        excludedPropNames: [\n            'checked',\n            'defaultChecked',\n            'size',\n            'onChange'\n        ]\n    });\n    const mixed = checked === 'mixed';\n    const id = useId('checkbox-', nativeProps.primary.id);\n    let checkmarkIcon;\n    if (mixed) {\n        if (shape === 'circular') {\n            checkmarkIcon = /*#__PURE__*/ React.createElement(CircleFilled, null);\n        } else {\n            checkmarkIcon = size === 'large' ? /*#__PURE__*/ React.createElement(Square16Filled, null) : /*#__PURE__*/ React.createElement(Square12Filled, null);\n        }\n    } else if (checked) {\n        checkmarkIcon = size === 'large' ? /*#__PURE__*/ React.createElement(Checkmark16Filled, null) : /*#__PURE__*/ React.createElement(Checkmark12Filled, null);\n    }\n    const state = {\n        shape,\n        checked,\n        disabled,\n        size,\n        labelPosition,\n        components: {\n            root: 'span',\n            input: 'input',\n            indicator: 'div',\n            label: Label\n        },\n        root: resolveShorthand(props.root, {\n            required: true,\n            defaultProps: {\n                ref: useFocusWithin(),\n                ...nativeProps.root\n            }\n        }),\n        input: resolveShorthand(props.input, {\n            required: true,\n            defaultProps: {\n                type: 'checkbox',\n                id,\n                ref,\n                checked: checked === true,\n                ...nativeProps.primary\n            }\n        }),\n        label: resolveShorthand(props.label, {\n            required: false,\n            defaultProps: {\n                htmlFor: id,\n                disabled,\n                required,\n                size: 'medium'\n            }\n        }),\n        indicator: resolveShorthand(props.indicator, {\n            required: true,\n            defaultProps: {\n                'aria-hidden': true,\n                children: checkmarkIcon\n            }\n        })\n    };\n    state.input.onChange = useEventCallback((ev)=>{\n        const val = ev.currentTarget.indeterminate ? 'mixed' : ev.currentTarget.checked;\n        onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n            checked: val\n        });\n        setChecked(val);\n    });\n    // Create a ref object for the input element so we can use it to set the indeterminate prop.\n    // Use useMergedRefs, since the ref might be undefined or a function-ref (no .current)\n    const inputRef = useMergedRefs(state.input.ref);\n    state.input.ref = inputRef;\n    // Set the <input> element's checked and indeterminate properties based on our tri-state property.\n    // Since indeterminate can only be set via javascript, it has to be done in a layout effect.\n    useIsomorphicLayoutEffect(()=>{\n        if (inputRef.current) {\n            inputRef.current.indeterminate = mixed;\n        }\n    }, [\n        inputRef,\n        mixed\n    ]);\n    return state;\n};\n"],"names":["useCheckbox_unstable","props","ref","useFieldControlProps_unstable","supportsLabelFor","supportsRequired","disabled","required","shape","size","labelPosition","onChange","checked","setChecked","useControllableState","defaultState","defaultChecked","state","initialState","nativeProps","getPartitionedNativeProps","primarySlotTagName","excludedPropNames","mixed","id","useId","primary","checkmarkIcon","React","createElement","CircleFilled","Square16Filled","Square12Filled","Checkmark16Filled","Checkmark12Filled","components","root","input","indicator","label","Label","resolveShorthand","defaultProps","useFocusWithin","type","htmlFor","children","useEventCallback","ev","val","currentTarget","indeterminate","inputRef","useMergedRefs","useIsomorphicLayoutEffect","current"],"mappings":"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"}