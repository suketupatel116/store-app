{"version":3,"sources":["useAccordionHeader.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, isResolvedShorthand, resolveShorthand, useEventCallback } from '@fluentui/react-utilities';\nimport { useAccordionItemContext_unstable } from '../AccordionItem/index';\nimport { useARIAButtonShorthand } from '@fluentui/react-aria';\nimport { useAccordionContext_unstable } from '../Accordion/AccordionContext';\nimport { ChevronRightRegular } from '@fluentui/react-icons';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionHeader properties\n * @param ref - reference to root HTMLElement of AccordionHeader\n */ export const useAccordionHeader_unstable = (props, ref)=>{\n    const { as , icon , button , expandIcon , inline =false , size ='medium' , expandIconPosition ='start'  } = props;\n    const { onHeaderClick: onAccordionHeaderClick , disabled , open  } = useAccordionItemContext_unstable();\n    /**\n   * force disabled state on button if accordion isn't collapsible\n   * and this is the only item opened\n   */ const disabledFocusable = useAccordionContext_unstable((ctx)=>!ctx.collapsible && ctx.openItems.length === 1 && open);\n    const { dir  } = useFluent();\n    // Calculate how to rotate the expand icon [>] (ChevronRightRegular)\n    let expandIconRotation;\n    if (expandIconPosition === 'end') {\n        // If expand icon is at the end, the chevron points up [^] when open, and down [v] when closed\n        expandIconRotation = open ? -90 : 90;\n    } else {\n        // Otherwise, the chevron points down [v] when open, and right [>] (or left [<] in RTL) when closed\n        expandIconRotation = open ? 90 : dir !== 'rtl' ? 0 : 180;\n    }\n    return {\n        disabled,\n        open,\n        size,\n        inline,\n        expandIconPosition,\n        components: {\n            root: 'div',\n            button: 'button',\n            expandIcon: 'span',\n            icon: 'div'\n        },\n        root: getNativeElementProps(as || 'div', {\n            ref,\n            ...props\n        }),\n        icon: resolveShorthand(icon),\n        expandIcon: resolveShorthand(expandIcon, {\n            required: true,\n            defaultProps: {\n                children: /*#__PURE__*/ React.createElement(ChevronRightRegular, {\n                    style: {\n                        transform: `rotate(${expandIconRotation}deg)`\n                    }\n                }),\n                'aria-hidden': true\n            }\n        }),\n        button: resolveShorthand({\n            ...useARIAButtonShorthand(button, {\n                required: true,\n                defaultProps: {\n                    disabled,\n                    disabledFocusable,\n                    'aria-expanded': open,\n                    type: 'button'\n                }\n            }),\n            onClick: useEventCallback((ev)=>{\n                if (isResolvedShorthand(button)) {\n                    var _button_onClick;\n                    (_button_onClick = button.onClick) === null || _button_onClick === void 0 ? void 0 : _button_onClick.call(button, ev);\n                }\n                if (!ev.defaultPrevented) {\n                    onAccordionHeaderClick(ev);\n                }\n            })\n        }, {\n            required: true\n        })\n    };\n};\n"],"names":["useAccordionHeader_unstable","props","ref","as","icon","button","expandIcon","inline","size","expandIconPosition","onHeaderClick","onAccordionHeaderClick","disabled","open","useAccordionItemContext_unstable","disabledFocusable","useAccordionContext_unstable","ctx","collapsible","openItems","length","dir","useFluent","expandIconRotation","components","root","getNativeElementProps","resolveShorthand","required","defaultProps","children","React","createElement","ChevronRightRegular","style","transform","useARIAButtonShorthand","type","onClick","useEventCallback","ev","isResolvedShorthand","_button_onClick","call","defaultPrevented"],"mappings":";;;;+BAWiBA;;aAAAA;;;6DAXM;gCACwE;uBAC9C;2BACV;kCACM;4BACT;qCACY;AAKrC,MAAMA,8BAA8B,CAACC,OAAOC,MAAM;IACzD,MAAM,EAAEC,GAAE,EAAGC,KAAI,EAAGC,OAAM,EAAGC,WAAU,EAAGC,QAAQ,KAAK,CAAA,EAAGC,MAAM,SAAQ,EAAGC,oBAAoB,QAAO,EAAG,GAAGR;IAC5G,MAAM,EAAES,eAAeC,uBAAsB,EAAGC,SAAQ,EAAGC,KAAI,EAAG,GAAGC,IAAAA,uCAAgC;IACrG;;;GAGD,GAAG,MAAMC,oBAAoBC,IAAAA,8CAA4B,EAAC,CAACC,MAAM,CAACA,IAAIC,WAAW,IAAID,IAAIE,SAAS,CAACC,MAAM,KAAK,KAAKP;IAClH,MAAM,EAAEQ,IAAG,EAAG,GAAGC,IAAAA,uCAAS;IAC1B,oEAAoE;IACpE,IAAIC;IACJ,IAAId,uBAAuB,OAAO;QAC9B,8FAA8F;QAC9Fc,qBAAqBV,OAAO,CAAC,KAAK,EAAE;IACxC,OAAO;QACH,mGAAmG;QACnGU,qBAAqBV,OAAO,KAAKQ,QAAQ,QAAQ,IAAI,GAAG;IAC5D,CAAC;IACD,OAAO;QACHT;QACAC;QACAL;QACAD;QACAE;QACAe,YAAY;YACRC,MAAM;YACNpB,QAAQ;YACRC,YAAY;YACZF,MAAM;QACV;QACAqB,MAAMC,IAAAA,qCAAqB,EAACvB,MAAM,OAAO;YACrCD;YACA,GAAGD,KAAK;QACZ;QACAG,MAAMuB,IAAAA,gCAAgB,EAACvB;QACvBE,YAAYqB,IAAAA,gCAAgB,EAACrB,YAAY;YACrCsB,UAAU,IAAI;YACdC,cAAc;gBACVC,UAAU,WAAW,GAAGC,OAAMC,aAAa,CAACC,+BAAmB,EAAE;oBAC7DC,OAAO;wBACHC,WAAW,CAAC,OAAO,EAAEZ,mBAAmB,IAAI,CAAC;oBACjD;gBACJ;gBACA,eAAe,IAAI;YACvB;QACJ;QACAlB,QAAQsB,IAAAA,gCAAgB,EAAC;YACrB,GAAGS,IAAAA,iCAAsB,EAAC/B,QAAQ;gBAC9BuB,UAAU,IAAI;gBACdC,cAAc;oBACVjB;oBACAG;oBACA,iBAAiBF;oBACjBwB,MAAM;gBACV;YACJ,EAAE;YACFC,SAASC,IAAAA,gCAAgB,EAAC,CAACC,KAAK;gBAC5B,IAAIC,IAAAA,mCAAmB,EAACpC,SAAS;oBAC7B,IAAIqC;oBACHA,CAAAA,kBAAkBrC,OAAOiC,OAAO,AAAD,MAAO,IAAI,IAAII,oBAAoB,KAAK,IAAI,KAAK,IAAIA,gBAAgBC,IAAI,CAACtC,QAAQmC,GAAG;gBACzH,CAAC;gBACD,IAAI,CAACA,GAAGI,gBAAgB,EAAE;oBACtBjC,uBAAuB6B;gBAC3B,CAAC;YACL;QACJ,GAAG;YACCZ,UAAU,IAAI;QAClB;IACJ;AACJ"}