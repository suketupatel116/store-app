{"version":3,"sources":["useAccordion.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\n/**\n * Returns the props and state required to render the component\n * @param props - Accordion properties\n * @param ref - reference to root HTMLElement of Accordion\n */ export const useAccordion_unstable = (props, ref)=>{\n    const { openItems: controlledOpenItems , defaultOpenItems , multiple =false , collapsible =false , onToggle , navigation  } = props;\n    const [openItems, setOpenItems] = useControllableState({\n        state: React.useMemo(()=>normalizeValues(controlledOpenItems), [\n            controlledOpenItems\n        ]),\n        defaultState: ()=>initializeUncontrolledOpenItems({\n                defaultOpenItems,\n                multiple\n            }),\n        initialState: []\n    });\n    const arrowNavigationProps = useArrowNavigationGroup({\n        circular: navigation === 'circular',\n        tabbable: true\n    });\n    const requestToggle = useEventCallback((event, data)=>{\n        onToggle === null || onToggle === void 0 ? void 0 : onToggle(event, data);\n        setOpenItems((previousOpenItems)=>updateOpenItems(data.value, previousOpenItems, multiple, collapsible));\n    });\n    return {\n        collapsible,\n        navigation,\n        openItems,\n        requestToggle,\n        components: {\n            root: 'div'\n        },\n        root: getNativeElementProps('div', {\n            ...props,\n            ...navigation ? arrowNavigationProps : {},\n            ref\n        })\n    };\n};\n/**\n * Initial value for the uncontrolled case of the list of open indexes\n */ function initializeUncontrolledOpenItems({ defaultOpenItems , multiple  }) {\n    if (defaultOpenItems !== undefined) {\n        if (Array.isArray(defaultOpenItems)) {\n            return multiple ? defaultOpenItems : [\n                defaultOpenItems[0]\n            ];\n        }\n        return [\n            defaultOpenItems\n        ];\n    }\n    return [];\n}\n/**\n * Updates the list of open indexes based on an index that changes\n * @param value - the index that will change\n * @param previousOpenItems - list of current open indexes\n * @param multiple - if Accordion support multiple Panels opened at the same time\n * @param collapsible - if Accordion support multiple Panels closed at the same time\n */ function updateOpenItems(value, previousOpenItems, multiple, collapsible) {\n    if (multiple) {\n        if (previousOpenItems.includes(value)) {\n            if (previousOpenItems.length > 1 || collapsible) {\n                return previousOpenItems.filter((i)=>i !== value);\n            }\n        } else {\n            return [\n                ...previousOpenItems,\n                value\n            ].sort();\n        }\n    } else {\n        return previousOpenItems[0] === value && collapsible ? [] : [\n            value\n        ];\n    }\n    return previousOpenItems;\n}\n/**\n * Normalizes Accordion index into an array of indexes\n */ function normalizeValues(index) {\n    if (index === undefined) {\n        return undefined;\n    }\n    return Array.isArray(index) ? index : [\n        index\n    ];\n}\n"],"names":["useAccordion_unstable","props","ref","openItems","controlledOpenItems","defaultOpenItems","multiple","collapsible","onToggle","navigation","setOpenItems","useControllableState","state","React","useMemo","normalizeValues","defaultState","initializeUncontrolledOpenItems","initialState","arrowNavigationProps","useArrowNavigationGroup","circular","tabbable","requestToggle","useEventCallback","event","data","previousOpenItems","updateOpenItems","value","components","root","getNativeElementProps","undefined","Array","isArray","includes","length","filter","i","sort","index"],"mappings":";;;;+BAOiBA;;aAAAA;;;6DAPM;gCACuD;8BACtC;AAK7B,MAAMA,wBAAwB,CAACC,OAAOC,MAAM;IACnD,MAAM,EAAEC,WAAWC,oBAAmB,EAAGC,iBAAgB,EAAGC,UAAU,KAAK,CAAA,EAAGC,aAAa,KAAK,CAAA,EAAGC,SAAQ,EAAGC,WAAU,EAAG,GAAGR;IAC9H,MAAM,CAACE,WAAWO,aAAa,GAAGC,IAAAA,oCAAoB,EAAC;QACnDC,OAAOC,OAAMC,OAAO,CAAC,IAAIC,gBAAgBX,sBAAsB;YAC3DA;SACH;QACDY,cAAc,IAAIC,gCAAgC;gBAC1CZ;gBACAC;YACJ;QACJY,cAAc,EAAE;IACpB;IACA,MAAMC,uBAAuBC,IAAAA,qCAAuB,EAAC;QACjDC,UAAUZ,eAAe;QACzBa,UAAU,IAAI;IAClB;IACA,MAAMC,gBAAgBC,IAAAA,gCAAgB,EAAC,CAACC,OAAOC,OAAO;QAClDlB,aAAa,IAAI,IAAIA,aAAa,KAAK,IAAI,KAAK,IAAIA,SAASiB,OAAOC,KAAK;QACzEhB,aAAa,CAACiB,oBAAoBC,gBAAgBF,KAAKG,KAAK,EAAEF,mBAAmBrB,UAAUC;IAC/F;IACA,OAAO;QACHA;QACAE;QACAN;QACAoB;QACAO,YAAY;YACRC,MAAM;QACV;QACAA,MAAMC,IAAAA,qCAAqB,EAAC,OAAO;YAC/B,GAAG/B,KAAK;YACR,GAAGQ,aAAaU,uBAAuB,CAAC,CAAC;YACzCjB;QACJ;IACJ;AACJ;AACA;;CAEC,GAAG,SAASe,gCAAgC,EAAEZ,iBAAgB,EAAGC,SAAQ,EAAG,EAAE;IAC3E,IAAID,qBAAqB4B,WAAW;QAChC,IAAIC,MAAMC,OAAO,CAAC9B,mBAAmB;YACjC,OAAOC,WAAWD,mBAAmB;gBACjCA,gBAAgB,CAAC,EAAE;aACtB;QACL,CAAC;QACD,OAAO;YACHA;SACH;IACL,CAAC;IACD,OAAO,EAAE;AACb;AACA;;;;;;CAMC,GAAG,SAASuB,gBAAgBC,KAAK,EAAEF,iBAAiB,EAAErB,QAAQ,EAAEC,WAAW,EAAE;IAC1E,IAAID,UAAU;QACV,IAAIqB,kBAAkBS,QAAQ,CAACP,QAAQ;YACnC,IAAIF,kBAAkBU,MAAM,GAAG,KAAK9B,aAAa;gBAC7C,OAAOoB,kBAAkBW,MAAM,CAAC,CAACC,IAAIA,MAAMV;YAC/C,CAAC;QACL,OAAO;YACH,OAAO;mBACAF;gBACHE;aACH,CAACW,IAAI;QACV,CAAC;IACL,OAAO;QACH,OAAOb,iBAAiB,CAAC,EAAE,KAAKE,SAAStB,cAAc,EAAE,GAAG;YACxDsB;SACH;IACL,CAAC;IACD,OAAOF;AACX;AACA;;CAEC,GAAG,SAASZ,gBAAgB0B,KAAK,EAAE;IAChC,IAAIA,UAAUR,WAAW;QACrB,OAAOA;IACX,CAAC;IACD,OAAOC,MAAMC,OAAO,CAACM,SAASA,QAAQ;QAClCA;KACH;AACL"}