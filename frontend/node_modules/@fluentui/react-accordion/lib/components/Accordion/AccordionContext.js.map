{"version":3,"sources":["AccordionContext.ts"],"sourcesContent":["import { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AccordionContextValue } from './Accordion.types';\n\nexport const AccordionContext: Context<AccordionContextValue> = createContext<AccordionContextValue | undefined>(\n  undefined,\n) as Context<AccordionContextValue>;\n\nconst accordionContextDefaultValue: AccordionContextValue = {\n  openItems: [],\n  collapsible: false,\n  requestToggle() {\n    /* noop */\n  },\n};\n\nexport const AccordionProvider = AccordionContext.Provider;\nexport const useAccordionContext_unstable = <T>(selector: ContextSelector<AccordionContextValue, T>): T =>\n  useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));\n"],"names":["createContext","useContextSelector","AccordionContext","undefined","accordionContextDefaultValue","openItems","collapsible","requestToggle","AccordionProvider","Provider","useAccordionContext_unstable","selector","ctx"],"mappings":"AAAA,SAASA,aAAa,EAAmBC,kBAAkB,QAAQ,mCAAmC;AAItG,OAAO,MAAMC,mBAAmDF,cAC9DG,WACkC;AAEpC,MAAMC,+BAAsD;IAC1DC,WAAW,EAAE;IACbC,aAAa,KAAK;IAClBC,iBAAgB;IACd,QAAQ,GACV;AACF;AAEA,OAAO,MAAMC,oBAAoBN,iBAAiBO,QAAQ,CAAC;AAC3D,OAAO,MAAMC,+BAA+B,CAAIC,WAC9CV,mBAAmBC,kBAAkB,CAACU,MAAMR,4BAA4B,GAAKO,SAASC,MAAM"}