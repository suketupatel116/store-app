"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useRadio_unstable", {
    enumerable: true,
    get: ()=>useRadio_unstable
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _reactIcons = require("@fluentui/react-icons");
const _reactLabel = require("@fluentui/react-label");
const _reactUtilities = require("@fluentui/react-utilities");
const _radioGroupContext = require("../../contexts/RadioGroupContext");
const _reactTabster = require("@fluentui/react-tabster");
const useRadio_unstable = (props, ref)=>{
    const group = (0, _radioGroupContext.useRadioGroupContextValue_unstable)();
    const { name =group.name , checked =group.value !== undefined ? group.value === props.value : undefined , defaultChecked =group.defaultValue !== undefined ? group.defaultValue === props.value : undefined , labelPosition =group.layout === 'horizontal-stacked' ? 'below' : 'after' , disabled =group.disabled , required =group.required , 'aria-describedby': ariaDescribedBy = group['aria-describedby'] , onChange  } = props;
    const nativeProps = (0, _reactUtilities.getPartitionedNativeProps)({
        props,
        primarySlotTagName: 'input',
        excludedPropNames: [
            'checked',
            'defaultChecked',
            'onChange'
        ]
    });
    const root = (0, _reactUtilities.resolveShorthand)(props.root, {
        required: true,
        defaultProps: {
            ref: (0, _reactTabster.useFocusWithin)(),
            ...nativeProps.root
        }
    });
    const input = (0, _reactUtilities.resolveShorthand)(props.input, {
        required: true,
        defaultProps: {
            ref,
            type: 'radio',
            id: (0, _reactUtilities.useId)('radio-', nativeProps.primary.id),
            name,
            checked,
            defaultChecked,
            disabled,
            required,
            'aria-describedby': ariaDescribedBy,
            ...nativeProps.primary
        }
    });
    input.onChange = (0, _reactUtilities.mergeCallbacks)(input.onChange, (ev)=>{
        return onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
            value: ev.currentTarget.value
        });
    });
    const label = (0, _reactUtilities.resolveShorthand)(props.label, {
        defaultProps: {
            htmlFor: input.id,
            disabled: input.disabled
        }
    });
    const indicator = (0, _reactUtilities.resolveShorthand)(props.indicator, {
        required: true,
        defaultProps: {
            'aria-hidden': true,
            children: /*#__PURE__*/ _react.createElement(_reactIcons.CircleFilled, null)
        }
    });
    return {
        labelPosition,
        components: {
            root: 'span',
            input: 'input',
            label: _reactLabel.Label,
            indicator: 'div'
        },
        root,
        input,
        label,
        indicator
    };
};
