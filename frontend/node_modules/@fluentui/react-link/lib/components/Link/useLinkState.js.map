{"version":3,"sources":["useLinkState.ts"],"sourcesContent":["import * as React from 'react';\nimport { Enter, Space } from '@fluentui/keyboard-keys';\nimport type { LinkState } from './Link.types';\n\n/**\n * The useLinkState_unstable hook processes the Link state.\n * @param state - Link state to mutate.\n */\nexport const useLinkState_unstable = (state: LinkState): LinkState => {\n  const { disabled, disabledFocusable } = state;\n  const { onClick, onKeyDown, role, tabIndex, type } = state.root;\n\n  // Add href and tabIndex=0 for anchor elements.\n  if (state.root.as === 'a') {\n    state.root.href = disabled ? undefined : state.root.href;\n    state.root.tabIndex = tabIndex ?? (disabled && !disabledFocusable ? undefined : 0);\n\n    // Add role=\"link\" for disabled and disabledFocusable links.\n    if (disabled || disabledFocusable) {\n      state.root.role = role || 'link';\n    }\n  }\n  // Add type=\"button\" for button elements.\n  else {\n    state.root.type = type || 'button';\n  }\n\n  // Disallow click event when component is disabled and eat events when disabledFocusable is set to true.\n  state.root.onClick = (ev: React.MouseEvent<HTMLAnchorElement & HTMLButtonElement>) => {\n    if (disabled || disabledFocusable) {\n      ev.preventDefault();\n    } else {\n      onClick?.(ev);\n    }\n  };\n\n  // Disallow keydown event when component is disabled and eat events when disabledFocusable is set to true.\n  state.root.onKeyDown = (ev: React.KeyboardEvent<HTMLAnchorElement & HTMLButtonElement>) => {\n    if ((disabled || disabledFocusable) && (ev.key === Enter || ev.key === Space)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else {\n      onKeyDown?.(ev);\n    }\n  };\n\n  // Set the aria-disabled and disabled props correctly.\n  state.disabled = disabled || disabledFocusable;\n  state.root['aria-disabled'] = disabled || disabledFocusable || undefined;\n  if (state.root.as === 'button') {\n    state.root.disabled = disabled && !disabledFocusable;\n  }\n\n  return state;\n};\n"],"names":["React","Enter","Space","useLinkState_unstable","state","disabled","disabledFocusable","onClick","onKeyDown","role","tabIndex","type","root","as","href","undefined","ev","preventDefault","key","stopPropagation"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,KAAK,EAAEC,KAAK,QAAQ,0BAA0B;AAGvD;;;CAGC,GACD,OAAO,MAAMC,wBAAwB,CAACC,QAAgC;IACpE,MAAM,EAAEC,SAAQ,EAAEC,kBAAiB,EAAE,GAAGF;IACxC,MAAM,EAAEG,QAAO,EAAEC,UAAS,EAAEC,KAAI,EAAEC,SAAQ,EAAEC,KAAI,EAAE,GAAGP,MAAMQ,IAAI;IAE/D,+CAA+C;IAC/C,IAAIR,MAAMQ,IAAI,CAACC,EAAE,KAAK,KAAK;QACzBT,MAAMQ,IAAI,CAACE,IAAI,GAAGT,WAAWU,YAAYX,MAAMQ,IAAI,CAACE,IAAI;QACxDV,MAAMQ,IAAI,CAACF,QAAQ,GAAGA,qBAAAA,sBAAAA,WAAaL,YAAY,CAACC,oBAAoBS,YAAY,CAAC,AAAC;QAElF,4DAA4D;QAC5D,IAAIV,YAAYC,mBAAmB;YACjCF,MAAMQ,IAAI,CAACH,IAAI,GAAGA,QAAQ;QAC5B,CAAC;IACH,OAEK;QACHL,MAAMQ,IAAI,CAACD,IAAI,GAAGA,QAAQ;IAC5B,CAAC;IAED,wGAAwG;IACxGP,MAAMQ,IAAI,CAACL,OAAO,GAAG,CAACS,KAAgE;QACpF,IAAIX,YAAYC,mBAAmB;YACjCU,GAAGC,cAAc;QACnB,OAAO;YACLV,oBAAAA,qBAAAA,KAAAA,IAAAA,QAAUS;QACZ,CAAC;IACH;IAEA,0GAA0G;IAC1GZ,MAAMQ,IAAI,CAACJ,SAAS,GAAG,CAACQ,KAAmE;QACzF,IAAI,AAACX,CAAAA,YAAYC,iBAAgB,KAAOU,CAAAA,GAAGE,GAAG,KAAKjB,SAASe,GAAGE,GAAG,KAAKhB,KAAI,GAAI;YAC7Ec,GAAGC,cAAc;YACjBD,GAAGG,eAAe;QACpB,OAAO;YACLX,sBAAAA,uBAAAA,KAAAA,IAAAA,UAAYQ;QACd,CAAC;IACH;IAEA,sDAAsD;IACtDZ,MAAMC,QAAQ,GAAGA,YAAYC;IAC7BF,MAAMQ,IAAI,CAAC,gBAAgB,GAAGP,YAAYC,qBAAqBS;IAC/D,IAAIX,MAAMQ,IAAI,CAACC,EAAE,KAAK,UAAU;QAC9BT,MAAMQ,IAAI,CAACP,QAAQ,GAAGA,YAAY,CAACC;IACrC,CAAC;IAED,OAAOF;AACT,EAAE"}