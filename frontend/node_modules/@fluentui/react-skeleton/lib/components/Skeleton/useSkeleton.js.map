{"version":3,"sources":["useSkeleton.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { SkeletonProps, SkeletonState } from './Skeleton.types';\nimport { useSkeletonContext } from '../../contexts/SkeletonContext';\n\n/**\n * Create the state required to render Skeleton.\n *\n * The returned state can be modified with hooks such as useSkeletonStyles_unstable,\n * before being passed to renderSkeleton_unstable.\n *\n * @param props - props from this instance of Skeleton\n * @param ref - reference to root HTMLElement of Skeleton\n */\nexport const useSkeleton_unstable = (props: SkeletonProps, ref: React.Ref<HTMLElement>): SkeletonState => {\n  const { animation: contextAnimation, appearance: contextAppearance } = useSkeletonContext();\n  const { animation = contextAnimation ?? 'wave', appearance = contextAppearance ?? 'opaque' } = props;\n\n  const root = getNativeElementProps('div', {\n    ref,\n    role: 'progressbar',\n    'aria-busy': true,\n    'aria-label': 'Loading Content',\n    ...props,\n  });\n\n  return {\n    animation,\n    appearance,\n    components: {\n      root: 'div',\n    },\n    root,\n  };\n};\n"],"names":["React","getNativeElementProps","useSkeletonContext","useSkeleton_unstable","props","ref","animation","contextAnimation","appearance","contextAppearance","root","role","components"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,qBAAqB,QAAQ,4BAA4B;AAElE,SAASC,kBAAkB,QAAQ,iCAAiC;AAEpE;;;;;;;;CAQC,GACD,OAAO,MAAMC,uBAAuB,CAACC,OAAsBC,MAA+C;IACxG,MAAM,EAAEC,WAAWC,iBAAgB,EAAEC,YAAYC,kBAAiB,EAAE,GAAGP;IACvE,MAAM,EAAEI,WAAYC,6BAAAA,8BAAAA,mBAAoB,MAAM,CAAA,EAAEC,YAAaC,8BAAAA,+BAAAA,oBAAqB,QAAQ,CAAA,EAAE,GAAGL;IAE/F,MAAMM,OAAOT,sBAAsB,OAAO;QACxCI;QACAM,MAAM;QACN,aAAa,IAAI;QACjB,cAAc;QACd,GAAGP,KAAK;IACV;IAEA,OAAO;QACLE;QACAE;QACAI,YAAY;YACVF,MAAM;QACR;QACAA;IACF;AACF,EAAE"}