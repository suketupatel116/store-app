{"version":3,"names":["__styles","mergeClasses","useButtonStyles_unstable","useBaseStyles","vertical","Beiy3e4","verticalIcon","Be2twd7","d","useToolbarButtonStyles_unstable","state","buttonStyles","root","className","icon"],"sources":["useToolbarButtonStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nconst useBaseStyles = makeStyles({\n    vertical: {\n        flexDirection: 'column'\n    },\n    verticalIcon: {\n        fontSize: '24px'\n    }\n});\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */ export const useToolbarButtonStyles_unstable = (state)=>{\n    useButtonStyles_unstable(state);\n    const buttonStyles = useBaseStyles();\n    state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);\n    if (state.icon) {\n        state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);\n    }\n};\n"],"mappings":"AAAA,SAAAA,QAAA,EAAqBC,YAAY,QAAQ,gBAAgB;AACzD,SAASC,wBAAwB,QAAQ,wBAAwB;AACjE,MAAMC,aAAa,gBAAGH,QAAA;EAAAI,QAAA;IAAAC,OAAA;EAAA;EAAAC,YAAA;IAAAC,OAAA;EAAA;AAAA;EAAAC,CAAA;AAAA,CAOrB,CAAC;AACF;AACA;AACA;AAAI,OAAO,MAAMC,+BAA+B,GAAIC,KAAK,IAAG;EACxDR,wBAAwB,CAACQ,KAAK,CAAC;EAC/B,MAAMC,YAAY,GAAGR,aAAa,CAAC,CAAC;EACpCO,KAAK,CAACE,IAAI,CAACC,SAAS,GAAGZ,YAAY,CAACS,KAAK,CAACE,IAAI,CAACC,SAAS,EAAEH,KAAK,CAACN,QAAQ,IAAIO,YAAY,CAACP,QAAQ,CAAC;EAClG,IAAIM,KAAK,CAACI,IAAI,EAAE;IACZJ,KAAK,CAACI,IAAI,CAACD,SAAS,GAAGZ,YAAY,CAACS,KAAK,CAACI,IAAI,CAACD,SAAS,EAAEH,KAAK,CAACN,QAAQ,IAAIO,YAAY,CAACL,YAAY,CAAC;EAC1G;AACJ,CAAC"}