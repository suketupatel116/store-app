/** @jsxRuntime classic */ /** @jsx createElement */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "renderFluentProvider_unstable", {
    enumerable: true,
    get: ()=>renderFluentProvider_unstable
});
const _reactJsxRuntime = require("@fluentui/react-jsx-runtime");
const _reactUtilities = require("@fluentui/react-utilities");
const _react = require("@griffel/react");
const _reactSharedContexts = require("@fluentui/react-shared-contexts");
const renderFluentProvider_unstable = (state, contextValues)=>{
    const { slots , slotProps  } = (0, _reactUtilities.getSlotsNext)(state);
    // Typescript (vscode) incorrectly references the FluentProviderProps.customStyleHooks_unstable
    // instead of FluentProviderContextValues.customStyleHooks_unstable and thinks it is
    // Partial<CustomStyleHooksContextValue>, so it needs to be cast to Required<CustomStyleHooksContextValue>
    return /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(_reactSharedContexts.Provider_unstable, {
        value: contextValues.provider
    }, /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(_reactSharedContexts.ThemeProvider_unstable, {
        value: contextValues.theme
    }, /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(_reactSharedContexts.ThemeClassNameProvider_unstable, {
        value: contextValues.themeClassName
    }, /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(_reactSharedContexts.CustomStyleHooksProvider_unstable, {
        value: contextValues.customStyleHooks_unstable
    }, /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(_reactSharedContexts.TooltipVisibilityProvider_unstable, {
        value: contextValues.tooltip
    }, /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(_react.TextDirectionProvider, {
        dir: contextValues.textDirection
    }, /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(_reactSharedContexts.OverridesProvider_unstable, {
        value: contextValues.overrides_unstable
    }, /*#__PURE__*/ (0, _reactJsxRuntime.createElement)(slots.root, slotProps.root, (0, _reactUtilities.canUseDOM)() ? null : /*#__PURE__*/ (0, _reactJsxRuntime.createElement)("style", {
        // Using dangerous HTML because react can escape characters
        // which can lead to invalid CSS.
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML: {
            __html: state.serverStyleProps.cssRule
        },
        ...state.serverStyleProps.attributes
    }), slotProps.root.children))))))));
};
