{"version":3,"sources":["useSelection.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useControllableState } from '@fluentui/react-utilities';\nexport const useSelection = (props)=>{\n    const { defaultSelectedOptions , multiselect , onOptionSelect  } = props;\n    const [selectedOptions, setSelectedOptions] = useControllableState({\n        state: props.selectedOptions,\n        defaultState: defaultSelectedOptions,\n        initialState: []\n    });\n    const selectOption = useCallback((event, option)=>{\n        // if the option is disabled, do nothing\n        if (option.disabled) {\n            return;\n        }\n        // for single-select, always return the selected option\n        let newSelection = [\n            option.value\n        ];\n        // toggle selected state of the option for multiselect\n        if (multiselect) {\n            const selectedIndex = selectedOptions.findIndex((o)=>o === option.value);\n            if (selectedIndex > -1) {\n                // deselect option\n                newSelection = [\n                    ...selectedOptions.slice(0, selectedIndex),\n                    ...selectedOptions.slice(selectedIndex + 1)\n                ];\n            } else {\n                // select option\n                newSelection = [\n                    ...selectedOptions,\n                    option.value\n                ];\n            }\n        }\n        setSelectedOptions(newSelection);\n        onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {\n            optionValue: option.value,\n            optionText: option.text,\n            selectedOptions: newSelection\n        });\n    }, [\n        onOptionSelect,\n        multiselect,\n        selectedOptions,\n        setSelectedOptions\n    ]);\n    const clearSelection = (event)=>{\n        setSelectedOptions([]);\n        onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {\n            optionValue: undefined,\n            optionText: undefined,\n            selectedOptions: []\n        });\n    };\n    return {\n        clearSelection,\n        selectOption,\n        selectedOptions\n    };\n};\n"],"names":["useSelection","props","defaultSelectedOptions","multiselect","onOptionSelect","selectedOptions","setSelectedOptions","useControllableState","state","defaultState","initialState","selectOption","useCallback","event","option","disabled","newSelection","value","selectedIndex","findIndex","o","slice","optionValue","optionText","text","clearSelection","undefined"],"mappings":";;;;+BAEaA;;aAAAA;;uBAFe;gCACS;AAC9B,MAAMA,eAAe,CAACC,QAAQ;IACjC,MAAM,EAAEC,uBAAsB,EAAGC,YAAW,EAAGC,eAAc,EAAG,GAAGH;IACnE,MAAM,CAACI,iBAAiBC,mBAAmB,GAAGC,IAAAA,oCAAoB,EAAC;QAC/DC,OAAOP,MAAMI,eAAe;QAC5BI,cAAcP;QACdQ,cAAc,EAAE;IACpB;IACA,MAAMC,eAAeC,IAAAA,kBAAW,EAAC,CAACC,OAAOC,SAAS;QAC9C,wCAAwC;QACxC,IAAIA,OAAOC,QAAQ,EAAE;YACjB;QACJ,CAAC;QACD,uDAAuD;QACvD,IAAIC,eAAe;YACfF,OAAOG,KAAK;SACf;QACD,sDAAsD;QACtD,IAAId,aAAa;YACb,MAAMe,gBAAgBb,gBAAgBc,SAAS,CAAC,CAACC,IAAIA,MAAMN,OAAOG,KAAK;YACvE,IAAIC,gBAAgB,CAAC,GAAG;gBACpB,kBAAkB;gBAClBF,eAAe;uBACRX,gBAAgBgB,KAAK,CAAC,GAAGH;uBACzBb,gBAAgBgB,KAAK,CAACH,gBAAgB;iBAC5C;YACL,OAAO;gBACH,gBAAgB;gBAChBF,eAAe;uBACRX;oBACHS,OAAOG,KAAK;iBACf;YACL,CAAC;QACL,CAAC;QACDX,mBAAmBU;QACnBZ,mBAAmB,IAAI,IAAIA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeS,OAAO;YAClFS,aAAaR,OAAOG,KAAK;YACzBM,YAAYT,OAAOU,IAAI;YACvBnB,iBAAiBW;QACrB,EAAE;IACN,GAAG;QACCZ;QACAD;QACAE;QACAC;KACH;IACD,MAAMmB,iBAAiB,CAACZ,QAAQ;QAC5BP,mBAAmB,EAAE;QACrBF,mBAAmB,IAAI,IAAIA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeS,OAAO;YAClFS,aAAaI;YACbH,YAAYG;YACZrB,iBAAiB,EAAE;QACvB,EAAE;IACN;IACA,OAAO;QACHoB;QACAd;QACAN;IACJ;AACJ"}