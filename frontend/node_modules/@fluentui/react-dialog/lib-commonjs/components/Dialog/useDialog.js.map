{"version":3,"sources":["useDialog.js"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState, useEventCallback, useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport { useDisableBodyScroll, useFocusFirstElement } from '../../utils';\nimport { DialogContext } from '../../contexts';\nimport { useModalAttributes } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Dialog.\n *\n * The returned state can be modified with hooks such as useDialogStyles_unstable,\n * before being passed to renderDialog_unstable.\n *\n * @param props - props from this instance of Dialog\n */ export const useDialog_unstable = (props)=>{\n    const { children , modalType ='modal' , onOpenChange , inertTrapFocus =false  } = props;\n    const [trigger, content] = childrenToTriggerAndContent(children);\n    const [open, setOpen] = useControllableState({\n        state: props.open,\n        defaultState: props.defaultOpen,\n        initialState: false\n    });\n    const requestOpenChange = useEventCallback((data)=>{\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(data.event, data);\n        // if user prevents default then do not change state value\n        // otherwise updates state value and trigger reference to the element that caused the opening\n        if (!data.event.isDefaultPrevented()) {\n            setOpen(data.open);\n        }\n    });\n    const focusRef = useFocusFirstElement(open, modalType);\n    const disableBodyScroll = useDisableBodyScroll();\n    const isBodyScrollLocked = Boolean(open && modalType !== 'non-modal');\n    useIsomorphicLayoutEffect(()=>{\n        if (isBodyScrollLocked) {\n            return disableBodyScroll();\n        }\n    }, [\n        disableBodyScroll,\n        isBodyScrollLocked\n    ]);\n    const { modalAttributes , triggerAttributes  } = useModalAttributes({\n        trapFocus: modalType !== 'non-modal',\n        legacyTrapFocus: !inertTrapFocus\n    });\n    return {\n        components: {\n            backdrop: 'div'\n        },\n        inertTrapFocus,\n        open,\n        modalType,\n        content: open ? content : null,\n        trigger,\n        requestOpenChange,\n        dialogTitleId: useId('dialog-title-'),\n        isNestedDialog: useHasParentContext(DialogContext),\n        dialogRef: focusRef,\n        modalAttributes: modalType !== 'non-modal' ? modalAttributes : undefined,\n        triggerAttributes\n    };\n};\n/**\n * Extracts trigger and content from children\n */ function childrenToTriggerAndContent(children) {\n    const childrenArray = React.Children.toArray(children);\n    if (process.env.NODE_ENV !== 'production') {\n        if (childrenArray.length !== 1 && childrenArray.length !== 2) {\n            // eslint-disable-next-line no-console\n            console.warn('Dialog must contain at least one child <DialogSurface/>,\\n' + 'and at most two children <DialogTrigger/> <DialogSurface/> (in this order)');\n        }\n    }\n    switch(childrenArray.length){\n        // case where there's a trigger followed by content\n        case 2:\n            return childrenArray;\n        // case where there's only content\n        case 1:\n            return [\n                undefined,\n                childrenArray[0]\n            ];\n        // unknown case\n        default:\n            return [\n                undefined,\n                undefined\n            ];\n    }\n}\n"],"names":["useDialog_unstable","props","children","modalType","onOpenChange","inertTrapFocus","trigger","content","childrenToTriggerAndContent","open","setOpen","useControllableState","state","defaultState","defaultOpen","initialState","requestOpenChange","useEventCallback","data","event","isDefaultPrevented","focusRef","useFocusFirstElement","disableBodyScroll","useDisableBodyScroll","isBodyScrollLocked","Boolean","useIsomorphicLayoutEffect","modalAttributes","triggerAttributes","useModalAttributes","trapFocus","legacyTrapFocus","components","backdrop","dialogTitleId","useId","isNestedDialog","useHasParentContext","DialogContext","dialogRef","undefined","childrenArray","React","Children","toArray","process","env","NODE_ENV","length","console","warn"],"mappings":";;;;+BAaiBA;;aAAAA;;;6DAbM;gCACkE;sCACrD;uBACuB;0BAC7B;8BACK;AAQxB,MAAMA,qBAAqB,CAACC,QAAQ;IAC3C,MAAM,EAAEC,SAAQ,EAAGC,WAAW,QAAO,EAAGC,aAAY,EAAGC,gBAAgB,KAAK,CAAA,EAAG,GAAGJ;IAClF,MAAM,CAACK,SAASC,QAAQ,GAAGC,4BAA4BN;IACvD,MAAM,CAACO,MAAMC,QAAQ,GAAGC,IAAAA,oCAAoB,EAAC;QACzCC,OAAOX,MAAMQ,IAAI;QACjBI,cAAcZ,MAAMa,WAAW;QAC/BC,cAAc,KAAK;IACvB;IACA,MAAMC,oBAAoBC,IAAAA,gCAAgB,EAAC,CAACC,OAAO;QAC/Cd,iBAAiB,IAAI,IAAIA,iBAAiB,KAAK,IAAI,KAAK,IAAIA,aAAac,KAAKC,KAAK,EAAED,KAAK;QAC1F,0DAA0D;QAC1D,6FAA6F;QAC7F,IAAI,CAACA,KAAKC,KAAK,CAACC,kBAAkB,IAAI;YAClCV,QAAQQ,KAAKT,IAAI;QACrB,CAAC;IACL;IACA,MAAMY,WAAWC,IAAAA,2BAAoB,EAACb,MAAMN;IAC5C,MAAMoB,oBAAoBC,IAAAA,2BAAoB;IAC9C,MAAMC,qBAAqBC,QAAQjB,QAAQN,cAAc;IACzDwB,IAAAA,yCAAyB,EAAC,IAAI;QAC1B,IAAIF,oBAAoB;YACpB,OAAOF;QACX,CAAC;IACL,GAAG;QACCA;QACAE;KACH;IACD,MAAM,EAAEG,gBAAe,EAAGC,kBAAiB,EAAG,GAAGC,IAAAA,gCAAkB,EAAC;QAChEC,WAAW5B,cAAc;QACzB6B,iBAAiB,CAAC3B;IACtB;IACA,OAAO;QACH4B,YAAY;YACRC,UAAU;QACd;QACA7B;QACAI;QACAN;QACAI,SAASE,OAAOF,UAAU,IAAI;QAC9BD;QACAU;QACAmB,eAAeC,IAAAA,qBAAK,EAAC;QACrBC,gBAAgBC,IAAAA,yCAAmB,EAACC,uBAAa;QACjDC,WAAWnB;QACXO,iBAAiBzB,cAAc,cAAcyB,kBAAkBa,SAAS;QACxEZ;IACJ;AACJ;AACA;;CAEC,GAAG,SAASrB,4BAA4BN,QAAQ,EAAE;IAC/C,MAAMwC,gBAAgBC,OAAMC,QAAQ,CAACC,OAAO,CAAC3C;IAC7C,IAAI4C,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;QACvC,IAAIN,cAAcO,MAAM,KAAK,KAAKP,cAAcO,MAAM,KAAK,GAAG;YAC1D,sCAAsC;YACtCC,QAAQC,IAAI,CAAC,+DAA+D;QAChF,CAAC;IACL,CAAC;IACD,OAAOT,cAAcO,MAAM;QACvB,mDAAmD;QACnD,KAAK;YACD,OAAOP;QACX,kCAAkC;QAClC,KAAK;YACD,OAAO;gBACHD;gBACAC,aAAa,CAAC,EAAE;aACnB;QACL,eAAe;QACf;YACI,OAAO;gBACHD;gBACAA;aACH;IACT;AACJ"}