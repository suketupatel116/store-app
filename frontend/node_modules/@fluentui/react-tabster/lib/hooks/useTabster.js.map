{"version":3,"sources":["useTabster.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createTabster, disposeTabster, Types as TabsterTypes } from 'tabster';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n\n/**\n * Tries to get a tabster instance on the current window or creates a new one\n * Since Tabster is single instance only, feel free to call this hook to ensure Tabster exists if necessary\n *\n * @internal\n * @returns Tabster core instance\n */\nexport const useTabster = (): TabsterTypes.TabsterCore | null => {\n  const { targetDocument } = useFluent();\n\n  const defaultView = targetDocument?.defaultView || undefined;\n  const tabster = React.useMemo(() => {\n    if (!defaultView) {\n      return null;\n    }\n\n    return createTabster(defaultView, { autoRoot: {}, controlTab: false });\n  }, [defaultView]);\n\n  useIsomorphicLayoutEffect(() => {\n    return () => {\n      if (tabster) {\n        disposeTabster(tabster);\n      }\n    };\n  }, [tabster]);\n\n  return tabster;\n};\n"],"names":["React","useFluent_unstable","useFluent","createTabster","disposeTabster","useIsomorphicLayoutEffect","useTabster","targetDocument","defaultView","undefined","tabster","useMemo","autoRoot","controlTab"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,sBAAsBC,SAAS,QAAQ,kCAAkC;AAClF,SAASC,aAAa,EAAEC,cAAc,QAA+B,UAAU;AAC/E,SAASC,yBAAyB,QAAQ,4BAA4B;AAEtE;;;;;;CAMC,GACD,OAAO,MAAMC,aAAa,IAAuC;IAC/D,MAAM,EAAEC,eAAc,EAAE,GAAGL;IAE3B,MAAMM,cAAcD,CAAAA,2BAAAA,4BAAAA,KAAAA,IAAAA,eAAgBC,WAAW,AAAD,KAAKC;IACnD,MAAMC,UAAUV,MAAMW,OAAO,CAAC,IAAM;QAClC,IAAI,CAACH,aAAa;YAChB,OAAO,IAAI;QACb,CAAC;QAED,OAAOL,cAAcK,aAAa;YAAEI,UAAU,CAAC;YAAGC,YAAY,KAAK;QAAC;IACtE,GAAG;QAACL;KAAY;IAEhBH,0BAA0B,IAAM;QAC9B,OAAO,IAAM;YACX,IAAIK,SAAS;gBACXN,eAAeM;YACjB,CAAC;QACH;IACF,GAAG;QAACA;KAAQ;IAEZ,OAAOA;AACT,EAAE"}