{"version":3,"sources":["useTimeout.js"],"sourcesContent":["import * as React from 'react';\n/**\n * @internal\n * Helper to manage a browser timeout.\n * Ensures that the timeout isn't set multiple times at once,\n * and is cleaned up when the component is unloaded.\n *\n * @returns A pair of [setTimeout, clearTimeout] that are stable between renders.\n */ export function useTimeout() {\n    const [timeout] = React.useState(()=>({\n            id: undefined,\n            set: (fn, delay)=>{\n                timeout.clear();\n                timeout.id = setTimeout(fn, delay);\n            },\n            clear: ()=>{\n                if (timeout.id !== undefined) {\n                    clearTimeout(timeout.id);\n                    timeout.id = undefined;\n                }\n            }\n        }));\n    // Clean up the timeout when the component is unloaded\n    React.useEffect(()=>timeout.clear, [\n        timeout\n    ]);\n    return [\n        timeout.set,\n        timeout.clear\n    ];\n}\n"],"names":["useTimeout","timeout","React","useState","id","undefined","set","fn","delay","clear","setTimeout","clearTimeout","useEffect"],"mappings":";;;;+BAQoBA;;aAAAA;;;6DARG;AAQZ,SAASA,aAAa;IAC7B,MAAM,CAACC,QAAQ,GAAGC,OAAMC,QAAQ,CAAC,IAAK,CAAA;YAC9BC,IAAIC;YACJC,KAAK,CAACC,IAAIC,QAAQ;gBACdP,QAAQQ,KAAK;gBACbR,QAAQG,EAAE,GAAGM,WAAWH,IAAIC;YAChC;YACAC,OAAO,IAAI;gBACP,IAAIR,QAAQG,EAAE,KAAKC,WAAW;oBAC1BM,aAAaV,QAAQG,EAAE;oBACvBH,QAAQG,EAAE,GAAGC;gBACjB,CAAC;YACL;QACJ,CAAA;IACJ,sDAAsD;IACtDH,OAAMU,SAAS,CAAC,IAAIX,QAAQQ,KAAK,EAAE;QAC/BR;KACH;IACD,OAAO;QACHA,QAAQK,GAAG;QACXL,QAAQQ,KAAK;KAChB;AACL"}