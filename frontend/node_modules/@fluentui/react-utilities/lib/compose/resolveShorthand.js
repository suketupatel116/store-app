import { isValidElement } from 'react';
import { SLOT_RENDER_FUNCTION_SYMBOL } from './constants';
/**
 * Resolves shorthands into slot props, to ensure normalization of the signature
 * being passed down to getSlots method
 * @param value - the base shorthand props
 * @param options - options to resolve shorthand props
 */ export const resolveShorthand = (value, options)=>{
    const { required =false , defaultProps  } = options || {};
    if (value === null || value === undefined && !required) {
        return undefined;
    }
    let resolvedShorthand = {};
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    if (typeof value === 'string' || typeof value === 'number' || Array.isArray(value) || isValidElement(value)) {
        resolvedShorthand.children = value;
    } else if (typeof value === 'object') {
        resolvedShorthand = value;
    }
    resolvedShorthand = {
        ...defaultProps,
        ...resolvedShorthand
    };
    if (typeof resolvedShorthand.children === 'function') {
        resolvedShorthand[SLOT_RENDER_FUNCTION_SYMBOL] = resolvedShorthand.children;
        resolvedShorthand.children = defaultProps === null || defaultProps === void 0 ? void 0 : defaultProps.children;
    }
    return resolvedShorthand;
};
