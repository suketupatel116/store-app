{"version":3,"sources":["resolveShorthand.ts"],"sourcesContent":["import { isValidElement } from 'react';\nimport type { SlotRenderFunction, SlotShorthandValue, UnknownSlotProps } from './types';\nimport { SLOT_RENDER_FUNCTION_SYMBOL } from './constants';\n\nexport type ResolveShorthandOptions<Props, Required extends boolean = false> = Required extends true\n  ? { required: true; defaultProps?: Props }\n  : { required?: Required; defaultProps?: Props };\n\nexport type ResolveShorthandFunction<Props extends UnknownSlotProps = UnknownSlotProps> = {\n  <P extends Props>(value: P | SlotShorthandValue | undefined, options: ResolveShorthandOptions<P, true>): P;\n  <P extends Props>(value: P | SlotShorthandValue | null | undefined, options?: ResolveShorthandOptions<P, boolean>):\n    | P\n    | undefined;\n};\n\n/**\n * Resolves shorthands into slot props, to ensure normalization of the signature\n * being passed down to getSlots method\n * @param value - the base shorthand props\n * @param options - options to resolve shorthand props\n */\nexport const resolveShorthand: ResolveShorthandFunction = (value, options) => {\n  const { required = false, defaultProps } = options || {};\n  if (value === null || (value === undefined && !required)) {\n    return undefined;\n  }\n\n  let resolvedShorthand: UnknownSlotProps & {\n    [SLOT_RENDER_FUNCTION_SYMBOL]?: SlotRenderFunction<UnknownSlotProps>;\n  } = {};\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof value === 'string' || typeof value === 'number' || Array.isArray(value) || isValidElement<any>(value)) {\n    resolvedShorthand.children = value;\n  } else if (typeof value === 'object') {\n    resolvedShorthand = value;\n  }\n\n  resolvedShorthand = {\n    ...defaultProps,\n    ...resolvedShorthand,\n  };\n\n  if (typeof resolvedShorthand.children === 'function') {\n    resolvedShorthand[SLOT_RENDER_FUNCTION_SYMBOL] = resolvedShorthand.children as SlotRenderFunction<UnknownSlotProps>;\n    resolvedShorthand.children = defaultProps?.children;\n  }\n\n  return resolvedShorthand;\n};\n"],"names":["isValidElement","SLOT_RENDER_FUNCTION_SYMBOL","resolveShorthand","value","options","required","defaultProps","undefined","resolvedShorthand","Array","isArray","children"],"mappings":"AAAA,SAASA,cAAc,QAAQ,QAAQ;AAEvC,SAASC,2BAA2B,QAAQ,cAAc;AAa1D;;;;;CAKC,GACD,OAAO,MAAMC,mBAA6C,CAACC,OAAOC,UAAY;IAC5E,MAAM,EAAEC,UAAW,KAAK,CAAA,EAAEC,aAAY,EAAE,GAAGF,WAAW,CAAC;IACvD,IAAID,UAAU,IAAI,IAAKA,UAAUI,aAAa,CAACF,UAAW;QACxD,OAAOE;IACT,CAAC;IAED,IAAIC,oBAEA,CAAC;IAEL,8DAA8D;IAC9D,IAAI,OAAOL,UAAU,YAAY,OAAOA,UAAU,YAAYM,MAAMC,OAAO,CAACP,UAAUH,eAAoBG,QAAQ;QAChHK,kBAAkBG,QAAQ,GAAGR;IAC/B,OAAO,IAAI,OAAOA,UAAU,UAAU;QACpCK,oBAAoBL;IACtB,CAAC;IAEDK,oBAAoB;QAClB,GAAGF,YAAY;QACf,GAAGE,iBAAiB;IACtB;IAEA,IAAI,OAAOA,kBAAkBG,QAAQ,KAAK,YAAY;QACpDH,iBAAiB,CAACP,4BAA4B,GAAGO,kBAAkBG,QAAQ;QAC3EH,kBAAkBG,QAAQ,GAAGL,yBAAAA,0BAAAA,KAAAA,IAAAA,aAAcK,QAAQ;IACrD,CAAC;IAED,OAAOH;AACT,EAAE"}