{"version":3,"sources":["useTimeout.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * @internal\n * Helper to manage a browser timeout.\n * Ensures that the timeout isn't set multiple times at once,\n * and is cleaned up when the component is unloaded.\n *\n * @returns A pair of [setTimeout, clearTimeout] that are stable between renders.\n */\nexport function useTimeout() {\n  const [timeout] = React.useState(() => ({\n    id: undefined as ReturnType<typeof setTimeout> | undefined,\n    set: (fn: () => void, delay: number) => {\n      timeout.clear();\n      timeout.id = setTimeout(fn, delay);\n    },\n    clear: () => {\n      if (timeout.id !== undefined) {\n        clearTimeout(timeout.id);\n        timeout.id = undefined;\n      }\n    },\n  }));\n\n  // Clean up the timeout when the component is unloaded\n  React.useEffect(() => timeout.clear, [timeout]);\n\n  return [timeout.set, timeout.clear] as const;\n}\n"],"names":["React","useTimeout","timeout","useState","id","undefined","set","fn","delay","clear","setTimeout","clearTimeout","useEffect"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAE/B;;;;;;;CAOC,GACD,OAAO,SAASC,aAAa;IAC3B,MAAM,CAACC,QAAQ,GAAGF,MAAMG,QAAQ,CAAC,IAAO,CAAA;YACtCC,IAAIC;YACJC,KAAK,CAACC,IAAgBC,QAAkB;gBACtCN,QAAQO,KAAK;gBACbP,QAAQE,EAAE,GAAGM,WAAWH,IAAIC;YAC9B;YACAC,OAAO,IAAM;gBACX,IAAIP,QAAQE,EAAE,KAAKC,WAAW;oBAC5BM,aAAaT,QAAQE,EAAE;oBACvBF,QAAQE,EAAE,GAAGC;gBACf,CAAC;YACH;QACF,CAAA;IAEA,sDAAsD;IACtDL,MAAMY,SAAS,CAAC,IAAMV,QAAQO,KAAK,EAAE;QAACP;KAAQ;IAE9C,OAAO;QAACA,QAAQI,GAAG;QAAEJ,QAAQO,KAAK;KAAC;AACrC,CAAC"}