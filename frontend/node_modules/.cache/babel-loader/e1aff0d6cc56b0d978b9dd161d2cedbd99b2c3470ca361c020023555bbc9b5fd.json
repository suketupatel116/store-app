{"ast":null,"code":"import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */\nexport const useOnClickOutside = options => {\n  const {\n    refs,\n    callback,\n    element,\n    disabled,\n    contains: containsProp\n  } = options;\n  const timeoutId = React.useRef(undefined);\n  useIFrameFocus(options);\n  const listener = useEventCallback(ev => {\n    const contains = containsProp || ((parent, child) => {\n      return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));\n    });\n    const target = ev.composedPath()[0];\n    const isOutside = refs.every(ref => !contains(ref.current || null, target));\n    if (isOutside && !disabled) {\n      callback(ev);\n    }\n  });\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n    // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = getWindowEvent(window);\n    const conditionalHandler = event => {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      listener(event);\n    };\n    // use capture phase because React can update DOM before the event bubbles to the document\n    element === null || element === void 0 ? void 0 : element.addEventListener('click', conditionalHandler, true);\n    element === null || element === void 0 ? void 0 : element.addEventListener('touchstart', conditionalHandler, true);\n    element === null || element === void 0 ? void 0 : element.addEventListener('contextmenu', conditionalHandler, true);\n    // Garbage collect this event after it's no longer useful to avoid memory leaks\n    timeoutId.current = window.setTimeout(() => {\n      currentEvent = undefined;\n    }, 1);\n    return () => {\n      element === null || element === void 0 ? void 0 : element.removeEventListener('click', conditionalHandler, true);\n      element === null || element === void 0 ? void 0 : element.removeEventListener('touchstart', conditionalHandler, true);\n      element === null || element === void 0 ? void 0 : element.removeEventListener('contextmenu', conditionalHandler, true);\n      clearTimeout(timeoutId.current);\n      currentEvent = undefined;\n    };\n  }, [listener, element, disabled]);\n};\nconst getWindowEvent = target => {\n  if (target) {\n    var _target_ownerDocument, _target_ownerDocument_defaultView;\n    if (typeof target.window === 'object' && target.window === target) {\n      // eslint-disable-next-line deprecation/deprecation\n      return target.event;\n    }\n    var _target_ownerDocument_defaultView_event;\n    // eslint-disable-next-line deprecation/deprecation\n    return (_target_ownerDocument_defaultView_event = (_target_ownerDocument = target.ownerDocument) === null || _target_ownerDocument === void 0 ? void 0 : (_target_ownerDocument_defaultView = _target_ownerDocument.defaultView) === null || _target_ownerDocument_defaultView === void 0 ? void 0 : _target_ownerDocument_defaultView.event) !== null && _target_ownerDocument_defaultView_event !== void 0 ? _target_ownerDocument_defaultView_event : undefined;\n  }\n  return undefined;\n};\nconst FUI_FRAME_EVENT = 'fuiframefocus';\n/**\n * Since click events do not propagate past iframes, we use focus to detect if a\n * click has happened inside an iframe, since the only ways of focusing inside an\n * iframe are:\n *   - clicking inside\n *   - tabbing inside\n *\n * Polls the value of `document.activeElement`. If it is an iframe, then dispatch\n * a custom DOM event. When the custom event is received call the provided callback\n */\nconst useIFrameFocus = options => {\n  const {\n    disabled,\n    element: targetDocument,\n    callback,\n    contains: containsProp = (parent, child) => {\n      return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));\n    },\n    pollDuration = 1000,\n    refs\n  } = options;\n  const timeoutRef = React.useRef();\n  const listener = useEventCallback(e => {\n    const contains = containsProp || ((parent, child) => {\n      return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));\n    });\n    const isOutside = refs.every(ref => !contains(ref.current || null, e.target));\n    if (isOutside && !disabled) {\n      callback(e);\n    }\n  });\n  // Adds listener to the custom iframe focus event\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n    targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener(FUI_FRAME_EVENT, listener, true);\n    return () => {\n      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener(FUI_FRAME_EVENT, listener, true);\n    };\n  }, [targetDocument, disabled, listener]);\n  // Starts polling for the active element\n  React.useEffect(() => {\n    var _targetDocument_defaultView;\n    if (disabled) {\n      return;\n    }\n    timeoutRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.setInterval(() => {\n      const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;\n      if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'IFRAME' || (activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'WEBVIEW') {\n        const event = new CustomEvent(FUI_FRAME_EVENT, {\n          bubbles: true\n        });\n        activeElement.dispatchEvent(event);\n      }\n    }, pollDuration);\n    return () => {\n      var _targetDocument_defaultView;\n      targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.clearTimeout(timeoutRef.current);\n    };\n  }, [targetDocument, disabled, pollDuration]);\n};","map":{"version":3,"names":["React","useEventCallback","useOnClickOutside","options","refs","callback","element","disabled","contains","containsProp","timeoutId","useRef","undefined","useIFrameFocus","listener","ev","parent","child","target","composedPath","isOutside","every","ref","current","useEffect","currentEvent","getWindowEvent","window","conditionalHandler","event","addEventListener","setTimeout","removeEventListener","clearTimeout","_target_ownerDocument","_target_ownerDocument_defaultView","_target_ownerDocument_defaultView_event","ownerDocument","defaultView","FUI_FRAME_EVENT","targetDocument","pollDuration","timeoutRef","e","_targetDocument_defaultView","setInterval","activeElement","tagName","CustomEvent","bubbles","dispatchEvent"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-utilities/lib/hooks/useOnClickOutside.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */ export const useOnClickOutside = (options)=>{\n    const { refs , callback , element , disabled , contains: containsProp  } = options;\n    const timeoutId = React.useRef(undefined);\n    useIFrameFocus(options);\n    const listener = useEventCallback((ev)=>{\n        const contains = containsProp || ((parent, child)=>{\n            return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));\n        });\n        const target = ev.composedPath()[0];\n        const isOutside = refs.every((ref)=>!contains(ref.current || null, target));\n        if (isOutside && !disabled) {\n            callback(ev);\n        }\n    });\n    React.useEffect(()=>{\n        if (disabled) {\n            return;\n        }\n        // Store the current event to avoid triggering handlers immediately\n        // Note this depends on a deprecated but extremely well supported quirk of the web platform\n        // https://github.com/facebook/react/issues/20074\n        let currentEvent = getWindowEvent(window);\n        const conditionalHandler = (event)=>{\n            // Skip if this event is the same as the one running when we added the handlers\n            if (event === currentEvent) {\n                currentEvent = undefined;\n                return;\n            }\n            listener(event);\n        };\n        // use capture phase because React can update DOM before the event bubbles to the document\n        element === null || element === void 0 ? void 0 : element.addEventListener('click', conditionalHandler, true);\n        element === null || element === void 0 ? void 0 : element.addEventListener('touchstart', conditionalHandler, true);\n        element === null || element === void 0 ? void 0 : element.addEventListener('contextmenu', conditionalHandler, true);\n        // Garbage collect this event after it's no longer useful to avoid memory leaks\n        timeoutId.current = window.setTimeout(()=>{\n            currentEvent = undefined;\n        }, 1);\n        return ()=>{\n            element === null || element === void 0 ? void 0 : element.removeEventListener('click', conditionalHandler, true);\n            element === null || element === void 0 ? void 0 : element.removeEventListener('touchstart', conditionalHandler, true);\n            element === null || element === void 0 ? void 0 : element.removeEventListener('contextmenu', conditionalHandler, true);\n            clearTimeout(timeoutId.current);\n            currentEvent = undefined;\n        };\n    }, [\n        listener,\n        element,\n        disabled\n    ]);\n};\nconst getWindowEvent = (target)=>{\n    if (target) {\n        var _target_ownerDocument, _target_ownerDocument_defaultView;\n        if (typeof target.window === 'object' && target.window === target) {\n            // eslint-disable-next-line deprecation/deprecation\n            return target.event;\n        }\n        var _target_ownerDocument_defaultView_event;\n        // eslint-disable-next-line deprecation/deprecation\n        return (_target_ownerDocument_defaultView_event = (_target_ownerDocument = target.ownerDocument) === null || _target_ownerDocument === void 0 ? void 0 : (_target_ownerDocument_defaultView = _target_ownerDocument.defaultView) === null || _target_ownerDocument_defaultView === void 0 ? void 0 : _target_ownerDocument_defaultView.event) !== null && _target_ownerDocument_defaultView_event !== void 0 ? _target_ownerDocument_defaultView_event : undefined;\n    }\n    return undefined;\n};\nconst FUI_FRAME_EVENT = 'fuiframefocus';\n/**\n * Since click events do not propagate past iframes, we use focus to detect if a\n * click has happened inside an iframe, since the only ways of focusing inside an\n * iframe are:\n *   - clicking inside\n *   - tabbing inside\n *\n * Polls the value of `document.activeElement`. If it is an iframe, then dispatch\n * a custom DOM event. When the custom event is received call the provided callback\n */ const useIFrameFocus = (options)=>{\n    const { disabled , element: targetDocument , callback , contains: containsProp = (parent, child)=>{\n        return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));\n    } , pollDuration =1000 , refs  } = options;\n    const timeoutRef = React.useRef();\n    const listener = useEventCallback((e)=>{\n        const contains = containsProp || ((parent, child)=>{\n            return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));\n        });\n        const isOutside = refs.every((ref)=>!contains(ref.current || null, e.target));\n        if (isOutside && !disabled) {\n            callback(e);\n        }\n    });\n    // Adds listener to the custom iframe focus event\n    React.useEffect(()=>{\n        if (disabled) {\n            return;\n        }\n        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener(FUI_FRAME_EVENT, listener, true);\n        return ()=>{\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener(FUI_FRAME_EVENT, listener, true);\n        };\n    }, [\n        targetDocument,\n        disabled,\n        listener\n    ]);\n    // Starts polling for the active element\n    React.useEffect(()=>{\n        var _targetDocument_defaultView;\n        if (disabled) {\n            return;\n        }\n        timeoutRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.setInterval(()=>{\n            const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;\n            if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'IFRAME' || (activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'WEBVIEW') {\n                const event = new CustomEvent(FUI_FRAME_EVENT, {\n                    bubbles: true\n                });\n                activeElement.dispatchEvent(event);\n            }\n        }, pollDuration);\n        return ()=>{\n            var _targetDocument_defaultView;\n            targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.clearTimeout(timeoutRef.current);\n        };\n    }, [\n        targetDocument,\n        disabled,\n        pollDuration\n    ]);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}