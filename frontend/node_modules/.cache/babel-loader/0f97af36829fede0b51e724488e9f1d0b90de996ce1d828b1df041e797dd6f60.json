{"ast":null,"code":"import * as React from 'react';\nexport const useRadioGroupContextValues = state => {\n  const {\n    name,\n    value,\n    defaultValue,\n    disabled,\n    layout,\n    required\n  } = state;\n  const ariaDescribedBy = state.root['aria-describedby'];\n  const radioGroup = React.useMemo(() => ({\n    name,\n    value,\n    defaultValue,\n    disabled,\n    layout,\n    required,\n    'aria-describedby': ariaDescribedBy\n  }), [name, value, defaultValue, disabled, layout, required, ariaDescribedBy]);\n  return {\n    radioGroup\n  };\n};","map":{"version":3,"names":["React","useRadioGroupContextValues","state","name","value","defaultValue","disabled","layout","required","ariaDescribedBy","root","radioGroup","useMemo"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-radio/lib/contexts/useRadioGroupContextValues.js"],"sourcesContent":["import * as React from 'react';\nexport const useRadioGroupContextValues = (state)=>{\n    const { name , value , defaultValue , disabled , layout , required  } = state;\n    const ariaDescribedBy = state.root['aria-describedby'];\n    const radioGroup = React.useMemo(()=>({\n            name,\n            value,\n            defaultValue,\n            disabled,\n            layout,\n            required,\n            'aria-describedby': ariaDescribedBy\n        }), [\n        name,\n        value,\n        defaultValue,\n        disabled,\n        layout,\n        required,\n        ariaDescribedBy\n    ]);\n    return {\n        radioGroup\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAMC,0BAA0B,GAAIC,KAAK,IAAG;EAC/C,MAAM;IAAEC,IAAI;IAAGC,KAAK;IAAGC,YAAY;IAAGC,QAAQ;IAAGC,MAAM;IAAGC;EAAU,CAAC,GAAGN,KAAK;EAC7E,MAAMO,eAAe,GAAGP,KAAK,CAACQ,IAAI,CAAC,kBAAkB,CAAC;EACtD,MAAMC,UAAU,GAAGX,KAAK,CAACY,OAAO,CAAC,OAAK;IAC9BT,IAAI;IACJC,KAAK;IACLC,YAAY;IACZC,QAAQ;IACRC,MAAM;IACNC,QAAQ;IACR,kBAAkB,EAAEC;EACxB,CAAC,CAAC,EAAE,CACJN,IAAI,EACJC,KAAK,EACLC,YAAY,EACZC,QAAQ,EACRC,MAAM,EACNC,QAAQ,EACRC,eAAe,CAClB,CAAC;EACF,OAAO;IACHE;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}