{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\n/**\n * Returns the props and state required to render the component\n * @param props - User-provided props to the Divider component.\n * @param ref - User-provided ref to be passed to the Divider component.\n */\nexport const useDivider_unstable = (props, ref) => {\n  const {\n    alignContent = 'center',\n    appearance = 'default',\n    inset = false,\n    vertical = false,\n    wrapper\n  } = props;\n  const dividerId = useId('divider-');\n  return {\n    // Props passed at the top-level\n    alignContent,\n    appearance,\n    inset,\n    vertical,\n    // Slots definition\n    components: {\n      root: 'div',\n      wrapper: 'div'\n    },\n    root: getNativeElementProps('div', {\n      role: 'separator',\n      'aria-orientation': vertical ? 'vertical' : 'horizontal',\n      'aria-labelledby': props.children ? dividerId : undefined,\n      ...props,\n      ref\n    }),\n    wrapper: resolveShorthand(wrapper, {\n      required: true,\n      defaultProps: {\n        id: dividerId,\n        children: props.children\n      }\n    })\n  };\n};","map":{"version":3,"names":["React","getNativeElementProps","resolveShorthand","useId","useDivider_unstable","props","ref","alignContent","appearance","inset","vertical","wrapper","dividerId","components","root","role","children","undefined","required","defaultProps","id"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-divider/lib/components/Divider/useDivider.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\n/**\n * Returns the props and state required to render the component\n * @param props - User-provided props to the Divider component.\n * @param ref - User-provided ref to be passed to the Divider component.\n */ export const useDivider_unstable = (props, ref)=>{\n    const { alignContent ='center' , appearance ='default' , inset =false , vertical =false , wrapper  } = props;\n    const dividerId = useId('divider-');\n    return {\n        // Props passed at the top-level\n        alignContent,\n        appearance,\n        inset,\n        vertical,\n        // Slots definition\n        components: {\n            root: 'div',\n            wrapper: 'div'\n        },\n        root: getNativeElementProps('div', {\n            role: 'separator',\n            'aria-orientation': vertical ? 'vertical' : 'horizontal',\n            'aria-labelledby': props.children ? dividerId : undefined,\n            ...props,\n            ref\n        }),\n        wrapper: resolveShorthand(wrapper, {\n            required: true,\n            defaultProps: {\n                id: dividerId,\n                children: props.children\n            }\n        })\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,2BAA2B;AAC1F;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACjD,MAAM;IAAEC,YAAY,GAAE,QAAQ;IAAGC,UAAU,GAAE,SAAS;IAAGC,KAAK,GAAE,KAAK;IAAGC,QAAQ,GAAE,KAAK;IAAGC;EAAS,CAAC,GAAGN,KAAK;EAC5G,MAAMO,SAAS,GAAGT,KAAK,CAAC,UAAU,CAAC;EACnC,OAAO;IACH;IACAI,YAAY;IACZC,UAAU;IACVC,KAAK;IACLC,QAAQ;IACR;IACAG,UAAU,EAAE;MACRC,IAAI,EAAE,KAAK;MACXH,OAAO,EAAE;IACb,CAAC;IACDG,IAAI,EAAEb,qBAAqB,CAAC,KAAK,EAAE;MAC/Bc,IAAI,EAAE,WAAW;MACjB,kBAAkB,EAAEL,QAAQ,GAAG,UAAU,GAAG,YAAY;MACxD,iBAAiB,EAAEL,KAAK,CAACW,QAAQ,GAAGJ,SAAS,GAAGK,SAAS;MACzD,GAAGZ,KAAK;MACRC;IACJ,CAAC,CAAC;IACFK,OAAO,EAAET,gBAAgB,CAACS,OAAO,EAAE;MAC/BO,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACVC,EAAE,EAAER,SAAS;QACbI,QAAQ,EAAEX,KAAK,CAACW;MACpB;IACJ,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}