{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable } from '../../contexts/dialogContext';\nimport { Dismiss20Regular } from '@fluentui/react-icons';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { DialogTrigger } from '../DialogTrigger/DialogTrigger';\nimport { useDialogTitleInternalStyles } from './useDialogTitleStyles.styles';\n/**\n * Create the state required to render DialogTitle.\n *\n * The returned state can be modified with hooks such as useDialogTitleStyles_unstable,\n * before being passed to renderDialogTitle_unstable.\n *\n * @param props - props from this instance of DialogTitle\n * @param ref - reference to root HTMLElement of DialogTitle\n */\nexport const useDialogTitle_unstable = (props, ref) => {\n  const {\n    as,\n    action\n  } = props;\n  const modalType = useDialogContext_unstable(ctx => ctx.modalType);\n  const internalStyles = useDialogTitleInternalStyles();\n  return {\n    components: {\n      root: 'h2',\n      action: 'div'\n    },\n    root: getNativeElementProps(as !== null && as !== void 0 ? as : 'h2', {\n      ref,\n      id: useDialogContext_unstable(ctx => ctx.dialogTitleId),\n      ...props\n    }),\n    action: resolveShorthand(action, {\n      required: modalType === 'non-modal',\n      defaultProps: {\n        children: /*#__PURE__*/React.createElement(DialogTrigger, {\n          disableButtonEnhancement: true,\n          action: \"close\"\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: internalStyles.button,\n          // TODO: find a better way to add internal labels\n          \"aria-label\": \"close\"\n        }, /*#__PURE__*/React.createElement(Dismiss20Regular, null)))\n      }\n    })\n  };\n};","map":{"version":3,"names":["React","getNativeElementProps","useDialogContext_unstable","Dismiss20Regular","resolveShorthand","DialogTrigger","useDialogTitleInternalStyles","useDialogTitle_unstable","props","ref","as","action","modalType","ctx","internalStyles","components","root","id","dialogTitleId","required","defaultProps","children","createElement","disableButtonEnhancement","type","className","button"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-dialog/lib/components/DialogTitle/useDialogTitle.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable } from '../../contexts/dialogContext';\nimport { Dismiss20Regular } from '@fluentui/react-icons';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { DialogTrigger } from '../DialogTrigger/DialogTrigger';\nimport { useDialogTitleInternalStyles } from './useDialogTitleStyles.styles';\n/**\n * Create the state required to render DialogTitle.\n *\n * The returned state can be modified with hooks such as useDialogTitleStyles_unstable,\n * before being passed to renderDialogTitle_unstable.\n *\n * @param props - props from this instance of DialogTitle\n * @param ref - reference to root HTMLElement of DialogTitle\n */ export const useDialogTitle_unstable = (props, ref)=>{\n    const { as , action  } = props;\n    const modalType = useDialogContext_unstable((ctx)=>ctx.modalType);\n    const internalStyles = useDialogTitleInternalStyles();\n    return {\n        components: {\n            root: 'h2',\n            action: 'div'\n        },\n        root: getNativeElementProps(as !== null && as !== void 0 ? as : 'h2', {\n            ref,\n            id: useDialogContext_unstable((ctx)=>ctx.dialogTitleId),\n            ...props\n        }),\n        action: resolveShorthand(action, {\n            required: modalType === 'non-modal',\n            defaultProps: {\n                children: /*#__PURE__*/ React.createElement(DialogTrigger, {\n                    disableButtonEnhancement: true,\n                    action: \"close\"\n                }, /*#__PURE__*/ React.createElement(\"button\", {\n                    type: \"button\",\n                    className: internalStyles.button,\n                    // TODO: find a better way to add internal labels\n                    \"aria-label\": \"close\"\n                }, /*#__PURE__*/ React.createElement(Dismiss20Regular, null)))\n            }\n        })\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,yBAAyB,QAAQ,8BAA8B;AACxE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,4BAA4B,QAAQ,+BAA+B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACrD,MAAM;IAAEC,EAAE;IAAGC;EAAQ,CAAC,GAAGH,KAAK;EAC9B,MAAMI,SAAS,GAAGV,yBAAyB,CAAEW,GAAG,IAAGA,GAAG,CAACD,SAAS,CAAC;EACjE,MAAME,cAAc,GAAGR,4BAA4B,CAAC,CAAC;EACrD,OAAO;IACHS,UAAU,EAAE;MACRC,IAAI,EAAE,IAAI;MACVL,MAAM,EAAE;IACZ,CAAC;IACDK,IAAI,EAAEf,qBAAqB,CAACS,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI,EAAE;MAClED,GAAG;MACHQ,EAAE,EAAEf,yBAAyB,CAAEW,GAAG,IAAGA,GAAG,CAACK,aAAa,CAAC;MACvD,GAAGV;IACP,CAAC,CAAC;IACFG,MAAM,EAAEP,gBAAgB,CAACO,MAAM,EAAE;MAC7BQ,QAAQ,EAAEP,SAAS,KAAK,WAAW;MACnCQ,YAAY,EAAE;QACVC,QAAQ,EAAE,aAAcrB,KAAK,CAACsB,aAAa,CAACjB,aAAa,EAAE;UACvDkB,wBAAwB,EAAE,IAAI;UAC9BZ,MAAM,EAAE;QACZ,CAAC,EAAE,aAAcX,KAAK,CAACsB,aAAa,CAAC,QAAQ,EAAE;UAC3CE,IAAI,EAAE,QAAQ;UACdC,SAAS,EAAEX,cAAc,CAACY,MAAM;UAChC;UACA,YAAY,EAAE;QAClB,CAAC,EAAE,aAAc1B,KAAK,CAACsB,aAAa,CAACnB,gBAAgB,EAAE,IAAI,CAAC,CAAC;MACjE;IACJ,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}