{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId, useMergedRefs } from '@fluentui/react-utilities';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { CheckmarkFilled, Checkmark12Filled } from '@fluentui/react-icons';\nimport { ComboboxContext } from '../../contexts/ComboboxContext';\nimport { ListboxContext } from '../../contexts/ListboxContext';\nfunction getTextString(text, children) {\n  if (text !== undefined) {\n    return text;\n  }\n  let textString = '';\n  let hasNonStringChild = false;\n  React.Children.forEach(children, child => {\n    if (typeof child === 'string') {\n      textString += child;\n    } else {\n      hasNonStringChild = true;\n    }\n  });\n  // warn if an Option has non-string children and no text prop\n  if (hasNonStringChild) {\n    // eslint-disable-next-line no-console\n    console.warn('Provide a `text` prop to Option components when they contain non-string children.');\n  }\n  return textString;\n}\n/**\n * Create the state required to render Option.\n *\n * The returned state can be modified with hooks such as useOptionStyles_unstable,\n * before being passed to renderOption_unstable.\n *\n * @param props - props from this instance of Option\n * @param ref - reference to root HTMLElement of Option\n */\nexport const useOption_unstable = (props, ref) => {\n  const {\n    children,\n    disabled,\n    text,\n    value\n  } = props;\n  const optionRef = React.useRef(null);\n  const optionText = getTextString(text, children);\n  const optionValue = value !== null && value !== void 0 ? value : optionText;\n  // use the id if provided, otherwise use a generated id\n  const id = useId('fluent-option', props.id);\n  // data used for context registration & events\n  const optionData = React.useMemo(() => ({\n    id,\n    disabled,\n    text: optionText,\n    value: optionValue\n  }), [id, disabled, optionText, optionValue]);\n  // context values\n  const focusVisible = useContextSelector(ListboxContext, ctx => ctx.focusVisible);\n  const multiselect = useContextSelector(ListboxContext, ctx => ctx.multiselect);\n  const registerOption = useContextSelector(ListboxContext, ctx => ctx.registerOption);\n  const selected = useContextSelector(ListboxContext, ctx => {\n    const selectedOptions = ctx.selectedOptions;\n    return !!optionValue && !!selectedOptions.find(o => o === optionValue);\n  });\n  const selectOption = useContextSelector(ListboxContext, ctx => ctx.selectOption);\n  const setActiveOption = useContextSelector(ListboxContext, ctx => ctx.setActiveOption);\n  const setOpen = useContextSelector(ComboboxContext, ctx => ctx.setOpen);\n  // current active option?\n  const active = useContextSelector(ListboxContext, ctx => {\n    var _ctx_activeOption, _ctx_activeOption1;\n    return ((_ctx_activeOption = ctx.activeOption) === null || _ctx_activeOption === void 0 ? void 0 : _ctx_activeOption.id) !== undefined && ((_ctx_activeOption1 = ctx.activeOption) === null || _ctx_activeOption1 === void 0 ? void 0 : _ctx_activeOption1.id) === id;\n  });\n  // check icon\n  let CheckIcon = /*#__PURE__*/React.createElement(CheckmarkFilled, null);\n  if (multiselect) {\n    CheckIcon = selected ? /*#__PURE__*/React.createElement(Checkmark12Filled, null) : '';\n  }\n  const onClick = event => {\n    var _props_onClick;\n    if (disabled) {\n      event.preventDefault();\n      return;\n    }\n    // clicked option should always become active option\n    setActiveOption(optionData);\n    // close on option click for single-select options in a combobox\n    if (!multiselect) {\n      setOpen === null || setOpen === void 0 ? void 0 : setOpen(event, false);\n    }\n    // handle selection change\n    selectOption(event, optionData);\n    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);\n  };\n  // register option data with context\n  React.useEffect(() => {\n    if (id && optionRef.current) {\n      return registerOption(optionData, optionRef.current);\n    }\n  }, [id, optionData, registerOption]);\n  const semanticProps = multiselect ? {\n    role: 'menuitemcheckbox',\n    'aria-checked': selected\n  } : {\n    role: 'option',\n    'aria-selected': selected\n  };\n  return {\n    components: {\n      root: 'div',\n      checkIcon: 'span'\n    },\n    root: getNativeElementProps('div', {\n      ref: useMergedRefs(ref, optionRef),\n      'aria-disabled': disabled ? 'true' : undefined,\n      id,\n      ...semanticProps,\n      ...props,\n      onClick\n    }),\n    checkIcon: resolveShorthand(props.checkIcon, {\n      required: true,\n      defaultProps: {\n        'aria-hidden': 'true',\n        children: CheckIcon\n      }\n    }),\n    active,\n    disabled,\n    focusVisible,\n    multiselect,\n    selected\n  };\n};","map":{"version":3,"names":["React","getNativeElementProps","resolveShorthand","useId","useMergedRefs","useContextSelector","CheckmarkFilled","Checkmark12Filled","ComboboxContext","ListboxContext","getTextString","text","children","undefined","textString","hasNonStringChild","Children","forEach","child","console","warn","useOption_unstable","props","ref","disabled","value","optionRef","useRef","optionText","optionValue","id","optionData","useMemo","focusVisible","ctx","multiselect","registerOption","selected","selectedOptions","find","o","selectOption","setActiveOption","setOpen","active","_ctx_activeOption","_ctx_activeOption1","activeOption","CheckIcon","createElement","onClick","event","_props_onClick","preventDefault","call","useEffect","current","semanticProps","role","components","root","checkIcon","required","defaultProps"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-combobox/lib/components/Option/useOption.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId, useMergedRefs } from '@fluentui/react-utilities';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { CheckmarkFilled, Checkmark12Filled } from '@fluentui/react-icons';\nimport { ComboboxContext } from '../../contexts/ComboboxContext';\nimport { ListboxContext } from '../../contexts/ListboxContext';\nfunction getTextString(text, children) {\n    if (text !== undefined) {\n        return text;\n    }\n    let textString = '';\n    let hasNonStringChild = false;\n    React.Children.forEach(children, (child)=>{\n        if (typeof child === 'string') {\n            textString += child;\n        } else {\n            hasNonStringChild = true;\n        }\n    });\n    // warn if an Option has non-string children and no text prop\n    if (hasNonStringChild) {\n        // eslint-disable-next-line no-console\n        console.warn('Provide a `text` prop to Option components when they contain non-string children.');\n    }\n    return textString;\n}\n/**\n * Create the state required to render Option.\n *\n * The returned state can be modified with hooks such as useOptionStyles_unstable,\n * before being passed to renderOption_unstable.\n *\n * @param props - props from this instance of Option\n * @param ref - reference to root HTMLElement of Option\n */ export const useOption_unstable = (props, ref)=>{\n    const { children , disabled , text , value  } = props;\n    const optionRef = React.useRef(null);\n    const optionText = getTextString(text, children);\n    const optionValue = value !== null && value !== void 0 ? value : optionText;\n    // use the id if provided, otherwise use a generated id\n    const id = useId('fluent-option', props.id);\n    // data used for context registration & events\n    const optionData = React.useMemo(()=>({\n            id,\n            disabled,\n            text: optionText,\n            value: optionValue\n        }), [\n        id,\n        disabled,\n        optionText,\n        optionValue\n    ]);\n    // context values\n    const focusVisible = useContextSelector(ListboxContext, (ctx)=>ctx.focusVisible);\n    const multiselect = useContextSelector(ListboxContext, (ctx)=>ctx.multiselect);\n    const registerOption = useContextSelector(ListboxContext, (ctx)=>ctx.registerOption);\n    const selected = useContextSelector(ListboxContext, (ctx)=>{\n        const selectedOptions = ctx.selectedOptions;\n        return !!optionValue && !!selectedOptions.find((o)=>o === optionValue);\n    });\n    const selectOption = useContextSelector(ListboxContext, (ctx)=>ctx.selectOption);\n    const setActiveOption = useContextSelector(ListboxContext, (ctx)=>ctx.setActiveOption);\n    const setOpen = useContextSelector(ComboboxContext, (ctx)=>ctx.setOpen);\n    // current active option?\n    const active = useContextSelector(ListboxContext, (ctx)=>{\n        var _ctx_activeOption, _ctx_activeOption1;\n        return ((_ctx_activeOption = ctx.activeOption) === null || _ctx_activeOption === void 0 ? void 0 : _ctx_activeOption.id) !== undefined && ((_ctx_activeOption1 = ctx.activeOption) === null || _ctx_activeOption1 === void 0 ? void 0 : _ctx_activeOption1.id) === id;\n    });\n    // check icon\n    let CheckIcon = /*#__PURE__*/ React.createElement(CheckmarkFilled, null);\n    if (multiselect) {\n        CheckIcon = selected ? /*#__PURE__*/ React.createElement(Checkmark12Filled, null) : '';\n    }\n    const onClick = (event)=>{\n        var _props_onClick;\n        if (disabled) {\n            event.preventDefault();\n            return;\n        }\n        // clicked option should always become active option\n        setActiveOption(optionData);\n        // close on option click for single-select options in a combobox\n        if (!multiselect) {\n            setOpen === null || setOpen === void 0 ? void 0 : setOpen(event, false);\n        }\n        // handle selection change\n        selectOption(event, optionData);\n        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);\n    };\n    // register option data with context\n    React.useEffect(()=>{\n        if (id && optionRef.current) {\n            return registerOption(optionData, optionRef.current);\n        }\n    }, [\n        id,\n        optionData,\n        registerOption\n    ]);\n    const semanticProps = multiselect ? {\n        role: 'menuitemcheckbox',\n        'aria-checked': selected\n    } : {\n        role: 'option',\n        'aria-selected': selected\n    };\n    return {\n        components: {\n            root: 'div',\n            checkIcon: 'span'\n        },\n        root: getNativeElementProps('div', {\n            ref: useMergedRefs(ref, optionRef),\n            'aria-disabled': disabled ? 'true' : undefined,\n            id,\n            ...semanticProps,\n            ...props,\n            onClick\n        }),\n        checkIcon: resolveShorthand(props.checkIcon, {\n            required: true,\n            defaultProps: {\n                'aria-hidden': 'true',\n                children: CheckIcon\n            }\n        }),\n        active,\n        disabled,\n        focusVisible,\n        multiselect,\n        selected\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}