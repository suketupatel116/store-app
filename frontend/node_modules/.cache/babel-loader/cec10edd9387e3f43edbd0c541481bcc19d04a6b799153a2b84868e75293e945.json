{"ast":null,"code":"import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { dispatchToast as dispatchToastVanilla, dismissToast as dismissToastVanilla, dismissAllToasts as dismissAllToastsVanilla, updateToast as updateToastVanilla, playToast as playToastVanilla, pauseToast as pauseToastVanilla } from './vanilla';\nconst noop = () => undefined;\n/**\n * @param toasterId - If an id is provided all imperative methods control that specific toaster\n * @returns Imperative methods to control toasts\n */\nexport function useToastController(toasterId) {\n  const {\n    targetDocument\n  } = useFluent();\n  return React.useMemo(() => {\n    if (!targetDocument) {\n      return {\n        dispatchToast: noop,\n        dismissToast: noop,\n        dismissAllToasts: noop,\n        updateToast: noop,\n        pauseToast: noop,\n        playToast: noop\n      };\n    }\n    return {\n      dispatchToast: (content, options) => {\n        dispatchToastVanilla(content, {\n          ...options,\n          toasterId,\n          data: {\n            root: options === null || options === void 0 ? void 0 : options.root\n          }\n        }, targetDocument);\n      },\n      dismissToast: toastId => {\n        dismissToastVanilla(toastId, toasterId, targetDocument);\n      },\n      dismissAllToasts: () => {\n        dismissAllToastsVanilla(toasterId, targetDocument);\n      },\n      updateToast: options => {\n        updateToastVanilla({\n          ...options,\n          data: {\n            root: options.root\n          },\n          toasterId\n        }, targetDocument);\n      },\n      pauseToast: toastId => {\n        pauseToastVanilla(toastId, toasterId, targetDocument);\n      },\n      playToast: toastId => {\n        playToastVanilla(toastId, toasterId, targetDocument);\n      }\n    };\n  }, [targetDocument, toasterId]);\n}","map":{"version":3,"names":["React","useFluent_unstable","useFluent","dispatchToast","dispatchToastVanilla","dismissToast","dismissToastVanilla","dismissAllToasts","dismissAllToastsVanilla","updateToast","updateToastVanilla","playToast","playToastVanilla","pauseToast","pauseToastVanilla","noop","undefined","useToastController","toasterId","targetDocument","useMemo","content","options","data","root","toastId"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-toast/lib/state/useToastController.js"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { dispatchToast as dispatchToastVanilla, dismissToast as dismissToastVanilla, dismissAllToasts as dismissAllToastsVanilla, updateToast as updateToastVanilla, playToast as playToastVanilla, pauseToast as pauseToastVanilla } from './vanilla';\nconst noop = ()=>undefined;\n/**\n * @param toasterId - If an id is provided all imperative methods control that specific toaster\n * @returns Imperative methods to control toasts\n */ export function useToastController(toasterId) {\n    const { targetDocument  } = useFluent();\n    return React.useMemo(()=>{\n        if (!targetDocument) {\n            return {\n                dispatchToast: noop,\n                dismissToast: noop,\n                dismissAllToasts: noop,\n                updateToast: noop,\n                pauseToast: noop,\n                playToast: noop\n            };\n        }\n        return {\n            dispatchToast: (content, options)=>{\n                dispatchToastVanilla(content, {\n                    ...options,\n                    toasterId,\n                    data: {\n                        root: options === null || options === void 0 ? void 0 : options.root\n                    }\n                }, targetDocument);\n            },\n            dismissToast: (toastId)=>{\n                dismissToastVanilla(toastId, toasterId, targetDocument);\n            },\n            dismissAllToasts: ()=>{\n                dismissAllToastsVanilla(toasterId, targetDocument);\n            },\n            updateToast: (options)=>{\n                updateToastVanilla({\n                    ...options,\n                    data: {\n                        root: options.root\n                    },\n                    toasterId\n                }, targetDocument);\n            },\n            pauseToast: (toastId)=>{\n                pauseToastVanilla(toastId, toasterId, targetDocument);\n            },\n            playToast: (toastId)=>{\n                playToastVanilla(toastId, toasterId, targetDocument);\n            }\n        };\n    }, [\n        targetDocument,\n        toasterId\n    ]);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,IAAIC,SAAS,QAAQ,iCAAiC;AACjF,SAASC,aAAa,IAAIC,oBAAoB,EAAEC,YAAY,IAAIC,mBAAmB,EAAEC,gBAAgB,IAAIC,uBAAuB,EAAEC,WAAW,IAAIC,kBAAkB,EAAEC,SAAS,IAAIC,gBAAgB,EAAEC,UAAU,IAAIC,iBAAiB,QAAQ,WAAW;AACtP,MAAMC,IAAI,GAAGA,CAAA,KAAIC,SAAS;AAC1B;AACA;AACA;AACA;AAAI,OAAO,SAASC,kBAAkBA,CAACC,SAAS,EAAE;EAC9C,MAAM;IAAEC;EAAgB,CAAC,GAAGjB,SAAS,CAAC,CAAC;EACvC,OAAOF,KAAK,CAACoB,OAAO,CAAC,MAAI;IACrB,IAAI,CAACD,cAAc,EAAE;MACjB,OAAO;QACHhB,aAAa,EAAEY,IAAI;QACnBV,YAAY,EAAEU,IAAI;QAClBR,gBAAgB,EAAEQ,IAAI;QACtBN,WAAW,EAAEM,IAAI;QACjBF,UAAU,EAAEE,IAAI;QAChBJ,SAAS,EAAEI;MACf,CAAC;IACL;IACA,OAAO;MACHZ,aAAa,EAAEA,CAACkB,OAAO,EAAEC,OAAO,KAAG;QAC/BlB,oBAAoB,CAACiB,OAAO,EAAE;UAC1B,GAAGC,OAAO;UACVJ,SAAS;UACTK,IAAI,EAAE;YACFC,IAAI,EAAEF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACE;UACpE;QACJ,CAAC,EAAEL,cAAc,CAAC;MACtB,CAAC;MACDd,YAAY,EAAGoB,OAAO,IAAG;QACrBnB,mBAAmB,CAACmB,OAAO,EAAEP,SAAS,EAAEC,cAAc,CAAC;MAC3D,CAAC;MACDZ,gBAAgB,EAAEA,CAAA,KAAI;QAClBC,uBAAuB,CAACU,SAAS,EAAEC,cAAc,CAAC;MACtD,CAAC;MACDV,WAAW,EAAGa,OAAO,IAAG;QACpBZ,kBAAkB,CAAC;UACf,GAAGY,OAAO;UACVC,IAAI,EAAE;YACFC,IAAI,EAAEF,OAAO,CAACE;UAClB,CAAC;UACDN;QACJ,CAAC,EAAEC,cAAc,CAAC;MACtB,CAAC;MACDN,UAAU,EAAGY,OAAO,IAAG;QACnBX,iBAAiB,CAACW,OAAO,EAAEP,SAAS,EAAEC,cAAc,CAAC;MACzD,CAAC;MACDR,SAAS,EAAGc,OAAO,IAAG;QAClBb,gBAAgB,CAACa,OAAO,EAAEP,SAAS,EAAEC,cAAc,CAAC;MACxD;IACJ,CAAC;EACL,CAAC,EAAE,CACCA,cAAc,EACdD,SAAS,CACZ,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}