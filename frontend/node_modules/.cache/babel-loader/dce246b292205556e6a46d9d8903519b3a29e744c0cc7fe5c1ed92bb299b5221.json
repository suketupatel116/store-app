{"ast":null,"code":"import * as React from 'react';\nimport { useThemeClassName_unstable as useThemeClassName, useFluent_unstable as useFluent, usePortalMountNode as usePortalMountNodeContext } from '@fluentui/react-shared-contexts';\nimport { mergeClasses } from '@griffel/react';\nimport { useFocusVisible } from '@fluentui/react-tabster';\nimport { useDisposable } from 'use-disposable';\nimport { usePortalMountNodeStylesStyles } from './usePortalMountNodeStyles.styles';\nconst useInsertionEffect = React['useInsertion' + 'Effect'];\n/**\n * Creates a new element on a \"document.body\" to mount portals.\n */\nexport const usePortalMountNode = options => {\n  const {\n    targetDocument,\n    dir\n  } = useFluent();\n  const mountNode = usePortalMountNodeContext();\n  const focusVisibleRef = useFocusVisible();\n  const classes = usePortalMountNodeStylesStyles();\n  const themeClassName = useThemeClassName();\n  const className = mergeClasses(themeClassName, classes.root, options.className);\n  const targetNode = mountNode !== null && mountNode !== void 0 ? mountNode : targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.body;\n  const element = useDisposable(() => {\n    if (targetNode === undefined || options.disabled) {\n      return [null, () => null];\n    }\n    const newElement = targetNode.ownerDocument.createElement('div');\n    targetNode.appendChild(newElement);\n    return [newElement, () => newElement.remove()];\n  }, [targetNode]);\n  if (useInsertionEffect) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useInsertionEffect(() => {\n      if (!element) {\n        return;\n      }\n      const classesToApply = className.split(' ').filter(Boolean);\n      element.classList.add(...classesToApply);\n      element.setAttribute('dir', dir);\n      focusVisibleRef.current = element;\n      return () => {\n        element.classList.remove(...classesToApply);\n        element.removeAttribute('dir');\n      };\n    }, [className, dir, element, focusVisibleRef]);\n  } else {\n    // This useMemo call is intentional for React 17\n    // We don't want to re-create the portal element when its attributes change.\n    // This also should not be done in an effect because, changing the value of css variables\n    // after initial mount can trigger interesting CSS side effects like transitions.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useMemo(() => {\n      if (!element) {\n        return;\n      }\n      // Force replace all classes\n      element.className = className;\n      element.setAttribute('dir', dir);\n      focusVisibleRef.current = element;\n    }, [className, dir, element, focusVisibleRef]);\n  }\n  return element;\n};","map":{"version":3,"names":["React","useThemeClassName_unstable","useThemeClassName","useFluent_unstable","useFluent","usePortalMountNode","usePortalMountNodeContext","mergeClasses","useFocusVisible","useDisposable","usePortalMountNodeStylesStyles","useInsertionEffect","options","targetDocument","dir","mountNode","focusVisibleRef","classes","themeClassName","className","root","targetNode","body","element","undefined","disabled","newElement","ownerDocument","createElement","appendChild","remove","classesToApply","split","filter","Boolean","classList","add","setAttribute","current","removeAttribute","useMemo"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-portal/lib/components/Portal/usePortalMountNode.js"],"sourcesContent":["import * as React from 'react';\nimport { useThemeClassName_unstable as useThemeClassName, useFluent_unstable as useFluent, usePortalMountNode as usePortalMountNodeContext } from '@fluentui/react-shared-contexts';\nimport { mergeClasses } from '@griffel/react';\nimport { useFocusVisible } from '@fluentui/react-tabster';\nimport { useDisposable } from 'use-disposable';\nimport { usePortalMountNodeStylesStyles } from './usePortalMountNodeStyles.styles';\nconst useInsertionEffect = React['useInsertion' + 'Effect'];\n/**\n * Creates a new element on a \"document.body\" to mount portals.\n */ export const usePortalMountNode = (options)=>{\n    const { targetDocument , dir  } = useFluent();\n    const mountNode = usePortalMountNodeContext();\n    const focusVisibleRef = useFocusVisible();\n    const classes = usePortalMountNodeStylesStyles();\n    const themeClassName = useThemeClassName();\n    const className = mergeClasses(themeClassName, classes.root, options.className);\n    const targetNode = mountNode !== null && mountNode !== void 0 ? mountNode : targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.body;\n    const element = useDisposable(()=>{\n        if (targetNode === undefined || options.disabled) {\n            return [\n                null,\n                ()=>null\n            ];\n        }\n        const newElement = targetNode.ownerDocument.createElement('div');\n        targetNode.appendChild(newElement);\n        return [\n            newElement,\n            ()=>newElement.remove()\n        ];\n    }, [\n        targetNode\n    ]);\n    if (useInsertionEffect) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useInsertionEffect(()=>{\n            if (!element) {\n                return;\n            }\n            const classesToApply = className.split(' ').filter(Boolean);\n            element.classList.add(...classesToApply);\n            element.setAttribute('dir', dir);\n            focusVisibleRef.current = element;\n            return ()=>{\n                element.classList.remove(...classesToApply);\n                element.removeAttribute('dir');\n            };\n        }, [\n            className,\n            dir,\n            element,\n            focusVisibleRef\n        ]);\n    } else {\n        // This useMemo call is intentional for React 17\n        // We don't want to re-create the portal element when its attributes change.\n        // This also should not be done in an effect because, changing the value of css variables\n        // after initial mount can trigger interesting CSS side effects like transitions.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        React.useMemo(()=>{\n            if (!element) {\n                return;\n            }\n            // Force replace all classes\n            element.className = className;\n            element.setAttribute('dir', dir);\n            focusVisibleRef.current = element;\n        }, [\n            className,\n            dir,\n            element,\n            focusVisibleRef\n        ]);\n    }\n    return element;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,0BAA0B,IAAIC,iBAAiB,EAAEC,kBAAkB,IAAIC,SAAS,EAAEC,kBAAkB,IAAIC,yBAAyB,QAAQ,iCAAiC;AACnL,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,8BAA8B,QAAQ,mCAAmC;AAClF,MAAMC,kBAAkB,GAAGX,KAAK,CAAC,cAAc,GAAG,QAAQ,CAAC;AAC3D;AACA;AACA;AAAI,OAAO,MAAMK,kBAAkB,GAAIO,OAAO,IAAG;EAC7C,MAAM;IAAEC,cAAc;IAAGC;EAAK,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC7C,MAAMW,SAAS,GAAGT,yBAAyB,CAAC,CAAC;EAC7C,MAAMU,eAAe,GAAGR,eAAe,CAAC,CAAC;EACzC,MAAMS,OAAO,GAAGP,8BAA8B,CAAC,CAAC;EAChD,MAAMQ,cAAc,GAAGhB,iBAAiB,CAAC,CAAC;EAC1C,MAAMiB,SAAS,GAAGZ,YAAY,CAACW,cAAc,EAAED,OAAO,CAACG,IAAI,EAAER,OAAO,CAACO,SAAS,CAAC;EAC/E,MAAME,UAAU,GAAGN,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAGA,SAAS,GAAGF,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACS,IAAI;EAC/J,MAAMC,OAAO,GAAGd,aAAa,CAAC,MAAI;IAC9B,IAAIY,UAAU,KAAKG,SAAS,IAAIZ,OAAO,CAACa,QAAQ,EAAE;MAC9C,OAAO,CACH,IAAI,EACJ,MAAI,IAAI,CACX;IACL;IACA,MAAMC,UAAU,GAAGL,UAAU,CAACM,aAAa,CAACC,aAAa,CAAC,KAAK,CAAC;IAChEP,UAAU,CAACQ,WAAW,CAACH,UAAU,CAAC;IAClC,OAAO,CACHA,UAAU,EACV,MAAIA,UAAU,CAACI,MAAM,CAAC,CAAC,CAC1B;EACL,CAAC,EAAE,CACCT,UAAU,CACb,CAAC;EACF,IAAIV,kBAAkB,EAAE;IACpB;IACAA,kBAAkB,CAAC,MAAI;MACnB,IAAI,CAACY,OAAO,EAAE;QACV;MACJ;MACA,MAAMQ,cAAc,GAAGZ,SAAS,CAACa,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;MAC3DX,OAAO,CAACY,SAAS,CAACC,GAAG,CAAC,GAAGL,cAAc,CAAC;MACxCR,OAAO,CAACc,YAAY,CAAC,KAAK,EAAEvB,GAAG,CAAC;MAChCE,eAAe,CAACsB,OAAO,GAAGf,OAAO;MACjC,OAAO,MAAI;QACPA,OAAO,CAACY,SAAS,CAACL,MAAM,CAAC,GAAGC,cAAc,CAAC;QAC3CR,OAAO,CAACgB,eAAe,CAAC,KAAK,CAAC;MAClC,CAAC;IACL,CAAC,EAAE,CACCpB,SAAS,EACTL,GAAG,EACHS,OAAO,EACPP,eAAe,CAClB,CAAC;EACN,CAAC,MAAM;IACH;IACA;IACA;IACA;IACA;IACAhB,KAAK,CAACwC,OAAO,CAAC,MAAI;MACd,IAAI,CAACjB,OAAO,EAAE;QACV;MACJ;MACA;MACAA,OAAO,CAACJ,SAAS,GAAGA,SAAS;MAC7BI,OAAO,CAACc,YAAY,CAAC,KAAK,EAAEvB,GAAG,CAAC;MAChCE,eAAe,CAACsB,OAAO,GAAGf,OAAO;IACrC,CAAC,EAAE,CACCJ,SAAS,EACTL,GAAG,EACHS,OAAO,EACPP,eAAe,CAClB,CAAC;EACN;EACA,OAAOO,OAAO;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}