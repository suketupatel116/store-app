{"ast":null,"code":"import { getParent } from './getParent';\n/**\n * Similar functionality to `element.contains` DOM API for use without of order DOM elements that\n * checks the virtual parent hierarchy. If a virtual parents exists, it is chosen over the actual parent\n *\n * @returns true if the child can find the parent in its virtual hierarchy\n */\nexport function elementContains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  if (parent === child) {\n    return true;\n  } else {\n    // Tracks references of nodes that have been visited to prevent infinite loops\n    const set = new WeakSet();\n    while (child) {\n      const nextParent = getParent(child, {\n        skipVirtual: set.has(child)\n      });\n      set.add(child);\n      if (nextParent === parent) {\n        return true;\n      }\n      child = nextParent;\n    }\n  }\n  return false;\n}","map":{"version":3,"names":["getParent","elementContains","parent","child","set","WeakSet","nextParent","skipVirtual","has","add"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-portal/lib/virtualParent/elementContains.js"],"sourcesContent":["import { getParent } from './getParent';\n/**\n * Similar functionality to `element.contains` DOM API for use without of order DOM elements that\n * checks the virtual parent hierarchy. If a virtual parents exists, it is chosen over the actual parent\n *\n * @returns true if the child can find the parent in its virtual hierarchy\n */ export function elementContains(parent, child) {\n    if (!parent || !child) {\n        return false;\n    }\n    if (parent === child) {\n        return true;\n    } else {\n        // Tracks references of nodes that have been visited to prevent infinite loops\n        const set = new WeakSet();\n        while(child){\n            const nextParent = getParent(child, {\n                skipVirtual: set.has(child)\n            });\n            set.add(child);\n            if (nextParent === parent) {\n                return true;\n            }\n            child = nextParent;\n        }\n    }\n    return false;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,SAASC,eAAeA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAC/C,IAAI,CAACD,MAAM,IAAI,CAACC,KAAK,EAAE;IACnB,OAAO,KAAK;EAChB;EACA,IAAID,MAAM,KAAKC,KAAK,EAAE;IAClB,OAAO,IAAI;EACf,CAAC,MAAM;IACH;IACA,MAAMC,GAAG,GAAG,IAAIC,OAAO,CAAC,CAAC;IACzB,OAAMF,KAAK,EAAC;MACR,MAAMG,UAAU,GAAGN,SAAS,CAACG,KAAK,EAAE;QAChCI,WAAW,EAAEH,GAAG,CAACI,GAAG,CAACL,KAAK;MAC9B,CAAC,CAAC;MACFC,GAAG,CAACK,GAAG,CAACN,KAAK,CAAC;MACd,IAAIG,UAAU,KAAKJ,MAAM,EAAE;QACvB,OAAO,IAAI;MACf;MACAC,KAAK,GAAGG,UAAU;IACtB;EACJ;EACA,OAAO,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}