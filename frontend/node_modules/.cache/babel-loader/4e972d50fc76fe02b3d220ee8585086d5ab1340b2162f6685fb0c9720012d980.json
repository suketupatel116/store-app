{"ast":null,"code":"import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { elementContains } from '@fluentui/react-portal';\n/**\n * Name of the custom event\n */\nexport const MENU_ENTER_EVENT = 'fuimenuenter';\n/**\n * This hook works similarly to @see useOnClickOutside\n *\n * Problem: Trying to behave the same as system menus:\n * When the mouse leaves a stack of nested menus the stack should not dismiss.\n * However if the mouse leaves a stack of menus and enters a parent menu all its children menu should dismiss.\n *\n * We don't use the native mouseenter event because it would trigger too many times in the document\n * Instead, dispatch custom DOM event from the menu so that it can bubble\n * Each nested menu can use the listener to check if the event is from a child or parent menu\n */\nexport const useOnMenuMouseEnter = options => {\n  const {\n    refs,\n    callback,\n    element,\n    disabled\n  } = options;\n  // Keep mouse event here because this is essentially a custom 'mouseenter' event\n  const listener = useEventCallback(ev => {\n    const popoverRef = refs[0];\n    const someMenuPopover = ev.target;\n    var _popoverRef_current;\n    // someMenu is a child -> will always be contained because of vParents\n    // someMenu is a parent -> will always not be contained because no vParent\n    // someMenu is the current popover -> it will contain itself\n    const isOutsidePopover = !elementContains((_popoverRef_current = popoverRef.current) !== null && _popoverRef_current !== void 0 ? _popoverRef_current : null, someMenuPopover);\n    if (isOutsidePopover && !disabled) {\n      callback(ev);\n    }\n  });\n  React.useEffect(() => {\n    // eslint-disable-next-line eqeqeq\n    if (element == null) {\n      return;\n    }\n    if (!disabled) {\n      element.addEventListener(MENU_ENTER_EVENT, listener);\n    }\n    return () => {\n      element.removeEventListener(MENU_ENTER_EVENT, listener);\n    };\n  }, [listener, element, disabled]);\n};\n/**\n * Dispatches the custom MouseEvent enter event. Similar to calling `el.click()`\n * @param el - element for the event target\n * @param nativeEvent - the native mouse event this is mapped to\n */\nexport const dispatchMenuEnterEvent = (el, nativeEvent) => {\n  el.dispatchEvent(new CustomEvent(MENU_ENTER_EVENT, {\n    bubbles: true,\n    detail: {\n      nativeEvent\n    }\n  }));\n};","map":{"version":3,"names":["React","useEventCallback","elementContains","MENU_ENTER_EVENT","useOnMenuMouseEnter","options","refs","callback","element","disabled","listener","ev","popoverRef","someMenuPopover","target","_popoverRef_current","isOutsidePopover","current","useEffect","addEventListener","removeEventListener","dispatchMenuEnterEvent","el","nativeEvent","dispatchEvent","CustomEvent","bubbles","detail"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-menu/lib/utils/useOnMenuEnter.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { elementContains } from '@fluentui/react-portal';\n/**\n * Name of the custom event\n */ export const MENU_ENTER_EVENT = 'fuimenuenter';\n/**\n * This hook works similarly to @see useOnClickOutside\n *\n * Problem: Trying to behave the same as system menus:\n * When the mouse leaves a stack of nested menus the stack should not dismiss.\n * However if the mouse leaves a stack of menus and enters a parent menu all its children menu should dismiss.\n *\n * We don't use the native mouseenter event because it would trigger too many times in the document\n * Instead, dispatch custom DOM event from the menu so that it can bubble\n * Each nested menu can use the listener to check if the event is from a child or parent menu\n */ export const useOnMenuMouseEnter = (options)=>{\n    const { refs , callback , element , disabled  } = options;\n    // Keep mouse event here because this is essentially a custom 'mouseenter' event\n    const listener = useEventCallback((ev)=>{\n        const popoverRef = refs[0];\n        const someMenuPopover = ev.target;\n        var _popoverRef_current;\n        // someMenu is a child -> will always be contained because of vParents\n        // someMenu is a parent -> will always not be contained because no vParent\n        // someMenu is the current popover -> it will contain itself\n        const isOutsidePopover = !elementContains((_popoverRef_current = popoverRef.current) !== null && _popoverRef_current !== void 0 ? _popoverRef_current : null, someMenuPopover);\n        if (isOutsidePopover && !disabled) {\n            callback(ev);\n        }\n    });\n    React.useEffect(()=>{\n        // eslint-disable-next-line eqeqeq\n        if (element == null) {\n            return;\n        }\n        if (!disabled) {\n            element.addEventListener(MENU_ENTER_EVENT, listener);\n        }\n        return ()=>{\n            element.removeEventListener(MENU_ENTER_EVENT, listener);\n        };\n    }, [\n        listener,\n        element,\n        disabled\n    ]);\n};\n/**\n * Dispatches the custom MouseEvent enter event. Similar to calling `el.click()`\n * @param el - element for the event target\n * @param nativeEvent - the native mouse event this is mapped to\n */ export const dispatchMenuEnterEvent = (el, nativeEvent)=>{\n    el.dispatchEvent(new CustomEvent(MENU_ENTER_EVENT, {\n        bubbles: true,\n        detail: {\n            nativeEvent\n        }\n    }));\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,eAAe,QAAQ,wBAAwB;AACxD;AACA;AACA;AAAI,OAAO,MAAMC,gBAAgB,GAAG,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,mBAAmB,GAAIC,OAAO,IAAG;EAC9C,MAAM;IAAEC,IAAI;IAAGC,QAAQ;IAAGC,OAAO;IAAGC;EAAU,CAAC,GAAGJ,OAAO;EACzD;EACA,MAAMK,QAAQ,GAAGT,gBAAgB,CAAEU,EAAE,IAAG;IACpC,MAAMC,UAAU,GAAGN,IAAI,CAAC,CAAC,CAAC;IAC1B,MAAMO,eAAe,GAAGF,EAAE,CAACG,MAAM;IACjC,IAAIC,mBAAmB;IACvB;IACA;IACA;IACA,MAAMC,gBAAgB,GAAG,CAACd,eAAe,CAAC,CAACa,mBAAmB,GAAGH,UAAU,CAACK,OAAO,MAAM,IAAI,IAAIF,mBAAmB,KAAK,KAAK,CAAC,GAAGA,mBAAmB,GAAG,IAAI,EAAEF,eAAe,CAAC;IAC9K,IAAIG,gBAAgB,IAAI,CAACP,QAAQ,EAAE;MAC/BF,QAAQ,CAACI,EAAE,CAAC;IAChB;EACJ,CAAC,CAAC;EACFX,KAAK,CAACkB,SAAS,CAAC,MAAI;IAChB;IACA,IAAIV,OAAO,IAAI,IAAI,EAAE;MACjB;IACJ;IACA,IAAI,CAACC,QAAQ,EAAE;MACXD,OAAO,CAACW,gBAAgB,CAAChB,gBAAgB,EAAEO,QAAQ,CAAC;IACxD;IACA,OAAO,MAAI;MACPF,OAAO,CAACY,mBAAmB,CAACjB,gBAAgB,EAAEO,QAAQ,CAAC;IAC3D,CAAC;EACL,CAAC,EAAE,CACCA,QAAQ,EACRF,OAAO,EACPC,QAAQ,CACX,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMY,sBAAsB,GAAGA,CAACC,EAAE,EAAEC,WAAW,KAAG;EACzDD,EAAE,CAACE,aAAa,CAAC,IAAIC,WAAW,CAACtB,gBAAgB,EAAE;IAC/CuB,OAAO,EAAE,IAAI;IACbC,MAAM,EAAE;MACJJ;IACJ;EACJ,CAAC,CAAC,CAAC;AACP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}