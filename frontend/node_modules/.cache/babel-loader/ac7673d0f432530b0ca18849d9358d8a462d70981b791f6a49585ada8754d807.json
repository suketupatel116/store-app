{"ast":null,"code":"/**\n * Get the inline items and overflowing items based on the array of AvatarGroupItems needed for AvatarGroup.\n *\n * @param options - Configure the partition options\n *\n * @returns Two arrays split into inline items and overflow items based on maxInlineItems.\n */export const partitionAvatarGroupItems = options => {\n  const {\n    items\n  } = options;\n  const isPie = options.layout === 'pie';\n  if (isPie) {\n    return {\n      inlineItems: items.slice(0, 3),\n      overflowItems: items.length > 0 ? items : undefined\n    };\n  }\n  var _options_maxInlineItems;\n  const maxInlineItems = (_options_maxInlineItems = options.maxInlineItems) !== null && _options_maxInlineItems !== void 0 ? _options_maxInlineItems : 5;\n  const inlineCount = -(maxInlineItems - (items.length > maxInlineItems ? 1 : 0));\n  const overflowItems = items.slice(0, inlineCount);\n  return {\n    inlineItems: items.slice(inlineCount),\n    overflowItems: overflowItems.length > 0 ? overflowItems : undefined\n  };\n};","map":{"version":3,"names":["partitionAvatarGroupItems","options","items","isPie","layout","inlineItems","slice","overflowItems","length","undefined","_options_maxInlineItems","maxInlineItems","inlineCount"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-avatar/lib/utils/partitionAvatarGroupItems.js"],"sourcesContent":["/**\n * Get the inline items and overflowing items based on the array of AvatarGroupItems needed for AvatarGroup.\n *\n * @param options - Configure the partition options\n *\n * @returns Two arrays split into inline items and overflow items based on maxInlineItems.\n */ export const partitionAvatarGroupItems = (options)=>{\n    const { items  } = options;\n    const isPie = options.layout === 'pie';\n    if (isPie) {\n        return {\n            inlineItems: items.slice(0, 3),\n            overflowItems: items.length > 0 ? items : undefined\n        };\n    }\n    var _options_maxInlineItems;\n    const maxInlineItems = (_options_maxInlineItems = options.maxInlineItems) !== null && _options_maxInlineItems !== void 0 ? _options_maxInlineItems : 5;\n    const inlineCount = -(maxInlineItems - (items.length > maxInlineItems ? 1 : 0));\n    const overflowItems = items.slice(0, inlineCount);\n    return {\n        inlineItems: items.slice(inlineCount),\n        overflowItems: overflowItems.length > 0 ? overflowItems : undefined\n    };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,OAAO,MAAMA,yBAAyB,GAAIC,OAAO,IAAG;EACpD,MAAM;IAAEC;EAAO,CAAC,GAAGD,OAAO;EAC1B,MAAME,KAAK,GAAGF,OAAO,CAACG,MAAM,KAAK,KAAK;EACtC,IAAID,KAAK,EAAE;IACP,OAAO;MACHE,WAAW,EAAEH,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9BC,aAAa,EAAEL,KAAK,CAACM,MAAM,GAAG,CAAC,GAAGN,KAAK,GAAGO;IAC9C,CAAC;EACL;EACA,IAAIC,uBAAuB;EAC3B,MAAMC,cAAc,GAAG,CAACD,uBAAuB,GAAGT,OAAO,CAACU,cAAc,MAAM,IAAI,IAAID,uBAAuB,KAAK,KAAK,CAAC,GAAGA,uBAAuB,GAAG,CAAC;EACtJ,MAAME,WAAW,GAAG,EAAED,cAAc,IAAIT,KAAK,CAACM,MAAM,GAAGG,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/E,MAAMJ,aAAa,GAAGL,KAAK,CAACI,KAAK,CAAC,CAAC,EAAEM,WAAW,CAAC;EACjD,OAAO;IACHP,WAAW,EAAEH,KAAK,CAACI,KAAK,CAACM,WAAW,CAAC;IACrCL,aAAa,EAAEA,aAAa,CAACC,MAAM,GAAG,CAAC,GAAGD,aAAa,GAAGE;EAC9D,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}