{"ast":null,"code":"import * as React from 'react';\n/**\n * A hook for managing a collection of child Options\n */\nexport const useOptionCollection = () => {\n  const nodes = React.useRef([]);\n  const collectionAPI = React.useMemo(() => {\n    const getCount = () => nodes.current.length;\n    const getOptionAtIndex = index => {\n      var _nodes_current_index;\n      return (_nodes_current_index = nodes.current[index]) === null || _nodes_current_index === void 0 ? void 0 : _nodes_current_index.option;\n    };\n    const getIndexOfId = id => nodes.current.findIndex(node => node.option.id === id);\n    const getOptionById = id => {\n      const item = nodes.current.find(node => node.option.id === id);\n      return item === null || item === void 0 ? void 0 : item.option;\n    };\n    const getOptionsMatchingText = matcher => {\n      return nodes.current.filter(node => matcher(node.option.text)).map(node => node.option);\n    };\n    const getOptionsMatchingValue = matcher => {\n      return nodes.current.filter(node => matcher(node.option.value)).map(node => node.option);\n    };\n    return {\n      getCount,\n      getOptionAtIndex,\n      getIndexOfId,\n      getOptionById,\n      getOptionsMatchingText,\n      getOptionsMatchingValue\n    };\n  }, []);\n  const registerOption = React.useCallback((option, element) => {\n    var _nodes_current_index;\n    const index = nodes.current.findIndex(node => {\n      if (!node.element || !element) {\n        return false;\n      }\n      if (node.option.id === option.id) {\n        return true;\n      }\n      // use the DOM method compareDocumentPosition to order the current node against registered nodes\n      // eslint-disable-next-line no-bitwise\n      return node.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING;\n    });\n    // do not register the option if it already exists\n    if (((_nodes_current_index = nodes.current[index]) === null || _nodes_current_index === void 0 ? void 0 : _nodes_current_index.option.id) !== option.id) {\n      const newItem = {\n        element,\n        option\n      };\n      // If an index is not found we will push the element to the end.\n      if (index === -1) {\n        nodes.current = [...nodes.current, newItem];\n      } else {\n        nodes.current.splice(index, 0, newItem);\n      }\n    }\n    // return the unregister function\n    return () => {\n      nodes.current = nodes.current.filter(node => node.option.id !== option.id);\n    };\n  }, []);\n  return {\n    ...collectionAPI,\n    options: nodes.current.map(node => node.option),\n    registerOption\n  };\n};","map":{"version":3,"names":["React","useOptionCollection","nodes","useRef","collectionAPI","useMemo","getCount","current","length","getOptionAtIndex","index","_nodes_current_index","option","getIndexOfId","id","findIndex","node","getOptionById","item","find","getOptionsMatchingText","matcher","filter","text","map","getOptionsMatchingValue","value","registerOption","useCallback","element","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","newItem","splice","options"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-combobox/lib/utils/useOptionCollection.js"],"sourcesContent":["import * as React from 'react';\n/**\n * A hook for managing a collection of child Options\n */ export const useOptionCollection = ()=>{\n    const nodes = React.useRef([]);\n    const collectionAPI = React.useMemo(()=>{\n        const getCount = ()=>nodes.current.length;\n        const getOptionAtIndex = (index)=>{\n            var _nodes_current_index;\n            return (_nodes_current_index = nodes.current[index]) === null || _nodes_current_index === void 0 ? void 0 : _nodes_current_index.option;\n        };\n        const getIndexOfId = (id)=>nodes.current.findIndex((node)=>node.option.id === id);\n        const getOptionById = (id)=>{\n            const item = nodes.current.find((node)=>node.option.id === id);\n            return item === null || item === void 0 ? void 0 : item.option;\n        };\n        const getOptionsMatchingText = (matcher)=>{\n            return nodes.current.filter((node)=>matcher(node.option.text)).map((node)=>node.option);\n        };\n        const getOptionsMatchingValue = (matcher)=>{\n            return nodes.current.filter((node)=>matcher(node.option.value)).map((node)=>node.option);\n        };\n        return {\n            getCount,\n            getOptionAtIndex,\n            getIndexOfId,\n            getOptionById,\n            getOptionsMatchingText,\n            getOptionsMatchingValue\n        };\n    }, []);\n    const registerOption = React.useCallback((option, element)=>{\n        var _nodes_current_index;\n        const index = nodes.current.findIndex((node)=>{\n            if (!node.element || !element) {\n                return false;\n            }\n            if (node.option.id === option.id) {\n                return true;\n            }\n            // use the DOM method compareDocumentPosition to order the current node against registered nodes\n            // eslint-disable-next-line no-bitwise\n            return node.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING;\n        });\n        // do not register the option if it already exists\n        if (((_nodes_current_index = nodes.current[index]) === null || _nodes_current_index === void 0 ? void 0 : _nodes_current_index.option.id) !== option.id) {\n            const newItem = {\n                element,\n                option\n            };\n            // If an index is not found we will push the element to the end.\n            if (index === -1) {\n                nodes.current = [\n                    ...nodes.current,\n                    newItem\n                ];\n            } else {\n                nodes.current.splice(index, 0, newItem);\n            }\n        }\n        // return the unregister function\n        return ()=>{\n            nodes.current = nodes.current.filter((node)=>node.option.id !== option.id);\n        };\n    }, []);\n    return {\n        ...collectionAPI,\n        options: nodes.current.map((node)=>node.option),\n        registerOption\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}