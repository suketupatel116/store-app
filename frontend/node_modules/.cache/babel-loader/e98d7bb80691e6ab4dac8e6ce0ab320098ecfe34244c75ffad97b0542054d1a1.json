{"ast":null,"code":"import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { getEventClientCoords, isMouseEvent, isTouchEvent } from '@fluentui/react-utilities';\nexport function useTableColumnResizeMouseHandler(columnResizeState) {\n  const mouseX = React.useRef(0);\n  const currentWidth = React.useRef(0);\n  const colId = React.useRef(undefined);\n  const {\n    targetDocument\n  } = useFluent();\n  const globalWin = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n  const recalculatePosition = React.useCallback(e => {\n    const {\n      clientX\n    } = getEventClientCoords(e);\n    const dx = clientX - mouseX.current;\n    // Update the local width for the column and set it\n    currentWidth.current += dx;\n    colId.current && columnResizeState.setColumnWidth(e, {\n      columnId: colId.current,\n      width: currentWidth.current\n    });\n    mouseX.current = clientX;\n  }, [columnResizeState]);\n  const onDrag = React.useCallback(e => {\n    // Using requestAnimationFrame here drastically improves resizing experience on slower CPUs\n    if (typeof (globalWin === null || globalWin === void 0 ? void 0 : globalWin.requestAnimationFrame) === 'function') {\n      requestAnimationFrame(() => recalculatePosition(e));\n    } else {\n      recalculatePosition(e);\n    }\n  }, [globalWin === null || globalWin === void 0 ? void 0 : globalWin.requestAnimationFrame, recalculatePosition]);\n  const onDragEnd = React.useCallback(event => {\n    if (isMouseEvent(event)) {\n      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('mouseup', onDragEnd);\n      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('mousemove', onDrag);\n    }\n    if (isTouchEvent(event)) {\n      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('touchend', onDragEnd);\n      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('touchmove', onDrag);\n    }\n  }, [onDrag, targetDocument]);\n  const getOnMouseDown = columnId => {\n    return event => {\n      // Keep the width locally so that we decouple the calculation of the next with from rendering.\n      // This makes the whole experience much faster and more precise\n      currentWidth.current = columnResizeState.getColumnWidth(columnId);\n      mouseX.current = getEventClientCoords(event).clientX;\n      colId.current = columnId;\n      if (isMouseEvent(event)) {\n        // ignore other buttons than primary mouse button\n        if (event.target !== event.currentTarget || event.button !== 0) {\n          return;\n        }\n        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('mouseup', onDragEnd);\n        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('mousemove', onDrag);\n      }\n      if (isTouchEvent(event)) {\n        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('touchend', onDragEnd);\n        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('touchmove', onDrag);\n      }\n    };\n  };\n  return {\n    getOnMouseDown: columnId => getOnMouseDown(columnId)\n  };\n}","map":{"version":3,"names":["React","useFluent_unstable","useFluent","getEventClientCoords","isMouseEvent","isTouchEvent","useTableColumnResizeMouseHandler","columnResizeState","mouseX","useRef","currentWidth","colId","undefined","targetDocument","globalWin","defaultView","recalculatePosition","useCallback","e","clientX","dx","current","setColumnWidth","columnId","width","onDrag","requestAnimationFrame","onDragEnd","event","removeEventListener","getOnMouseDown","getColumnWidth","target","currentTarget","button","addEventListener"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-table/lib/hooks/useTableColumnResizeMouseHandler.js"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { getEventClientCoords, isMouseEvent, isTouchEvent } from '@fluentui/react-utilities';\nexport function useTableColumnResizeMouseHandler(columnResizeState) {\n    const mouseX = React.useRef(0);\n    const currentWidth = React.useRef(0);\n    const colId = React.useRef(undefined);\n    const { targetDocument  } = useFluent();\n    const globalWin = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n    const recalculatePosition = React.useCallback((e)=>{\n        const { clientX  } = getEventClientCoords(e);\n        const dx = clientX - mouseX.current;\n        // Update the local width for the column and set it\n        currentWidth.current += dx;\n        colId.current && columnResizeState.setColumnWidth(e, {\n            columnId: colId.current,\n            width: currentWidth.current\n        });\n        mouseX.current = clientX;\n    }, [\n        columnResizeState\n    ]);\n    const onDrag = React.useCallback((e)=>{\n        // Using requestAnimationFrame here drastically improves resizing experience on slower CPUs\n        if (typeof (globalWin === null || globalWin === void 0 ? void 0 : globalWin.requestAnimationFrame) === 'function') {\n            requestAnimationFrame(()=>recalculatePosition(e));\n        } else {\n            recalculatePosition(e);\n        }\n    }, [\n        globalWin === null || globalWin === void 0 ? void 0 : globalWin.requestAnimationFrame,\n        recalculatePosition\n    ]);\n    const onDragEnd = React.useCallback((event)=>{\n        if (isMouseEvent(event)) {\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('mouseup', onDragEnd);\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('mousemove', onDrag);\n        }\n        if (isTouchEvent(event)) {\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('touchend', onDragEnd);\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('touchmove', onDrag);\n        }\n    }, [\n        onDrag,\n        targetDocument\n    ]);\n    const getOnMouseDown = (columnId)=>{\n        return (event)=>{\n            // Keep the width locally so that we decouple the calculation of the next with from rendering.\n            // This makes the whole experience much faster and more precise\n            currentWidth.current = columnResizeState.getColumnWidth(columnId);\n            mouseX.current = getEventClientCoords(event).clientX;\n            colId.current = columnId;\n            if (isMouseEvent(event)) {\n                // ignore other buttons than primary mouse button\n                if (event.target !== event.currentTarget || event.button !== 0) {\n                    return;\n                }\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('mouseup', onDragEnd);\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('mousemove', onDrag);\n            }\n            if (isTouchEvent(event)) {\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('touchend', onDragEnd);\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('touchmove', onDrag);\n            }\n        };\n    };\n    return {\n        getOnMouseDown: (columnId)=>getOnMouseDown(columnId)\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}