{"ast":null,"code":"import { useFocusVisible } from '@fluentui/react-tabster';\nimport { ThemeContext_unstable as ThemeContext, useFluent_unstable as useFluent, useOverrides_unstable as useOverrides, CustomStyleHooksContext_unstable as CustomStyleHooksContext } from '@fluentui/react-shared-contexts';\nimport { getNativeElementProps, useMergedRefs } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { useFluentProviderThemeStyleTag } from './useFluentProviderThemeStyleTag';\nimport { useRenderer_unstable } from '@griffel/react';\n/**\n * Create the state required to render FluentProvider.\n *\n * The returned state can be modified with hooks such as useFluentProviderStyles_unstable,\n * before being passed to renderFluentProvider_unstable.\n *\n * @param props - props from this instance of FluentProvider\n * @param ref - reference to root HTMLElement of FluentProvider\n */\nexport const useFluentProvider_unstable = (props, ref) => {\n  const parentContext = useFluent();\n  const parentTheme = useTheme();\n  const parentOverrides = useOverrides();\n  const parentCustomStyleHooks = React.useContext(CustomStyleHooksContext) || {};\n  /**\n  * TODO: add merge functions to \"dir\" merge,\n  * nesting providers with the same \"dir\" should not add additional attributes to DOM\n  * see https://github.com/microsoft/fluentui/blob/0dc74a19f3aa5a058224c20505016fbdb84db172/packages/fluentui/react-northstar/src/utils/mergeProviderContexts.ts#L89-L93\n  */\n  const {\n    applyStylesToPortals = true,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    customStyleHooks_unstable,\n    dir = parentContext.dir,\n    targetDocument = parentContext.targetDocument,\n    theme,\n    overrides_unstable: overrides = {}\n  } = props;\n  const mergedTheme = shallowMerge(parentTheme, theme);\n  const mergedOverrides = shallowMerge(parentOverrides, overrides);\n  const mergedCustomStyleHooks = shallowMerge(parentCustomStyleHooks, customStyleHooks_unstable);\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production' && mergedTheme === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(`\n      FluentProvider: your \"theme\" is not defined !\n      =============================================\n      Make sure your root FluentProvider has set a theme or you're setting the theme in your child FluentProvider.\n      `);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const renderer = useRenderer_unstable();\n  var _renderer_styleElementAttributes;\n  const {\n    styleTagId,\n    rule\n  } = useFluentProviderThemeStyleTag({\n    theme: mergedTheme,\n    targetDocument,\n    rendererAttributes: (_renderer_styleElementAttributes = renderer.styleElementAttributes) !== null && _renderer_styleElementAttributes !== void 0 ? _renderer_styleElementAttributes : {}\n  });\n  return {\n    applyStylesToPortals,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    customStyleHooks_unstable: mergedCustomStyleHooks,\n    dir,\n    targetDocument,\n    theme: mergedTheme,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    overrides_unstable: mergedOverrides,\n    themeClassName: styleTagId,\n    components: {\n      root: 'div'\n    },\n    root: getNativeElementProps('div', {\n      ...props,\n      dir,\n      ref: useMergedRefs(ref, useFocusVisible({\n        targetDocument\n      }))\n    }),\n    serverStyleProps: {\n      cssRule: rule,\n      attributes: {\n        ...renderer.styleElementAttributes,\n        id: styleTagId\n      }\n    }\n  };\n};\nfunction shallowMerge(a, b) {\n  // Merge impacts perf: we should like to avoid it if it's possible\n  if (a && b) {\n    return {\n      ...a,\n      ...b\n    };\n  }\n  if (a) {\n    return a;\n  }\n  return b;\n}\nfunction useTheme() {\n  return React.useContext(ThemeContext);\n}","map":{"version":3,"names":["useFocusVisible","ThemeContext_unstable","ThemeContext","useFluent_unstable","useFluent","useOverrides_unstable","useOverrides","CustomStyleHooksContext_unstable","CustomStyleHooksContext","getNativeElementProps","useMergedRefs","React","useFluentProviderThemeStyleTag","useRenderer_unstable","useFluentProvider_unstable","props","ref","parentContext","parentTheme","useTheme","parentOverrides","parentCustomStyleHooks","useContext","applyStylesToPortals","customStyleHooks_unstable","dir","targetDocument","theme","overrides_unstable","overrides","mergedTheme","shallowMerge","mergedOverrides","mergedCustomStyleHooks","useEffect","process","env","NODE_ENV","undefined","console","warn","renderer","_renderer_styleElementAttributes","styleTagId","rule","rendererAttributes","styleElementAttributes","themeClassName","components","root","serverStyleProps","cssRule","attributes","id","a","b"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js"],"sourcesContent":["import { useFocusVisible } from '@fluentui/react-tabster';\nimport { ThemeContext_unstable as ThemeContext, useFluent_unstable as useFluent, useOverrides_unstable as useOverrides, CustomStyleHooksContext_unstable as CustomStyleHooksContext } from '@fluentui/react-shared-contexts';\nimport { getNativeElementProps, useMergedRefs } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { useFluentProviderThemeStyleTag } from './useFluentProviderThemeStyleTag';\nimport { useRenderer_unstable } from '@griffel/react';\n/**\n * Create the state required to render FluentProvider.\n *\n * The returned state can be modified with hooks such as useFluentProviderStyles_unstable,\n * before being passed to renderFluentProvider_unstable.\n *\n * @param props - props from this instance of FluentProvider\n * @param ref - reference to root HTMLElement of FluentProvider\n */ export const useFluentProvider_unstable = (props, ref)=>{\n    const parentContext = useFluent();\n    const parentTheme = useTheme();\n    const parentOverrides = useOverrides();\n    const parentCustomStyleHooks = React.useContext(CustomStyleHooksContext) || {};\n    /**\n   * TODO: add merge functions to \"dir\" merge,\n   * nesting providers with the same \"dir\" should not add additional attributes to DOM\n   * see https://github.com/microsoft/fluentui/blob/0dc74a19f3aa5a058224c20505016fbdb84db172/packages/fluentui/react-northstar/src/utils/mergeProviderContexts.ts#L89-L93\n   */ const { applyStylesToPortals =true , // eslint-disable-next-line @typescript-eslint/naming-convention\n    customStyleHooks_unstable , dir =parentContext.dir , targetDocument =parentContext.targetDocument , theme , overrides_unstable: overrides = {}  } = props;\n    const mergedTheme = shallowMerge(parentTheme, theme);\n    const mergedOverrides = shallowMerge(parentOverrides, overrides);\n    const mergedCustomStyleHooks = shallowMerge(parentCustomStyleHooks, customStyleHooks_unstable);\n    React.useEffect(()=>{\n        if (process.env.NODE_ENV !== 'production' && mergedTheme === undefined) {\n            // eslint-disable-next-line no-console\n            console.warn(`\n      FluentProvider: your \"theme\" is not defined !\n      =============================================\n      Make sure your root FluentProvider has set a theme or you're setting the theme in your child FluentProvider.\n      `);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const renderer = useRenderer_unstable();\n    var _renderer_styleElementAttributes;\n    const { styleTagId , rule  } = useFluentProviderThemeStyleTag({\n        theme: mergedTheme,\n        targetDocument,\n        rendererAttributes: (_renderer_styleElementAttributes = renderer.styleElementAttributes) !== null && _renderer_styleElementAttributes !== void 0 ? _renderer_styleElementAttributes : {}\n    });\n    return {\n        applyStylesToPortals,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        customStyleHooks_unstable: mergedCustomStyleHooks,\n        dir,\n        targetDocument,\n        theme: mergedTheme,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        overrides_unstable: mergedOverrides,\n        themeClassName: styleTagId,\n        components: {\n            root: 'div'\n        },\n        root: getNativeElementProps('div', {\n            ...props,\n            dir,\n            ref: useMergedRefs(ref, useFocusVisible({\n                targetDocument\n            }))\n        }),\n        serverStyleProps: {\n            cssRule: rule,\n            attributes: {\n                ...renderer.styleElementAttributes,\n                id: styleTagId\n            }\n        }\n    };\n};\nfunction shallowMerge(a, b) {\n    // Merge impacts perf: we should like to avoid it if it's possible\n    if (a && b) {\n        return {\n            ...a,\n            ...b\n        };\n    }\n    if (a) {\n        return a;\n    }\n    return b;\n}\nfunction useTheme() {\n    return React.useContext(ThemeContext);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}