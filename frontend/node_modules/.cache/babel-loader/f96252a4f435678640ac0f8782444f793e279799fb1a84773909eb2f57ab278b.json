{"ast":null,"code":"import * as React from 'react';\nimport { mergeClasses } from '@griffel/react';\nimport { applyTriggerPropsToChildren, useMergedRefs } from '@fluentui/react-utilities';\nimport { OverflowContext } from '../overflowContext';\nimport { updateVisibilityAttribute, useOverflowContainer } from '../useOverflowContainer';\nimport { useOverflowStyles } from './useOverflowStyles.styles';\n/**\n * Provides an OverflowContext for OverflowItem descendants.\n */\nexport const Overflow = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const styles = useOverflowStyles();\n  const {\n    children,\n    minimumVisible,\n    overflowAxis = 'horizontal',\n    overflowDirection,\n    padding\n  } = props;\n  const [overflowState, setOverflowState] = React.useState({\n    hasOverflow: false,\n    itemVisibility: {},\n    groupVisibility: {}\n  });\n  // useOverflowContainer wraps this method in a useEventCallback.\n  const update = data => {\n    const {\n      visibleItems,\n      invisibleItems,\n      groupVisibility\n    } = data;\n    const itemVisibility = {};\n    visibleItems.forEach(item => {\n      itemVisibility[item.id] = true;\n    });\n    invisibleItems.forEach(x => itemVisibility[x.id] = false);\n    setOverflowState(() => {\n      return {\n        hasOverflow: data.invisibleItems.length > 0,\n        itemVisibility,\n        groupVisibility\n      };\n    });\n  };\n  const {\n    containerRef,\n    registerItem,\n    updateOverflow,\n    registerOverflowMenu,\n    registerDivider\n  } = useOverflowContainer(update, {\n    overflowDirection,\n    overflowAxis,\n    padding,\n    minimumVisible,\n    onUpdateItemVisibility: updateVisibilityAttribute\n  });\n  const clonedChild = applyTriggerPropsToChildren(children, {\n    ref: useMergedRefs(containerRef, ref),\n    className: mergeClasses(styles.overflowMenu, styles.overflowingItems, children.props.className)\n  });\n  return /*#__PURE__*/React.createElement(OverflowContext.Provider, {\n    value: {\n      itemVisibility: overflowState.itemVisibility,\n      groupVisibility: overflowState.groupVisibility,\n      hasOverflow: overflowState.hasOverflow,\n      registerItem,\n      updateOverflow,\n      registerOverflowMenu,\n      registerDivider\n    }\n  }, clonedChild);\n});","map":{"version":3,"names":["React","mergeClasses","applyTriggerPropsToChildren","useMergedRefs","OverflowContext","updateVisibilityAttribute","useOverflowContainer","useOverflowStyles","Overflow","forwardRef","props","ref","styles","children","minimumVisible","overflowAxis","overflowDirection","padding","overflowState","setOverflowState","useState","hasOverflow","itemVisibility","groupVisibility","update","data","visibleItems","invisibleItems","forEach","item","id","x","length","containerRef","registerItem","updateOverflow","registerOverflowMenu","registerDivider","onUpdateItemVisibility","clonedChild","className","overflowMenu","overflowingItems","createElement","Provider","value"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-overflow/lib/components/Overflow.js"],"sourcesContent":["import * as React from 'react';\nimport { mergeClasses } from '@griffel/react';\nimport { applyTriggerPropsToChildren, useMergedRefs } from '@fluentui/react-utilities';\nimport { OverflowContext } from '../overflowContext';\nimport { updateVisibilityAttribute, useOverflowContainer } from '../useOverflowContainer';\nimport { useOverflowStyles } from './useOverflowStyles.styles';\n/**\n * Provides an OverflowContext for OverflowItem descendants.\n */ export const Overflow = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const styles = useOverflowStyles();\n    const { children , minimumVisible , overflowAxis ='horizontal' , overflowDirection , padding  } = props;\n    const [overflowState, setOverflowState] = React.useState({\n        hasOverflow: false,\n        itemVisibility: {},\n        groupVisibility: {}\n    });\n    // useOverflowContainer wraps this method in a useEventCallback.\n    const update = (data)=>{\n        const { visibleItems , invisibleItems , groupVisibility  } = data;\n        const itemVisibility = {};\n        visibleItems.forEach((item)=>{\n            itemVisibility[item.id] = true;\n        });\n        invisibleItems.forEach((x)=>itemVisibility[x.id] = false);\n        setOverflowState(()=>{\n            return {\n                hasOverflow: data.invisibleItems.length > 0,\n                itemVisibility,\n                groupVisibility\n            };\n        });\n    };\n    const { containerRef , registerItem , updateOverflow , registerOverflowMenu , registerDivider  } = useOverflowContainer(update, {\n        overflowDirection,\n        overflowAxis,\n        padding,\n        minimumVisible,\n        onUpdateItemVisibility: updateVisibilityAttribute\n    });\n    const clonedChild = applyTriggerPropsToChildren(children, {\n        ref: useMergedRefs(containerRef, ref),\n        className: mergeClasses(styles.overflowMenu, styles.overflowingItems, children.props.className)\n    });\n    return /*#__PURE__*/ React.createElement(OverflowContext.Provider, {\n        value: {\n            itemVisibility: overflowState.itemVisibility,\n            groupVisibility: overflowState.groupVisibility,\n            hasOverflow: overflowState.hasOverflow,\n            registerItem,\n            updateOverflow,\n            registerOverflowMenu,\n            registerDivider\n        }\n    }, clonedChild);\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,2BAA2B,EAAEC,aAAa,QAAQ,2BAA2B;AACtF,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,yBAAyB,EAAEC,oBAAoB,QAAQ,yBAAyB;AACzF,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D;AACA;AACA;AAAI,OAAO,MAAMC,QAAQ,GAAG,aAAcR,KAAK,CAACS,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAG;EACrE,MAAMC,MAAM,GAAGL,iBAAiB,CAAC,CAAC;EAClC,MAAM;IAAEM,QAAQ;IAAGC,cAAc;IAAGC,YAAY,GAAE,YAAY;IAAGC,iBAAiB;IAAGC;EAAS,CAAC,GAAGP,KAAK;EACvG,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,KAAK,CAACoB,QAAQ,CAAC;IACrDC,WAAW,EAAE,KAAK;IAClBC,cAAc,EAAE,CAAC,CAAC;IAClBC,eAAe,EAAE,CAAC;EACtB,CAAC,CAAC;EACF;EACA,MAAMC,MAAM,GAAIC,IAAI,IAAG;IACnB,MAAM;MAAEC,YAAY;MAAGC,cAAc;MAAGJ;IAAiB,CAAC,GAAGE,IAAI;IACjE,MAAMH,cAAc,GAAG,CAAC,CAAC;IACzBI,YAAY,CAACE,OAAO,CAAEC,IAAI,IAAG;MACzBP,cAAc,CAACO,IAAI,CAACC,EAAE,CAAC,GAAG,IAAI;IAClC,CAAC,CAAC;IACFH,cAAc,CAACC,OAAO,CAAEG,CAAC,IAAGT,cAAc,CAACS,CAAC,CAACD,EAAE,CAAC,GAAG,KAAK,CAAC;IACzDX,gBAAgB,CAAC,MAAI;MACjB,OAAO;QACHE,WAAW,EAAEI,IAAI,CAACE,cAAc,CAACK,MAAM,GAAG,CAAC;QAC3CV,cAAc;QACdC;MACJ,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EACD,MAAM;IAAEU,YAAY;IAAGC,YAAY;IAAGC,cAAc;IAAGC,oBAAoB;IAAGC;EAAiB,CAAC,GAAG/B,oBAAoB,CAACkB,MAAM,EAAE;IAC5HR,iBAAiB;IACjBD,YAAY;IACZE,OAAO;IACPH,cAAc;IACdwB,sBAAsB,EAAEjC;EAC5B,CAAC,CAAC;EACF,MAAMkC,WAAW,GAAGrC,2BAA2B,CAACW,QAAQ,EAAE;IACtDF,GAAG,EAAER,aAAa,CAAC8B,YAAY,EAAEtB,GAAG,CAAC;IACrC6B,SAAS,EAAEvC,YAAY,CAACW,MAAM,CAAC6B,YAAY,EAAE7B,MAAM,CAAC8B,gBAAgB,EAAE7B,QAAQ,CAACH,KAAK,CAAC8B,SAAS;EAClG,CAAC,CAAC;EACF,OAAO,aAAcxC,KAAK,CAAC2C,aAAa,CAACvC,eAAe,CAACwC,QAAQ,EAAE;IAC/DC,KAAK,EAAE;MACHvB,cAAc,EAAEJ,aAAa,CAACI,cAAc;MAC5CC,eAAe,EAAEL,aAAa,CAACK,eAAe;MAC9CF,WAAW,EAAEH,aAAa,CAACG,WAAW;MACtCa,YAAY;MACZC,cAAc;MACdC,oBAAoB;MACpBC;IACJ;EACJ,CAAC,EAAEE,WAAW,CAAC;AACnB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}