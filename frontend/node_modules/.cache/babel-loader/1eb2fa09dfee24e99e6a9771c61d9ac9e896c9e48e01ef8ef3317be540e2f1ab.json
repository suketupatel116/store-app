{"ast":null,"code":"import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport { getPartitionedNativeProps, mergeCallbacks, resolveShorthand, useId } from '@fluentui/react-utilities';\n/**\n * Create the state required to render Switch.\n *\n * The returned state can be modified with hooks such as useSwitchStyles_unstable,\n * before being passed to renderSwitch_unstable.\n *\n * @param props - props from this instance of Switch\n * @param ref - reference to `<input>` element of Switch\n */\nexport const useSwitch_unstable = (props, ref) => {\n  // Merge props from surrounding <Field>, if any\n  props = useFieldControlProps_unstable(props, {\n    supportsLabelFor: true,\n    supportsRequired: true\n  });\n  const {\n    checked,\n    defaultChecked,\n    disabled,\n    labelPosition = 'after',\n    onChange,\n    required\n  } = props;\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['checked', 'defaultChecked', 'onChange']\n  });\n  const id = useId('switch-', nativeProps.primary.id);\n  const root = resolveShorthand(props.root, {\n    defaultProps: {\n      ref: useFocusWithin(),\n      ...nativeProps.root\n    },\n    required: true\n  });\n  const indicator = resolveShorthand(props.indicator, {\n    defaultProps: {\n      'aria-hidden': true,\n      children: /*#__PURE__*/React.createElement(CircleFilled, null)\n    },\n    required: true\n  });\n  const input = resolveShorthand(props.input, {\n    defaultProps: {\n      checked,\n      defaultChecked,\n      id,\n      ref,\n      role: 'switch',\n      type: 'checkbox',\n      ...nativeProps.primary\n    },\n    required: true\n  });\n  input.onChange = mergeCallbacks(input.onChange, ev => {\n    return onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n      checked: ev.currentTarget.checked\n    });\n  });\n  const label = resolveShorthand(props.label, {\n    defaultProps: {\n      disabled,\n      htmlFor: id,\n      required,\n      size: 'medium'\n    }\n  });\n  return {\n    labelPosition,\n    //Slots definition\n    components: {\n      root: 'div',\n      indicator: 'div',\n      input: 'input',\n      label: Label\n    },\n    root,\n    indicator,\n    input,\n    label\n  };\n};","map":{"version":3,"names":["React","useFieldControlProps_unstable","CircleFilled","Label","useFocusWithin","getPartitionedNativeProps","mergeCallbacks","resolveShorthand","useId","useSwitch_unstable","props","ref","supportsLabelFor","supportsRequired","checked","defaultChecked","disabled","labelPosition","onChange","required","nativeProps","primarySlotTagName","excludedPropNames","id","primary","root","defaultProps","indicator","children","createElement","input","role","type","ev","currentTarget","label","htmlFor","size","components"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-switch/lib/components/Switch/useSwitch.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport { getPartitionedNativeProps, mergeCallbacks, resolveShorthand, useId } from '@fluentui/react-utilities';\n/**\n * Create the state required to render Switch.\n *\n * The returned state can be modified with hooks such as useSwitchStyles_unstable,\n * before being passed to renderSwitch_unstable.\n *\n * @param props - props from this instance of Switch\n * @param ref - reference to `<input>` element of Switch\n */ export const useSwitch_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true,\n        supportsRequired: true\n    });\n    const { checked , defaultChecked , disabled , labelPosition ='after' , onChange , required  } = props;\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'input',\n        excludedPropNames: [\n            'checked',\n            'defaultChecked',\n            'onChange'\n        ]\n    });\n    const id = useId('switch-', nativeProps.primary.id);\n    const root = resolveShorthand(props.root, {\n        defaultProps: {\n            ref: useFocusWithin(),\n            ...nativeProps.root\n        },\n        required: true\n    });\n    const indicator = resolveShorthand(props.indicator, {\n        defaultProps: {\n            'aria-hidden': true,\n            children: /*#__PURE__*/ React.createElement(CircleFilled, null)\n        },\n        required: true\n    });\n    const input = resolveShorthand(props.input, {\n        defaultProps: {\n            checked,\n            defaultChecked,\n            id,\n            ref,\n            role: 'switch',\n            type: 'checkbox',\n            ...nativeProps.primary\n        },\n        required: true\n    });\n    input.onChange = mergeCallbacks(input.onChange, (ev)=>{\n        return onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n            checked: ev.currentTarget.checked\n        });\n    });\n    const label = resolveShorthand(props.label, {\n        defaultProps: {\n            disabled,\n            htmlFor: id,\n            required,\n            size: 'medium'\n        }\n    });\n    return {\n        labelPosition,\n        //Slots definition\n        components: {\n            root: 'div',\n            indicator: 'div',\n            input: 'input',\n            label: Label\n        },\n        root,\n        indicator,\n        input,\n        label\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,6BAA6B,QAAQ,uBAAuB;AACrE,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,yBAAyB,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,2BAA2B;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EAChD;EACAD,KAAK,GAAGT,6BAA6B,CAACS,KAAK,EAAE;IACzCE,gBAAgB,EAAE,IAAI;IACtBC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EACF,MAAM;IAAEC,OAAO;IAAGC,cAAc;IAAGC,QAAQ;IAAGC,aAAa,GAAE,OAAO;IAAGC,QAAQ;IAAGC;EAAU,CAAC,GAAGT,KAAK;EACrG,MAAMU,WAAW,GAAGf,yBAAyB,CAAC;IAC1CK,KAAK;IACLW,kBAAkB,EAAE,OAAO;IAC3BC,iBAAiB,EAAE,CACf,SAAS,EACT,gBAAgB,EAChB,UAAU;EAElB,CAAC,CAAC;EACF,MAAMC,EAAE,GAAGf,KAAK,CAAC,SAAS,EAAEY,WAAW,CAACI,OAAO,CAACD,EAAE,CAAC;EACnD,MAAME,IAAI,GAAGlB,gBAAgB,CAACG,KAAK,CAACe,IAAI,EAAE;IACtCC,YAAY,EAAE;MACVf,GAAG,EAAEP,cAAc,CAAC,CAAC;MACrB,GAAGgB,WAAW,CAACK;IACnB,CAAC;IACDN,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAMQ,SAAS,GAAGpB,gBAAgB,CAACG,KAAK,CAACiB,SAAS,EAAE;IAChDD,YAAY,EAAE;MACV,aAAa,EAAE,IAAI;MACnBE,QAAQ,EAAE,aAAc5B,KAAK,CAAC6B,aAAa,CAAC3B,YAAY,EAAE,IAAI;IAClE,CAAC;IACDiB,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAMW,KAAK,GAAGvB,gBAAgB,CAACG,KAAK,CAACoB,KAAK,EAAE;IACxCJ,YAAY,EAAE;MACVZ,OAAO;MACPC,cAAc;MACdQ,EAAE;MACFZ,GAAG;MACHoB,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,UAAU;MAChB,GAAGZ,WAAW,CAACI;IACnB,CAAC;IACDL,QAAQ,EAAE;EACd,CAAC,CAAC;EACFW,KAAK,CAACZ,QAAQ,GAAGZ,cAAc,CAACwB,KAAK,CAACZ,QAAQ,EAAGe,EAAE,IAAG;IAClD,OAAOf,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACe,EAAE,EAAE;MACpEnB,OAAO,EAAEmB,EAAE,CAACC,aAAa,CAACpB;IAC9B,CAAC,CAAC;EACN,CAAC,CAAC;EACF,MAAMqB,KAAK,GAAG5B,gBAAgB,CAACG,KAAK,CAACyB,KAAK,EAAE;IACxCT,YAAY,EAAE;MACVV,QAAQ;MACRoB,OAAO,EAAEb,EAAE;MACXJ,QAAQ;MACRkB,IAAI,EAAE;IACV;EACJ,CAAC,CAAC;EACF,OAAO;IACHpB,aAAa;IACb;IACAqB,UAAU,EAAE;MACRb,IAAI,EAAE,KAAK;MACXE,SAAS,EAAE,KAAK;MAChBG,KAAK,EAAE,OAAO;MACdK,KAAK,EAAEhC;IACX,CAAC;IACDsB,IAAI;IACJE,SAAS;IACTG,KAAK;IACLK;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}