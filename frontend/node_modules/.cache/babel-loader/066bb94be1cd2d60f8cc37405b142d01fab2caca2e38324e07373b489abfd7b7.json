{"ast":null,"code":"import * as React from 'react';\nimport { useArrowNavigationGroup, useFocusFinders } from '@fluentui/react-tabster';\nimport { useTable_unstable } from '../Table/useTable';\nimport { useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { End, Home } from '@fluentui/keyboard-keys';\nimport { useTableFeatures, useTableSort, useTableSelection, useTableColumnSizing_unstable, useTableCompositeNavigation } from '../../hooks';\nimport { CELL_WIDTH } from '../TableSelectionCell';\n/**\n * Create the state required to render DataGrid.\n *\n * The returned state can be modified with hooks such as useDataGridStyles_unstable,\n * before being passed to renderDataGrid_unstable.\n *\n * @param props - props from this instance of DataGrid\n * @param ref - reference to root HTMLElement of DataGrid\n */\nexport const useDataGrid_unstable = (props, ref) => {\n  const {\n    items,\n    columns,\n    focusMode = 'cell',\n    selectionMode,\n    onSortChange,\n    onSelectionChange,\n    defaultSortState,\n    sortState,\n    selectedItems,\n    defaultSelectedItems,\n    subtleSelection = false,\n    selectionAppearance = 'brand',\n    getRowId,\n    resizableColumns,\n    columnSizingOptions,\n    onColumnResize,\n    containerWidthOffset\n  } = props;\n  const widthOffset = containerWidthOffset !== null && containerWidthOffset !== void 0 ? containerWidthOffset : selectionMode ? -CELL_WIDTH : 0;\n  const gridTabsterAttribute = useArrowNavigationGroup({\n    axis: 'grid'\n  });\n  const {\n    onTableKeyDown: onCompositeKeyDown,\n    tableTabsterAttribute: compositeTabsterAttribute,\n    tableRowTabsterAttribute: compositeRowTabsterAttribute\n  } = useTableCompositeNavigation();\n  const tableState = useTableFeatures({\n    items,\n    columns,\n    getRowId\n  }, [useTableSort({\n    defaultSortState,\n    sortState,\n    onSortChange\n  }), useTableSelection({\n    defaultSelectedItems,\n    selectedItems,\n    onSelectionChange,\n    selectionMode: selectionMode !== null && selectionMode !== void 0 ? selectionMode : 'multiselect'\n  }), useTableColumnSizing_unstable({\n    onColumnResize,\n    columnSizingOptions,\n    // The selection cell is not part of the columns, therefore its width needs to be subtracted\n    // from the container to make sure the columns don't overflow the table.\n    containerWidthOffset: widthOffset\n  })]);\n  const innerRef = React.useRef(null);\n  const {\n    findFirstFocusable,\n    findLastFocusable\n  } = useFocusFinders();\n  const onKeyDown = useEventCallback(e => {\n    var _props_onKeyDown;\n    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);\n    focusMode === 'composite' && onCompositeKeyDown(e);\n    // handle ctrl+home and ctrl+end\n    if (!innerRef.current || !e.ctrlKey || e.defaultPrevented) {\n      return;\n    }\n    if (e.key === Home) {\n      const firstRow = innerRef.current.querySelector('[role=\"row\"]');\n      if (firstRow) {\n        var _findFirstFocusable;\n        (_findFirstFocusable = findFirstFocusable(firstRow)) === null || _findFirstFocusable === void 0 ? void 0 : _findFirstFocusable.focus();\n      }\n    }\n    if (e.key === End) {\n      const rows = innerRef.current.querySelectorAll('[role=\"row\"]');\n      if (rows.length) {\n        var _findLastFocusable;\n        const lastRow = rows.item(rows.length - 1);\n        (_findLastFocusable = findLastFocusable(lastRow)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();\n      }\n    }\n  });\n  const baseTableState = useTable_unstable({\n    role: 'grid',\n    as: 'div',\n    noNativeElements: true,\n    ...(focusMode === 'cell' && gridTabsterAttribute),\n    ...(focusMode === 'composite' && compositeTabsterAttribute),\n    ...props,\n    onKeyDown\n  }, useMergedRefs(ref, tableState.tableRef, innerRef));\n  return {\n    ...baseTableState,\n    focusMode,\n    tableState,\n    selectableRows: !!selectionMode,\n    subtleSelection,\n    selectionAppearance,\n    resizableColumns,\n    compositeRowTabsterAttribute\n  };\n};","map":{"version":3,"names":["React","useArrowNavigationGroup","useFocusFinders","useTable_unstable","useEventCallback","useMergedRefs","End","Home","useTableFeatures","useTableSort","useTableSelection","useTableColumnSizing_unstable","useTableCompositeNavigation","CELL_WIDTH","useDataGrid_unstable","props","ref","items","columns","focusMode","selectionMode","onSortChange","onSelectionChange","defaultSortState","sortState","selectedItems","defaultSelectedItems","subtleSelection","selectionAppearance","getRowId","resizableColumns","columnSizingOptions","onColumnResize","containerWidthOffset","widthOffset","gridTabsterAttribute","axis","onTableKeyDown","onCompositeKeyDown","tableTabsterAttribute","compositeTabsterAttribute","tableRowTabsterAttribute","compositeRowTabsterAttribute","tableState","innerRef","useRef","findFirstFocusable","findLastFocusable","onKeyDown","e","_props_onKeyDown","call","current","ctrlKey","defaultPrevented","key","firstRow","querySelector","_findFirstFocusable","focus","rows","querySelectorAll","length","_findLastFocusable","lastRow","item","baseTableState","role","as","noNativeElements","tableRef","selectableRows"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-table/lib/components/DataGrid/useDataGrid.js"],"sourcesContent":["import * as React from 'react';\nimport { useArrowNavigationGroup, useFocusFinders } from '@fluentui/react-tabster';\nimport { useTable_unstable } from '../Table/useTable';\nimport { useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { End, Home } from '@fluentui/keyboard-keys';\nimport { useTableFeatures, useTableSort, useTableSelection, useTableColumnSizing_unstable, useTableCompositeNavigation } from '../../hooks';\nimport { CELL_WIDTH } from '../TableSelectionCell';\n/**\n * Create the state required to render DataGrid.\n *\n * The returned state can be modified with hooks such as useDataGridStyles_unstable,\n * before being passed to renderDataGrid_unstable.\n *\n * @param props - props from this instance of DataGrid\n * @param ref - reference to root HTMLElement of DataGrid\n */ export const useDataGrid_unstable = (props, ref)=>{\n    const { items , columns , focusMode ='cell' , selectionMode , onSortChange , onSelectionChange , defaultSortState , sortState , selectedItems , defaultSelectedItems , subtleSelection =false , selectionAppearance ='brand' , getRowId , resizableColumns , columnSizingOptions , onColumnResize , containerWidthOffset  } = props;\n    const widthOffset = containerWidthOffset !== null && containerWidthOffset !== void 0 ? containerWidthOffset : selectionMode ? -CELL_WIDTH : 0;\n    const gridTabsterAttribute = useArrowNavigationGroup({\n        axis: 'grid'\n    });\n    const { onTableKeyDown: onCompositeKeyDown , tableTabsterAttribute: compositeTabsterAttribute , tableRowTabsterAttribute: compositeRowTabsterAttribute  } = useTableCompositeNavigation();\n    const tableState = useTableFeatures({\n        items,\n        columns,\n        getRowId\n    }, [\n        useTableSort({\n            defaultSortState,\n            sortState,\n            onSortChange\n        }),\n        useTableSelection({\n            defaultSelectedItems,\n            selectedItems,\n            onSelectionChange,\n            selectionMode: selectionMode !== null && selectionMode !== void 0 ? selectionMode : 'multiselect'\n        }),\n        useTableColumnSizing_unstable({\n            onColumnResize,\n            columnSizingOptions,\n            // The selection cell is not part of the columns, therefore its width needs to be subtracted\n            // from the container to make sure the columns don't overflow the table.\n            containerWidthOffset: widthOffset\n        })\n    ]);\n    const innerRef = React.useRef(null);\n    const { findFirstFocusable , findLastFocusable  } = useFocusFinders();\n    const onKeyDown = useEventCallback((e)=>{\n        var _props_onKeyDown;\n        (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);\n        focusMode === 'composite' && onCompositeKeyDown(e);\n        // handle ctrl+home and ctrl+end\n        if (!innerRef.current || !e.ctrlKey || e.defaultPrevented) {\n            return;\n        }\n        if (e.key === Home) {\n            const firstRow = innerRef.current.querySelector('[role=\"row\"]');\n            if (firstRow) {\n                var _findFirstFocusable;\n                (_findFirstFocusable = findFirstFocusable(firstRow)) === null || _findFirstFocusable === void 0 ? void 0 : _findFirstFocusable.focus();\n            }\n        }\n        if (e.key === End) {\n            const rows = innerRef.current.querySelectorAll('[role=\"row\"]');\n            if (rows.length) {\n                var _findLastFocusable;\n                const lastRow = rows.item(rows.length - 1);\n                (_findLastFocusable = findLastFocusable(lastRow)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();\n            }\n        }\n    });\n    const baseTableState = useTable_unstable({\n        role: 'grid',\n        as: 'div',\n        noNativeElements: true,\n        ...focusMode === 'cell' && gridTabsterAttribute,\n        ...focusMode === 'composite' && compositeTabsterAttribute,\n        ...props,\n        onKeyDown\n    }, useMergedRefs(ref, tableState.tableRef, innerRef));\n    return {\n        ...baseTableState,\n        focusMode,\n        tableState,\n        selectableRows: !!selectionMode,\n        subtleSelection,\n        selectionAppearance,\n        resizableColumns,\n        compositeRowTabsterAttribute\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}