{"ast":null,"code":"import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useOverrides_unstable as useOverrides } from '@fluentui/react-shared-contexts';\n/**\n * Create the state required to render Textarea.\n *\n * The returned state can be modified with hooks such as useTextareaStyles_unstable,\n * before being passed to renderTextarea_unstable.\n *\n * @param props - props from this instance of Textarea\n * @param ref - reference to root HTMLElement of Textarea\n */\nexport const useTextarea_unstable = (props, ref) => {\n  // Merge props from surrounding <Field>, if any\n  props = useFieldControlProps_unstable(props, {\n    supportsLabelFor: true,\n    supportsRequired: true,\n    supportsSize: true\n  });\n  const overrides = useOverrides();\n  var _overrides_inputDefaultAppearance;\n  const {\n    size = 'medium',\n    appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : 'outline',\n    resize = 'none',\n    onChange\n  } = props;\n  if (process.env.NODE_ENV !== 'production' && (appearance === 'filled-darker-shadow' || appearance === 'filled-lighter-shadow')) {\n    // eslint-disable-next-line no-console\n    console.error(\"The 'filled-darker-shadow' and 'filled-lighter-shadow' appearances are deprecated and will be removed in the\" + ' future.');\n  }\n  const [value, setValue] = useControllableState({\n    state: props.value,\n    defaultState: props.defaultValue,\n    initialState: undefined\n  });\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'textarea',\n    excludedPropNames: ['onChange', 'value', 'defaultValue']\n  });\n  const state = {\n    size,\n    appearance,\n    resize,\n    components: {\n      root: 'span',\n      textarea: 'textarea'\n    },\n    textarea: resolveShorthand(props.textarea, {\n      required: true,\n      defaultProps: {\n        ref,\n        ...nativeProps.primary\n      }\n    }),\n    root: resolveShorthand(props.root, {\n      required: true,\n      defaultProps: nativeProps.root\n    })\n  };\n  state.textarea.value = value;\n  state.textarea.onChange = useEventCallback(ev => {\n    const newValue = ev.target.value;\n    onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n      value: newValue\n    });\n    setValue(newValue);\n  });\n  return state;\n};","map":{"version":3,"names":["React","useFieldControlProps_unstable","getPartitionedNativeProps","resolveShorthand","useControllableState","useEventCallback","useOverrides_unstable","useOverrides","useTextarea_unstable","props","ref","supportsLabelFor","supportsRequired","supportsSize","overrides","_overrides_inputDefaultAppearance","size","appearance","inputDefaultAppearance","resize","onChange","process","env","NODE_ENV","console","error","value","setValue","state","defaultState","defaultValue","initialState","undefined","nativeProps","primarySlotTagName","excludedPropNames","components","root","textarea","required","defaultProps","primary","ev","newValue","target"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-textarea/lib/components/Textarea/useTextarea.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useOverrides_unstable as useOverrides } from '@fluentui/react-shared-contexts';\n/**\n * Create the state required to render Textarea.\n *\n * The returned state can be modified with hooks such as useTextareaStyles_unstable,\n * before being passed to renderTextarea_unstable.\n *\n * @param props - props from this instance of Textarea\n * @param ref - reference to root HTMLElement of Textarea\n */ export const useTextarea_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true,\n        supportsRequired: true,\n        supportsSize: true\n    });\n    const overrides = useOverrides();\n    var _overrides_inputDefaultAppearance;\n    const { size ='medium' , appearance =(_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : 'outline' , resize ='none' , onChange  } = props;\n    if (process.env.NODE_ENV !== 'production' && (appearance === 'filled-darker-shadow' || appearance === 'filled-lighter-shadow')) {\n        // eslint-disable-next-line no-console\n        console.error(\"The 'filled-darker-shadow' and 'filled-lighter-shadow' appearances are deprecated and will be removed in the\" + ' future.');\n    }\n    const [value, setValue] = useControllableState({\n        state: props.value,\n        defaultState: props.defaultValue,\n        initialState: undefined\n    });\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'textarea',\n        excludedPropNames: [\n            'onChange',\n            'value',\n            'defaultValue'\n        ]\n    });\n    const state = {\n        size,\n        appearance,\n        resize,\n        components: {\n            root: 'span',\n            textarea: 'textarea'\n        },\n        textarea: resolveShorthand(props.textarea, {\n            required: true,\n            defaultProps: {\n                ref,\n                ...nativeProps.primary\n            }\n        }),\n        root: resolveShorthand(props.root, {\n            required: true,\n            defaultProps: nativeProps.root\n        })\n    };\n    state.textarea.value = value;\n    state.textarea.onChange = useEventCallback((ev)=>{\n        const newValue = ev.target.value;\n        onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n            value: newValue\n        });\n        setValue(newValue);\n    });\n    return state;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,6BAA6B,QAAQ,uBAAuB;AACrE,SAASC,yBAAyB,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,gBAAgB,QAAQ,2BAA2B;AAC/H,SAASC,qBAAqB,IAAIC,YAAY,QAAQ,iCAAiC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EAClD;EACAD,KAAK,GAAGR,6BAA6B,CAACQ,KAAK,EAAE;IACzCE,gBAAgB,EAAE,IAAI;IACtBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,MAAMC,SAAS,GAAGP,YAAY,CAAC,CAAC;EAChC,IAAIQ,iCAAiC;EACrC,MAAM;IAAEC,IAAI,GAAE,QAAQ;IAAGC,UAAU,GAAE,CAACF,iCAAiC,GAAGD,SAAS,CAACI,sBAAsB,MAAM,IAAI,IAAIH,iCAAiC,KAAK,KAAK,CAAC,GAAGA,iCAAiC,GAAG,SAAS;IAAGI,MAAM,GAAE,MAAM;IAAGC;EAAU,CAAC,GAAGX,KAAK;EAC3P,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,KAAKN,UAAU,KAAK,sBAAsB,IAAIA,UAAU,KAAK,uBAAuB,CAAC,EAAE;IAC5H;IACAO,OAAO,CAACC,KAAK,CAAC,8GAA8G,GAAG,UAAU,CAAC;EAC9I;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,oBAAoB,CAAC;IAC3CwB,KAAK,EAAEnB,KAAK,CAACiB,KAAK;IAClBG,YAAY,EAAEpB,KAAK,CAACqB,YAAY;IAChCC,YAAY,EAAEC;EAClB,CAAC,CAAC;EACF,MAAMC,WAAW,GAAG/B,yBAAyB,CAAC;IAC1CO,KAAK;IACLyB,kBAAkB,EAAE,UAAU;IAC9BC,iBAAiB,EAAE,CACf,UAAU,EACV,OAAO,EACP,cAAc;EAEtB,CAAC,CAAC;EACF,MAAMP,KAAK,GAAG;IACVZ,IAAI;IACJC,UAAU;IACVE,MAAM;IACNiB,UAAU,EAAE;MACRC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDA,QAAQ,EAAEnC,gBAAgB,CAACM,KAAK,CAAC6B,QAAQ,EAAE;MACvCC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACV9B,GAAG;QACH,GAAGuB,WAAW,CAACQ;MACnB;IACJ,CAAC,CAAC;IACFJ,IAAI,EAAElC,gBAAgB,CAACM,KAAK,CAAC4B,IAAI,EAAE;MAC/BE,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAEP,WAAW,CAACI;IAC9B,CAAC;EACL,CAAC;EACDT,KAAK,CAACU,QAAQ,CAACZ,KAAK,GAAGA,KAAK;EAC5BE,KAAK,CAACU,QAAQ,CAAClB,QAAQ,GAAGf,gBAAgB,CAAEqC,EAAE,IAAG;IAC7C,MAAMC,QAAQ,GAAGD,EAAE,CAACE,MAAM,CAAClB,KAAK;IAChCN,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACsB,EAAE,EAAE;MAC7DhB,KAAK,EAAEiB;IACX,CAAC,CAAC;IACFhB,QAAQ,CAACgB,QAAQ,CAAC;EACtB,CAAC,CAAC;EACF,OAAOf,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}