{"ast":null,"code":"import { Types, getMover } from 'tabster';\nimport { useTabsterAttributes } from './useTabsterAttributes';\nimport { useTabster } from './useTabster';\n/**\n * A hook that returns the necessary tabster attributes to support arrow key navigation\n * @param options - Options to configure keyboard navigation\n */\nexport const useArrowNavigationGroup = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    circular,\n    axis,\n    memorizeCurrent,\n    tabbable,\n    ignoreDefaultKeydown,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_hasDefault\n  } = options;\n  const tabster = useTabster();\n  if (tabster) {\n    getMover(tabster);\n  }\n  return useTabsterAttributes({\n    mover: {\n      cyclic: !!circular,\n      direction: axisToMoverDirection(axis !== null && axis !== void 0 ? axis : 'vertical'),\n      memorizeCurrent,\n      tabbable,\n      hasDefault: unstable_hasDefault\n    },\n    ...(ignoreDefaultKeydown && {\n      focusable: {\n        ignoreKeydown: ignoreDefaultKeydown\n      }\n    })\n  });\n};\nfunction axisToMoverDirection(axis) {\n  switch (axis) {\n    case 'horizontal':\n      return Types.MoverDirections.Horizontal;\n    case 'grid':\n      return Types.MoverDirections.Grid;\n    case 'grid-linear':\n      return Types.MoverDirections.GridLinear;\n    case 'both':\n      return Types.MoverDirections.Both;\n    case 'vertical':\n    default:\n      return Types.MoverDirections.Vertical;\n  }\n}","map":{"version":3,"names":["Types","getMover","useTabsterAttributes","useTabster","useArrowNavigationGroup","options","arguments","length","undefined","circular","axis","memorizeCurrent","tabbable","ignoreDefaultKeydown","unstable_hasDefault","tabster","mover","cyclic","direction","axisToMoverDirection","hasDefault","focusable","ignoreKeydown","MoverDirections","Horizontal","Grid","GridLinear","Both","Vertical"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-tabster/lib/hooks/useArrowNavigationGroup.js"],"sourcesContent":["import { Types, getMover } from 'tabster';\nimport { useTabsterAttributes } from './useTabsterAttributes';\nimport { useTabster } from './useTabster';\n/**\n * A hook that returns the necessary tabster attributes to support arrow key navigation\n * @param options - Options to configure keyboard navigation\n */ export const useArrowNavigationGroup = (options = {})=>{\n    const { circular , axis , memorizeCurrent , tabbable , ignoreDefaultKeydown , // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_hasDefault  } = options;\n    const tabster = useTabster();\n    if (tabster) {\n        getMover(tabster);\n    }\n    return useTabsterAttributes({\n        mover: {\n            cyclic: !!circular,\n            direction: axisToMoverDirection(axis !== null && axis !== void 0 ? axis : 'vertical'),\n            memorizeCurrent,\n            tabbable,\n            hasDefault: unstable_hasDefault\n        },\n        ...ignoreDefaultKeydown && {\n            focusable: {\n                ignoreKeydown: ignoreDefaultKeydown\n            }\n        }\n    });\n};\nfunction axisToMoverDirection(axis) {\n    switch(axis){\n        case 'horizontal':\n            return Types.MoverDirections.Horizontal;\n        case 'grid':\n            return Types.MoverDirections.Grid;\n        case 'grid-linear':\n            return Types.MoverDirections.GridLinear;\n        case 'both':\n            return Types.MoverDirections.Both;\n        case 'vertical':\n        default:\n            return Types.MoverDirections.Vertical;\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,SAAS;AACzC,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,UAAU,QAAQ,cAAc;AACzC;AACA;AACA;AACA;AAAI,OAAO,MAAMC,uBAAuB,GAAG,SAAAA,CAAA,EAAgB;EAAA,IAAfC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACpD,MAAM;IAAEG,QAAQ;IAAGC,IAAI;IAAGC,eAAe;IAAGC,QAAQ;IAAGC,oBAAoB;IAAG;IAC9EC;EAAqB,CAAC,GAAGT,OAAO;EAChC,MAAMU,OAAO,GAAGZ,UAAU,CAAC,CAAC;EAC5B,IAAIY,OAAO,EAAE;IACTd,QAAQ,CAACc,OAAO,CAAC;EACrB;EACA,OAAOb,oBAAoB,CAAC;IACxBc,KAAK,EAAE;MACHC,MAAM,EAAE,CAAC,CAACR,QAAQ;MAClBS,SAAS,EAAEC,oBAAoB,CAACT,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAG,UAAU,CAAC;MACrFC,eAAe;MACfC,QAAQ;MACRQ,UAAU,EAAEN;IAChB,CAAC;IACD,IAAGD,oBAAoB,IAAI;MACvBQ,SAAS,EAAE;QACPC,aAAa,EAAET;MACnB;IACJ,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AACD,SAASM,oBAAoBA,CAACT,IAAI,EAAE;EAChC,QAAOA,IAAI;IACP,KAAK,YAAY;MACb,OAAOV,KAAK,CAACuB,eAAe,CAACC,UAAU;IAC3C,KAAK,MAAM;MACP,OAAOxB,KAAK,CAACuB,eAAe,CAACE,IAAI;IACrC,KAAK,aAAa;MACd,OAAOzB,KAAK,CAACuB,eAAe,CAACG,UAAU;IAC3C,KAAK,MAAM;MACP,OAAO1B,KAAK,CAACuB,eAAe,CAACI,IAAI;IACrC,KAAK,UAAU;IACf;MACI,OAAO3B,KAAK,CAACuB,eAAe,CAACK,QAAQ;EAC7C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}