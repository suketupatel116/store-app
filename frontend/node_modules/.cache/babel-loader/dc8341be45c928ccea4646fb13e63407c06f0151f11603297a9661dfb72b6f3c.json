{"ast":null,"code":"import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useTableRowIdContext } from '../../contexts/rowIdContext';\nimport { useIsInTableHeader } from '../../contexts/tableHeaderContext';\nimport { useTableSelectionCell_unstable } from '../TableSelectionCell/useTableSelectionCell';\n/**\n * Create the state required to render DataGridSelectionCell.\n *\n * The returned state can be modified with hooks such as useDataGridSelectionCellStyles_unstable,\n * before being passed to renderDataGridSelectionCell_unstable.\n *\n * @param props - props from this instance of DataGridSelectionCell\n * @param ref - reference to root HTMLElement of DataGridSelectionCell\n */\nexport const useDataGridSelectionCell_unstable = (props, ref) => {\n  const isHeader = useIsInTableHeader();\n  const rowId = useTableRowIdContext();\n  const subtle = useDataGridContext_unstable(ctx => ctx.subtleSelection);\n  const checked = useDataGridContext_unstable(ctx => {\n    if (isHeader && ctx.selection.selectionMode === 'multiselect') {\n      return ctx.selection.allRowsSelected ? true : ctx.selection.someRowsSelected ? 'mixed' : false;\n    }\n    return ctx.selection.isRowSelected(rowId);\n  });\n  const toggleAllRows = useDataGridContext_unstable(ctx => ctx.selection.toggleAllRows);\n  const type = useDataGridContext_unstable(ctx => ctx.selection.selectionMode === 'multiselect' ? 'checkbox' : 'radio');\n  const onClick = useEventCallback(e => {\n    var _props_onClick;\n    if (isHeader) {\n      toggleAllRows(e);\n    }\n    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);\n  });\n  return useTableSelectionCell_unstable({\n    as: 'div',\n    role: 'gridcell',\n    checked,\n    type,\n    hidden: isHeader && type === 'radio',\n    'aria-checked': isHeader ? checked : undefined,\n    'aria-selected': isHeader || checked === 'mixed' ? undefined : checked,\n    subtle,\n    ...props,\n    onClick\n  }, ref);\n};","map":{"version":3,"names":["React","useEventCallback","useDataGridContext_unstable","useTableRowIdContext","useIsInTableHeader","useTableSelectionCell_unstable","useDataGridSelectionCell_unstable","props","ref","isHeader","rowId","subtle","ctx","subtleSelection","checked","selection","selectionMode","allRowsSelected","someRowsSelected","isRowSelected","toggleAllRows","type","onClick","e","_props_onClick","call","as","role","hidden","undefined"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/useDataGridSelectionCell.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useTableRowIdContext } from '../../contexts/rowIdContext';\nimport { useIsInTableHeader } from '../../contexts/tableHeaderContext';\nimport { useTableSelectionCell_unstable } from '../TableSelectionCell/useTableSelectionCell';\n/**\n * Create the state required to render DataGridSelectionCell.\n *\n * The returned state can be modified with hooks such as useDataGridSelectionCellStyles_unstable,\n * before being passed to renderDataGridSelectionCell_unstable.\n *\n * @param props - props from this instance of DataGridSelectionCell\n * @param ref - reference to root HTMLElement of DataGridSelectionCell\n */ export const useDataGridSelectionCell_unstable = (props, ref)=>{\n    const isHeader = useIsInTableHeader();\n    const rowId = useTableRowIdContext();\n    const subtle = useDataGridContext_unstable((ctx)=>ctx.subtleSelection);\n    const checked = useDataGridContext_unstable((ctx)=>{\n        if (isHeader && ctx.selection.selectionMode === 'multiselect') {\n            return ctx.selection.allRowsSelected ? true : ctx.selection.someRowsSelected ? 'mixed' : false;\n        }\n        return ctx.selection.isRowSelected(rowId);\n    });\n    const toggleAllRows = useDataGridContext_unstable((ctx)=>ctx.selection.toggleAllRows);\n    const type = useDataGridContext_unstable((ctx)=>ctx.selection.selectionMode === 'multiselect' ? 'checkbox' : 'radio');\n    const onClick = useEventCallback((e)=>{\n        var _props_onClick;\n        if (isHeader) {\n            toggleAllRows(e);\n        }\n        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);\n    });\n    return useTableSelectionCell_unstable({\n        as: 'div',\n        role: 'gridcell',\n        checked,\n        type,\n        hidden: isHeader && type === 'radio',\n        'aria-checked': isHeader ? checked : undefined,\n        'aria-selected': isHeader || checked === 'mixed' ? undefined : checked,\n        subtle,\n        ...props,\n        onClick\n    }, ref);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,2BAA2B,QAAQ,gCAAgC;AAC5E,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,8BAA8B,QAAQ,6CAA6C;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,iCAAiC,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EAC/D,MAAMC,QAAQ,GAAGL,kBAAkB,CAAC,CAAC;EACrC,MAAMM,KAAK,GAAGP,oBAAoB,CAAC,CAAC;EACpC,MAAMQ,MAAM,GAAGT,2BAA2B,CAAEU,GAAG,IAAGA,GAAG,CAACC,eAAe,CAAC;EACtE,MAAMC,OAAO,GAAGZ,2BAA2B,CAAEU,GAAG,IAAG;IAC/C,IAAIH,QAAQ,IAAIG,GAAG,CAACG,SAAS,CAACC,aAAa,KAAK,aAAa,EAAE;MAC3D,OAAOJ,GAAG,CAACG,SAAS,CAACE,eAAe,GAAG,IAAI,GAAGL,GAAG,CAACG,SAAS,CAACG,gBAAgB,GAAG,OAAO,GAAG,KAAK;IAClG;IACA,OAAON,GAAG,CAACG,SAAS,CAACI,aAAa,CAACT,KAAK,CAAC;EAC7C,CAAC,CAAC;EACF,MAAMU,aAAa,GAAGlB,2BAA2B,CAAEU,GAAG,IAAGA,GAAG,CAACG,SAAS,CAACK,aAAa,CAAC;EACrF,MAAMC,IAAI,GAAGnB,2BAA2B,CAAEU,GAAG,IAAGA,GAAG,CAACG,SAAS,CAACC,aAAa,KAAK,aAAa,GAAG,UAAU,GAAG,OAAO,CAAC;EACrH,MAAMM,OAAO,GAAGrB,gBAAgB,CAAEsB,CAAC,IAAG;IAClC,IAAIC,cAAc;IAClB,IAAIf,QAAQ,EAAE;MACVW,aAAa,CAACG,CAAC,CAAC;IACpB;IACA,CAACC,cAAc,GAAGjB,KAAK,CAACe,OAAO,MAAM,IAAI,IAAIE,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACC,IAAI,CAAClB,KAAK,EAAEgB,CAAC,CAAC;EACnH,CAAC,CAAC;EACF,OAAOlB,8BAA8B,CAAC;IAClCqB,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,UAAU;IAChBb,OAAO;IACPO,IAAI;IACJO,MAAM,EAAEnB,QAAQ,IAAIY,IAAI,KAAK,OAAO;IACpC,cAAc,EAAEZ,QAAQ,GAAGK,OAAO,GAAGe,SAAS;IAC9C,eAAe,EAAEpB,QAAQ,IAAIK,OAAO,KAAK,OAAO,GAAGe,SAAS,GAAGf,OAAO;IACtEH,MAAM;IACN,GAAGJ,KAAK;IACRe;EACJ,CAAC,EAAEd,GAAG,CAAC;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}