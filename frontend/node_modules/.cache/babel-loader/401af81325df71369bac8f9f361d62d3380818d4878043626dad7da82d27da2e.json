{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useBackgroundAppearance } from '@fluentui/react-shared-contexts';\nimport { useLinkState_unstable } from './useLinkState';\n/**\n * Given user props, defines default props for the Link, calls useLinkState_unstable, and returns processed state.\n * @param props - User provided props to the Link component.\n * @param ref - User provided ref to be passed to the Link component.\n */\nexport const useLink_unstable = (props, ref) => {\n  const backgroundAppearance = useBackgroundAppearance();\n  const {\n    appearance = 'default',\n    disabled = false,\n    disabledFocusable = false,\n    inline = false\n  } = props;\n  const as = props.as || (props.href ? 'a' : 'button');\n  const type = as === 'button' ? 'button' : undefined;\n  const state = {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    inline,\n    // Slots definition\n    components: {\n      root: 'a'\n    },\n    root: getNativeElementProps(as, {\n      ref,\n      type,\n      ...props,\n      as\n    }),\n    backgroundAppearance\n  };\n  useLinkState_unstable(state);\n  return state;\n};","map":{"version":3,"names":["React","getNativeElementProps","useBackgroundAppearance","useLinkState_unstable","useLink_unstable","props","ref","backgroundAppearance","appearance","disabled","disabledFocusable","inline","as","href","type","undefined","state","components","root"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-link/lib/components/Link/useLink.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useBackgroundAppearance } from '@fluentui/react-shared-contexts';\nimport { useLinkState_unstable } from './useLinkState';\n/**\n * Given user props, defines default props for the Link, calls useLinkState_unstable, and returns processed state.\n * @param props - User provided props to the Link component.\n * @param ref - User provided ref to be passed to the Link component.\n */ export const useLink_unstable = (props, ref)=>{\n    const backgroundAppearance = useBackgroundAppearance();\n    const { appearance ='default' , disabled =false , disabledFocusable =false , inline =false  } = props;\n    const as = props.as || (props.href ? 'a' : 'button');\n    const type = as === 'button' ? 'button' : undefined;\n    const state = {\n        // Props passed at the top-level\n        appearance,\n        disabled,\n        disabledFocusable,\n        inline,\n        // Slots definition\n        components: {\n            root: 'a'\n        },\n        root: getNativeElementProps(as, {\n            ref,\n            type,\n            ...props,\n            as\n        }),\n        backgroundAppearance\n    };\n    useLinkState_unstable(state);\n    return state;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,uBAAuB,QAAQ,iCAAiC;AACzE,SAASC,qBAAqB,QAAQ,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EAC9C,MAAMC,oBAAoB,GAAGL,uBAAuB,CAAC,CAAC;EACtD,MAAM;IAAEM,UAAU,GAAE,SAAS;IAAGC,QAAQ,GAAE,KAAK;IAAGC,iBAAiB,GAAE,KAAK;IAAGC,MAAM,GAAE;EAAO,CAAC,GAAGN,KAAK;EACrG,MAAMO,EAAE,GAAGP,KAAK,CAACO,EAAE,KAAKP,KAAK,CAACQ,IAAI,GAAG,GAAG,GAAG,QAAQ,CAAC;EACpD,MAAMC,IAAI,GAAGF,EAAE,KAAK,QAAQ,GAAG,QAAQ,GAAGG,SAAS;EACnD,MAAMC,KAAK,GAAG;IACV;IACAR,UAAU;IACVC,QAAQ;IACRC,iBAAiB;IACjBC,MAAM;IACN;IACAM,UAAU,EAAE;MACRC,IAAI,EAAE;IACV,CAAC;IACDA,IAAI,EAAEjB,qBAAqB,CAACW,EAAE,EAAE;MAC5BN,GAAG;MACHQ,IAAI;MACJ,GAAGT,KAAK;MACRO;IACJ,CAAC,CAAC;IACFL;EACJ,CAAC;EACDJ,qBAAqB,CAACa,KAAK,CAAC;EAC5B,OAAOA,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}