{"ast":null,"code":"import * as React from 'react';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\nimport { getNativeElementProps, useControllableState, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\n/**\n * Create the state required to render TabList.\n *\n * The returned state can be modified with hooks such as useTabListStyles_unstable,\n * before being passed to renderTabList_unstable.\n *\n * @param props - props from this instance of TabList\n * @param ref - reference to root HTMLElement of TabList\n */\nexport const useTabList_unstable = (props, ref) => {\n  const {\n    appearance = 'transparent',\n    reserveSelectedTabSpace = true,\n    disabled = false,\n    onTabSelect,\n    size = 'medium',\n    vertical = false\n  } = props;\n  const innerRef = React.useRef(null);\n  const focusAttributes = useArrowNavigationGroup({\n    circular: true,\n    axis: vertical ? 'vertical' : 'horizontal',\n    memorizeCurrent: true\n  });\n  const [selectedValue, setSelectedValue] = useControllableState({\n    state: props.selectedValue,\n    defaultState: props.defaultSelectedValue,\n    initialState: undefined\n  });\n  // considered usePrevious, but it is sensitive to re-renders\n  // this could cause the previous to move to current in the case where the tab list re-renders.\n  // these refs avoid getRegisteredTabs changing when selectedValue changes and causing\n  // renders for tabs that have not changed.\n  const currentSelectedValue = React.useRef(undefined);\n  const previousSelectedValue = React.useRef(undefined);\n  React.useEffect(() => {\n    previousSelectedValue.current = currentSelectedValue.current;\n    currentSelectedValue.current = selectedValue;\n  }, [selectedValue]);\n  const onSelect = useEventCallback((event, data) => {\n    setSelectedValue(data.value);\n    onTabSelect === null || onTabSelect === void 0 ? void 0 : onTabSelect(event, data);\n  });\n  const registeredTabs = React.useRef({});\n  const onRegister = useEventCallback(data => {\n    registeredTabs.current[JSON.stringify(data.value)] = data;\n  });\n  const onUnregister = useEventCallback(data => {\n    delete registeredTabs.current[JSON.stringify(data.value)];\n  });\n  const getRegisteredTabs = React.useCallback(() => {\n    return {\n      selectedValue: currentSelectedValue.current,\n      previousSelectedValue: previousSelectedValue.current,\n      registeredTabs: registeredTabs.current\n    };\n  }, []);\n  return {\n    components: {\n      root: 'div'\n    },\n    root: getNativeElementProps('div', {\n      ref: useMergedRefs(ref, innerRef),\n      role: 'tablist',\n      'aria-orientation': vertical ? 'vertical' : 'horizontal',\n      ...focusAttributes,\n      ...props\n    }),\n    appearance,\n    reserveSelectedTabSpace,\n    disabled,\n    selectedValue,\n    size,\n    vertical,\n    onRegister,\n    onUnregister,\n    onSelect,\n    getRegisteredTabs\n  };\n};","map":{"version":3,"names":["React","useArrowNavigationGroup","getNativeElementProps","useControllableState","useEventCallback","useMergedRefs","useTabList_unstable","props","ref","appearance","reserveSelectedTabSpace","disabled","onTabSelect","size","vertical","innerRef","useRef","focusAttributes","circular","axis","memorizeCurrent","selectedValue","setSelectedValue","state","defaultState","defaultSelectedValue","initialState","undefined","currentSelectedValue","previousSelectedValue","useEffect","current","onSelect","event","data","value","registeredTabs","onRegister","JSON","stringify","onUnregister","getRegisteredTabs","useCallback","components","root","role"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-tabs/lib/components/TabList/useTabList.js"],"sourcesContent":["import * as React from 'react';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\nimport { getNativeElementProps, useControllableState, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\n/**\n * Create the state required to render TabList.\n *\n * The returned state can be modified with hooks such as useTabListStyles_unstable,\n * before being passed to renderTabList_unstable.\n *\n * @param props - props from this instance of TabList\n * @param ref - reference to root HTMLElement of TabList\n */ export const useTabList_unstable = (props, ref)=>{\n    const { appearance ='transparent' , reserveSelectedTabSpace =true , disabled =false , onTabSelect , size ='medium' , vertical =false  } = props;\n    const innerRef = React.useRef(null);\n    const focusAttributes = useArrowNavigationGroup({\n        circular: true,\n        axis: vertical ? 'vertical' : 'horizontal',\n        memorizeCurrent: true\n    });\n    const [selectedValue, setSelectedValue] = useControllableState({\n        state: props.selectedValue,\n        defaultState: props.defaultSelectedValue,\n        initialState: undefined\n    });\n    // considered usePrevious, but it is sensitive to re-renders\n    // this could cause the previous to move to current in the case where the tab list re-renders.\n    // these refs avoid getRegisteredTabs changing when selectedValue changes and causing\n    // renders for tabs that have not changed.\n    const currentSelectedValue = React.useRef(undefined);\n    const previousSelectedValue = React.useRef(undefined);\n    React.useEffect(()=>{\n        previousSelectedValue.current = currentSelectedValue.current;\n        currentSelectedValue.current = selectedValue;\n    }, [\n        selectedValue\n    ]);\n    const onSelect = useEventCallback((event, data)=>{\n        setSelectedValue(data.value);\n        onTabSelect === null || onTabSelect === void 0 ? void 0 : onTabSelect(event, data);\n    });\n    const registeredTabs = React.useRef({});\n    const onRegister = useEventCallback((data)=>{\n        registeredTabs.current[JSON.stringify(data.value)] = data;\n    });\n    const onUnregister = useEventCallback((data)=>{\n        delete registeredTabs.current[JSON.stringify(data.value)];\n    });\n    const getRegisteredTabs = React.useCallback(()=>{\n        return {\n            selectedValue: currentSelectedValue.current,\n            previousSelectedValue: previousSelectedValue.current,\n            registeredTabs: registeredTabs.current\n        };\n    }, []);\n    return {\n        components: {\n            root: 'div'\n        },\n        root: getNativeElementProps('div', {\n            ref: useMergedRefs(ref, innerRef),\n            role: 'tablist',\n            'aria-orientation': vertical ? 'vertical' : 'horizontal',\n            ...focusAttributes,\n            ...props\n        }),\n        appearance,\n        reserveSelectedTabSpace,\n        disabled,\n        selectedValue,\n        size,\n        vertical,\n        onRegister,\n        onUnregister,\n        onSelect,\n        getRegisteredTabs\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}