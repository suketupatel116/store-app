{"ast":null,"code":"import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useControllableState, useEventCallback, useId, useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-utilities';\nimport { Checkmark12Filled, Checkmark16Filled, Square12Filled, Square16Filled, CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Checkbox.\n *\n * The returned state can be modified with hooks such as useCheckboxStyles_unstable,\n * before being passed to renderCheckbox_unstable.\n *\n * @param props - props from this instance of Checkbox\n * @param ref - reference to `<input>` element of Checkbox\n */\nexport const useCheckbox_unstable = (props, ref) => {\n  // Merge props from surrounding <Field>, if any\n  props = useFieldControlProps_unstable(props, {\n    supportsLabelFor: true,\n    supportsRequired: true\n  });\n  const {\n    disabled = false,\n    required,\n    shape = 'square',\n    size = 'medium',\n    labelPosition = 'after',\n    onChange\n  } = props;\n  const [checked, setChecked] = useControllableState({\n    defaultState: props.defaultChecked,\n    state: props.checked,\n    initialState: false\n  });\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['checked', 'defaultChecked', 'size', 'onChange']\n  });\n  const mixed = checked === 'mixed';\n  const id = useId('checkbox-', nativeProps.primary.id);\n  let checkmarkIcon;\n  if (mixed) {\n    if (shape === 'circular') {\n      checkmarkIcon = /*#__PURE__*/React.createElement(CircleFilled, null);\n    } else {\n      checkmarkIcon = size === 'large' ? /*#__PURE__*/React.createElement(Square16Filled, null) : /*#__PURE__*/React.createElement(Square12Filled, null);\n    }\n  } else if (checked) {\n    checkmarkIcon = size === 'large' ? /*#__PURE__*/React.createElement(Checkmark16Filled, null) : /*#__PURE__*/React.createElement(Checkmark12Filled, null);\n  }\n  const state = {\n    shape,\n    checked,\n    disabled,\n    size,\n    labelPosition,\n    components: {\n      root: 'span',\n      input: 'input',\n      indicator: 'div',\n      label: Label\n    },\n    root: resolveShorthand(props.root, {\n      required: true,\n      defaultProps: {\n        ref: useFocusWithin(),\n        ...nativeProps.root\n      }\n    }),\n    input: resolveShorthand(props.input, {\n      required: true,\n      defaultProps: {\n        type: 'checkbox',\n        id,\n        ref,\n        checked: checked === true,\n        ...nativeProps.primary\n      }\n    }),\n    label: resolveShorthand(props.label, {\n      required: false,\n      defaultProps: {\n        htmlFor: id,\n        disabled,\n        required,\n        size: 'medium'\n      }\n    }),\n    indicator: resolveShorthand(props.indicator, {\n      required: true,\n      defaultProps: {\n        'aria-hidden': true,\n        children: checkmarkIcon\n      }\n    })\n  };\n  state.input.onChange = useEventCallback(ev => {\n    const val = ev.currentTarget.indeterminate ? 'mixed' : ev.currentTarget.checked;\n    onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n      checked: val\n    });\n    setChecked(val);\n  });\n  // Create a ref object for the input element so we can use it to set the indeterminate prop.\n  // Use useMergedRefs, since the ref might be undefined or a function-ref (no .current)\n  const inputRef = useMergedRefs(state.input.ref);\n  state.input.ref = inputRef;\n  // Set the <input> element's checked and indeterminate properties based on our tri-state property.\n  // Since indeterminate can only be set via javascript, it has to be done in a layout effect.\n  useIsomorphicLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = mixed;\n    }\n  }, [inputRef, mixed]);\n  return state;\n};","map":{"version":3,"names":["React","useFieldControlProps_unstable","getPartitionedNativeProps","resolveShorthand","useControllableState","useEventCallback","useId","useIsomorphicLayoutEffect","useMergedRefs","Checkmark12Filled","Checkmark16Filled","Square12Filled","Square16Filled","CircleFilled","Label","useFocusWithin","useCheckbox_unstable","props","ref","supportsLabelFor","supportsRequired","disabled","required","shape","size","labelPosition","onChange","checked","setChecked","defaultState","defaultChecked","state","initialState","nativeProps","primarySlotTagName","excludedPropNames","mixed","id","primary","checkmarkIcon","createElement","components","root","input","indicator","label","defaultProps","type","htmlFor","children","ev","val","currentTarget","indeterminate","inputRef","current"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-checkbox/lib/components/Checkbox/useCheckbox.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useControllableState, useEventCallback, useId, useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-utilities';\nimport { Checkmark12Filled, Checkmark16Filled, Square12Filled, Square16Filled, CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Checkbox.\n *\n * The returned state can be modified with hooks such as useCheckboxStyles_unstable,\n * before being passed to renderCheckbox_unstable.\n *\n * @param props - props from this instance of Checkbox\n * @param ref - reference to `<input>` element of Checkbox\n */ export const useCheckbox_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true,\n        supportsRequired: true\n    });\n    const { disabled =false , required , shape ='square' , size ='medium' , labelPosition ='after' , onChange  } = props;\n    const [checked, setChecked] = useControllableState({\n        defaultState: props.defaultChecked,\n        state: props.checked,\n        initialState: false\n    });\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'input',\n        excludedPropNames: [\n            'checked',\n            'defaultChecked',\n            'size',\n            'onChange'\n        ]\n    });\n    const mixed = checked === 'mixed';\n    const id = useId('checkbox-', nativeProps.primary.id);\n    let checkmarkIcon;\n    if (mixed) {\n        if (shape === 'circular') {\n            checkmarkIcon = /*#__PURE__*/ React.createElement(CircleFilled, null);\n        } else {\n            checkmarkIcon = size === 'large' ? /*#__PURE__*/ React.createElement(Square16Filled, null) : /*#__PURE__*/ React.createElement(Square12Filled, null);\n        }\n    } else if (checked) {\n        checkmarkIcon = size === 'large' ? /*#__PURE__*/ React.createElement(Checkmark16Filled, null) : /*#__PURE__*/ React.createElement(Checkmark12Filled, null);\n    }\n    const state = {\n        shape,\n        checked,\n        disabled,\n        size,\n        labelPosition,\n        components: {\n            root: 'span',\n            input: 'input',\n            indicator: 'div',\n            label: Label\n        },\n        root: resolveShorthand(props.root, {\n            required: true,\n            defaultProps: {\n                ref: useFocusWithin(),\n                ...nativeProps.root\n            }\n        }),\n        input: resolveShorthand(props.input, {\n            required: true,\n            defaultProps: {\n                type: 'checkbox',\n                id,\n                ref,\n                checked: checked === true,\n                ...nativeProps.primary\n            }\n        }),\n        label: resolveShorthand(props.label, {\n            required: false,\n            defaultProps: {\n                htmlFor: id,\n                disabled,\n                required,\n                size: 'medium'\n            }\n        }),\n        indicator: resolveShorthand(props.indicator, {\n            required: true,\n            defaultProps: {\n                'aria-hidden': true,\n                children: checkmarkIcon\n            }\n        })\n    };\n    state.input.onChange = useEventCallback((ev)=>{\n        const val = ev.currentTarget.indeterminate ? 'mixed' : ev.currentTarget.checked;\n        onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n            checked: val\n        });\n        setChecked(val);\n    });\n    // Create a ref object for the input element so we can use it to set the indeterminate prop.\n    // Use useMergedRefs, since the ref might be undefined or a function-ref (no .current)\n    const inputRef = useMergedRefs(state.input.ref);\n    state.input.ref = inputRef;\n    // Set the <input> element's checked and indeterminate properties based on our tri-state property.\n    // Since indeterminate can only be set via javascript, it has to be done in a layout effect.\n    useIsomorphicLayoutEffect(()=>{\n        if (inputRef.current) {\n            inputRef.current.indeterminate = mixed;\n        }\n    }, [\n        inputRef,\n        mixed\n    ]);\n    return state;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}