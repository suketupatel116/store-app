{"ast":null,"code":"import * as React from 'react';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n/**\n * Creates a MutableRef with ref change callback. Is useful as React.useRef() doesn't notify you when its content\n * changes and mutating the .current property doesn't cause a re-render. An opt-out will be use a callback ref via\n * React.useState(), but it will cause re-renders always.\n *\n * https://reactjs.org/docs/hooks-reference.html#useref\n * https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n *\n * @param initialValue - initial ref value\n * @param callback - a callback to run when value changes\n * @param skipInitialResolve - a flag to skip an initial ref report\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n */\nexport function useCallbackRef(initialValue, callback, skipInitialResolve) {\n  const isFirst = React.useRef(true);\n  const [ref] = React.useState(() => ({\n    // value\n    value: initialValue,\n    // last callback\n    callback,\n    // \"memoized\" public interface\n    facade: {\n      get current() {\n        return ref.value;\n      },\n      set current(value) {\n        const last = ref.value;\n        if (last !== value) {\n          ref.value = value;\n          if (skipInitialResolve && isFirst.current) {\n            return;\n          }\n          ref.callback(value, last);\n        }\n      }\n    }\n  }));\n  useIsomorphicLayoutEffect(() => {\n    isFirst.current = false;\n  }, []);\n  // update callback\n  ref.callback = callback;\n  return ref.facade;\n}","map":{"version":3,"names":["React","useIsomorphicLayoutEffect","useCallbackRef","initialValue","callback","skipInitialResolve","isFirst","useRef","ref","useState","value","facade","current","last"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-positioning/lib/utils/useCallbackRef.js"],"sourcesContent":["import * as React from 'react';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n/**\n * Creates a MutableRef with ref change callback. Is useful as React.useRef() doesn't notify you when its content\n * changes and mutating the .current property doesn't cause a re-render. An opt-out will be use a callback ref via\n * React.useState(), but it will cause re-renders always.\n *\n * https://reactjs.org/docs/hooks-reference.html#useref\n * https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n *\n * @param initialValue - initial ref value\n * @param callback - a callback to run when value changes\n * @param skipInitialResolve - a flag to skip an initial ref report\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n */ export function useCallbackRef(initialValue, callback, skipInitialResolve) {\n    const isFirst = React.useRef(true);\n    const [ref] = React.useState(()=>({\n            // value\n            value: initialValue,\n            // last callback\n            callback,\n            // \"memoized\" public interface\n            facade: {\n                get current () {\n                    return ref.value;\n                },\n                set current (value){\n                    const last = ref.value;\n                    if (last !== value) {\n                        ref.value = value;\n                        if (skipInitialResolve && isFirst.current) {\n                            return;\n                        }\n                        ref.callback(value, last);\n                    }\n                }\n            }\n        }));\n    useIsomorphicLayoutEffect(()=>{\n        isFirst.current = false;\n    }, []);\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,yBAAyB,QAAQ,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,SAASC,cAAcA,CAACC,YAAY,EAAEC,QAAQ,EAAEC,kBAAkB,EAAE;EAC3E,MAAMC,OAAO,GAAGN,KAAK,CAACO,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACC,GAAG,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,OAAK;IAC1B;IACAC,KAAK,EAAEP,YAAY;IACnB;IACAC,QAAQ;IACR;IACAO,MAAM,EAAE;MACJ,IAAIC,OAAOA,CAAA,EAAI;QACX,OAAOJ,GAAG,CAACE,KAAK;MACpB,CAAC;MACD,IAAIE,OAAOA,CAAEF,KAAK,EAAC;QACf,MAAMG,IAAI,GAAGL,GAAG,CAACE,KAAK;QACtB,IAAIG,IAAI,KAAKH,KAAK,EAAE;UAChBF,GAAG,CAACE,KAAK,GAAGA,KAAK;UACjB,IAAIL,kBAAkB,IAAIC,OAAO,CAACM,OAAO,EAAE;YACvC;UACJ;UACAJ,GAAG,CAACJ,QAAQ,CAACM,KAAK,EAAEG,IAAI,CAAC;QAC7B;MACJ;IACJ;EACJ,CAAC,CAAC,CAAC;EACPZ,yBAAyB,CAAC,MAAI;IAC1BK,OAAO,CAACM,OAAO,GAAG,KAAK;EAC3B,CAAC,EAAE,EAAE,CAAC;EACN;EACAJ,GAAG,CAACJ,QAAQ,GAAGA,QAAQ;EACvB,OAAOI,GAAG,CAACG,MAAM;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}