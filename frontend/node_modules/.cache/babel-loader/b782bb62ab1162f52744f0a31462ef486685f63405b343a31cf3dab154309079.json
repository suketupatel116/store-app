{"ast":null,"code":"import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useId, useMergedRefs } from '@fluentui/react-utilities';\nimport { useSliderState_unstable } from './useSliderState';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nexport const useSlider_unstable = (props, ref) => {\n  // Merge props from surrounding <Field>, if any\n  props = useFieldControlProps_unstable(props, {\n    supportsLabelFor: true\n  });\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['onChange', 'size']\n  });\n  const {\n    disabled,\n    vertical,\n    size = 'medium',\n    // Slots\n    root,\n    input,\n    rail,\n    thumb\n  } = props;\n  const state = {\n    disabled,\n    size,\n    vertical,\n    components: {\n      input: 'input',\n      rail: 'div',\n      root: 'div',\n      thumb: 'div'\n    },\n    root: resolveShorthand(root, {\n      required: true,\n      defaultProps: nativeProps.root\n    }),\n    input: resolveShorthand(input, {\n      required: true,\n      defaultProps: {\n        id: useId('slider-', props.id),\n        ref,\n        ...nativeProps.primary,\n        type: 'range',\n        orient: vertical ? 'vertical' : undefined\n      }\n    }),\n    rail: resolveShorthand(rail, {\n      required: true\n    }),\n    thumb: resolveShorthand(thumb, {\n      required: true\n    })\n  };\n  state.root.ref = useMergedRefs(state.root.ref, useFocusWithin());\n  useSliderState_unstable(state, props);\n  return state;\n};","map":{"version":3,"names":["React","useFieldControlProps_unstable","getPartitionedNativeProps","resolveShorthand","useId","useMergedRefs","useSliderState_unstable","useFocusWithin","useSlider_unstable","props","ref","supportsLabelFor","nativeProps","primarySlotTagName","excludedPropNames","disabled","vertical","size","root","input","rail","thumb","state","components","required","defaultProps","id","primary","type","orient","undefined"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-slider/lib/components/Slider/useSlider.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useId, useMergedRefs } from '@fluentui/react-utilities';\nimport { useSliderState_unstable } from './useSliderState';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nexport const useSlider_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true\n    });\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'input',\n        excludedPropNames: [\n            'onChange',\n            'size'\n        ]\n    });\n    const { disabled , vertical , size ='medium' , // Slots\n    root , input , rail , thumb  } = props;\n    const state = {\n        disabled,\n        size,\n        vertical,\n        components: {\n            input: 'input',\n            rail: 'div',\n            root: 'div',\n            thumb: 'div'\n        },\n        root: resolveShorthand(root, {\n            required: true,\n            defaultProps: nativeProps.root\n        }),\n        input: resolveShorthand(input, {\n            required: true,\n            defaultProps: {\n                id: useId('slider-', props.id),\n                ref,\n                ...nativeProps.primary,\n                type: 'range',\n                orient: vertical ? 'vertical' : undefined\n            }\n        }),\n        rail: resolveShorthand(rail, {\n            required: true\n        }),\n        thumb: resolveShorthand(thumb, {\n            required: true\n        })\n    };\n    state.root.ref = useMergedRefs(state.root.ref, useFocusWithin());\n    useSliderState_unstable(state, props);\n    return state;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,6BAA6B,QAAQ,uBAAuB;AACrE,SAASC,yBAAyB,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,aAAa,QAAQ,2BAA2B;AAC7G,SAASC,uBAAuB,QAAQ,kBAAkB;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EAC5C;EACAD,KAAK,GAAGR,6BAA6B,CAACQ,KAAK,EAAE;IACzCE,gBAAgB,EAAE;EACtB,CAAC,CAAC;EACF,MAAMC,WAAW,GAAGV,yBAAyB,CAAC;IAC1CO,KAAK;IACLI,kBAAkB,EAAE,OAAO;IAC3BC,iBAAiB,EAAE,CACf,UAAU,EACV,MAAM;EAEd,CAAC,CAAC;EACF,MAAM;IAAEC,QAAQ;IAAGC,QAAQ;IAAGC,IAAI,GAAE,QAAQ;IAAG;IAC/CC,IAAI;IAAGC,KAAK;IAAGC,IAAI;IAAGC;EAAO,CAAC,GAAGZ,KAAK;EACtC,MAAMa,KAAK,GAAG;IACVP,QAAQ;IACRE,IAAI;IACJD,QAAQ;IACRO,UAAU,EAAE;MACRJ,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,KAAK;MACXF,IAAI,EAAE,KAAK;MACXG,KAAK,EAAE;IACX,CAAC;IACDH,IAAI,EAAEf,gBAAgB,CAACe,IAAI,EAAE;MACzBM,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAEb,WAAW,CAACM;IAC9B,CAAC,CAAC;IACFC,KAAK,EAAEhB,gBAAgB,CAACgB,KAAK,EAAE;MAC3BK,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACVC,EAAE,EAAEtB,KAAK,CAAC,SAAS,EAAEK,KAAK,CAACiB,EAAE,CAAC;QAC9BhB,GAAG;QACH,GAAGE,WAAW,CAACe,OAAO;QACtBC,IAAI,EAAE,OAAO;QACbC,MAAM,EAAEb,QAAQ,GAAG,UAAU,GAAGc;MACpC;IACJ,CAAC,CAAC;IACFV,IAAI,EAAEjB,gBAAgB,CAACiB,IAAI,EAAE;MACzBI,QAAQ,EAAE;IACd,CAAC,CAAC;IACFH,KAAK,EAAElB,gBAAgB,CAACkB,KAAK,EAAE;MAC3BG,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDF,KAAK,CAACJ,IAAI,CAACR,GAAG,GAAGL,aAAa,CAACiB,KAAK,CAACJ,IAAI,CAACR,GAAG,EAAEH,cAAc,CAAC,CAAC,CAAC;EAChED,uBAAuB,CAACgB,KAAK,EAAEb,KAAK,CAAC;EACrC,OAAOa,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}