{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useEventCallback, useMergedRefs, isResolvedShorthand } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable } from '../../contexts';\nimport { Escape } from '@fluentui/keyboard-keys';\n/**\n * Create the state required to render DialogSurface.\n *\n * The returned state can be modified with hooks such as useDialogSurfaceStyles_unstable,\n * before being passed to renderDialogSurface_unstable.\n *\n * @param props - props from this instance of DialogSurface\n * @param ref - reference to root HTMLElement of DialogSurface\n */\nexport const useDialogSurface_unstable = (props, ref) => {\n  const modalType = useDialogContext_unstable(ctx => ctx.modalType);\n  const modalAttributes = useDialogContext_unstable(ctx => ctx.modalAttributes);\n  const dialogRef = useDialogContext_unstable(ctx => ctx.dialogRef);\n  const open = useDialogContext_unstable(ctx => ctx.open);\n  const requestOpenChange = useDialogContext_unstable(ctx => ctx.requestOpenChange);\n  const dialogTitleID = useDialogContext_unstable(ctx => ctx.dialogTitleId);\n  const handledBackdropClick = useEventCallback(event => {\n    if (isResolvedShorthand(props.backdrop)) {\n      var _props_backdrop, _props_backdrop_onClick;\n      (_props_backdrop_onClick = (_props_backdrop = props.backdrop).onClick) === null || _props_backdrop_onClick === void 0 ? void 0 : _props_backdrop_onClick.call(_props_backdrop, event);\n    }\n    if (modalType === 'modal' && !event.isDefaultPrevented()) {\n      requestOpenChange({\n        event,\n        open: false,\n        type: 'backdropClick'\n      });\n    }\n  });\n  const handleKeyDown = useEventCallback(event => {\n    var _props_onKeyDown;\n    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);\n    if (event.key === Escape && !event.isDefaultPrevented()) {\n      requestOpenChange({\n        event,\n        open: false,\n        type: 'escapeKeyDown'\n      });\n      // stop propagation to avoid conflicting with other elements that listen for `Escape`\n      // e,g: nested Dialog, Popover, Menu and Tooltip\n      event.stopPropagation();\n    }\n  });\n  const backdrop = resolveShorthand(props.backdrop, {\n    required: open && modalType !== 'non-modal',\n    defaultProps: {\n      'aria-hidden': 'true'\n    }\n  });\n  if (backdrop) {\n    backdrop.onClick = handledBackdropClick;\n  }\n  var _props_as;\n  return {\n    components: {\n      backdrop: 'div',\n      root: 'div'\n    },\n    backdrop,\n    root: getNativeElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : 'div', {\n      tabIndex: -1,\n      'aria-modal': modalType !== 'non-modal',\n      role: modalType === 'alert' ? 'alertdialog' : 'dialog',\n      'aria-labelledby': props['aria-label'] ? undefined : dialogTitleID,\n      ...props,\n      ...modalAttributes,\n      onKeyDown: handleKeyDown,\n      ref: useMergedRefs(ref, dialogRef)\n    })\n  };\n};","map":{"version":3,"names":["React","getNativeElementProps","resolveShorthand","useEventCallback","useMergedRefs","isResolvedShorthand","useDialogContext_unstable","Escape","useDialogSurface_unstable","props","ref","modalType","ctx","modalAttributes","dialogRef","open","requestOpenChange","dialogTitleID","dialogTitleId","handledBackdropClick","event","backdrop","_props_backdrop","_props_backdrop_onClick","onClick","call","isDefaultPrevented","type","handleKeyDown","_props_onKeyDown","onKeyDown","key","stopPropagation","required","defaultProps","_props_as","components","root","as","tabIndex","role","undefined"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurface.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useEventCallback, useMergedRefs, isResolvedShorthand } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable } from '../../contexts';\nimport { Escape } from '@fluentui/keyboard-keys';\n/**\n * Create the state required to render DialogSurface.\n *\n * The returned state can be modified with hooks such as useDialogSurfaceStyles_unstable,\n * before being passed to renderDialogSurface_unstable.\n *\n * @param props - props from this instance of DialogSurface\n * @param ref - reference to root HTMLElement of DialogSurface\n */ export const useDialogSurface_unstable = (props, ref)=>{\n    const modalType = useDialogContext_unstable((ctx)=>ctx.modalType);\n    const modalAttributes = useDialogContext_unstable((ctx)=>ctx.modalAttributes);\n    const dialogRef = useDialogContext_unstable((ctx)=>ctx.dialogRef);\n    const open = useDialogContext_unstable((ctx)=>ctx.open);\n    const requestOpenChange = useDialogContext_unstable((ctx)=>ctx.requestOpenChange);\n    const dialogTitleID = useDialogContext_unstable((ctx)=>ctx.dialogTitleId);\n    const handledBackdropClick = useEventCallback((event)=>{\n        if (isResolvedShorthand(props.backdrop)) {\n            var _props_backdrop, _props_backdrop_onClick;\n            (_props_backdrop_onClick = (_props_backdrop = props.backdrop).onClick) === null || _props_backdrop_onClick === void 0 ? void 0 : _props_backdrop_onClick.call(_props_backdrop, event);\n        }\n        if (modalType === 'modal' && !event.isDefaultPrevented()) {\n            requestOpenChange({\n                event,\n                open: false,\n                type: 'backdropClick'\n            });\n        }\n    });\n    const handleKeyDown = useEventCallback((event)=>{\n        var _props_onKeyDown;\n        (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);\n        if (event.key === Escape && !event.isDefaultPrevented()) {\n            requestOpenChange({\n                event,\n                open: false,\n                type: 'escapeKeyDown'\n            });\n            // stop propagation to avoid conflicting with other elements that listen for `Escape`\n            // e,g: nested Dialog, Popover, Menu and Tooltip\n            event.stopPropagation();\n        }\n    });\n    const backdrop = resolveShorthand(props.backdrop, {\n        required: open && modalType !== 'non-modal',\n        defaultProps: {\n            'aria-hidden': 'true'\n        }\n    });\n    if (backdrop) {\n        backdrop.onClick = handledBackdropClick;\n    }\n    var _props_as;\n    return {\n        components: {\n            backdrop: 'div',\n            root: 'div'\n        },\n        backdrop,\n        root: getNativeElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : 'div', {\n            tabIndex: -1,\n            'aria-modal': modalType !== 'non-modal',\n            role: modalType === 'alert' ? 'alertdialog' : 'dialog',\n            'aria-labelledby': props['aria-label'] ? undefined : dialogTitleID,\n            ...props,\n            ...modalAttributes,\n            onKeyDown: handleKeyDown,\n            ref: useMergedRefs(ref, dialogRef)\n        })\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}