{"ast":null,"code":"import { parseFloatingUIPlacement } from './parseFloatingUIPlacement';\nconst getPositionMap = () => ({\n  top: 'above',\n  bottom: 'below',\n  right: 'after',\n  left: 'before'\n});\n// Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\nconst getAlignmentMap = position => {\n  if (position === 'above' || position === 'below') {\n    return {\n      start: 'start',\n      end: 'end'\n    };\n  }\n  return {\n    start: 'top',\n    end: 'bottom'\n  };\n};\n/**\n * Maps Floating UI placement to positioning values\n * @see positioningHelper.test.ts for expected placement values\n */\nexport const fromFloatingUIPlacement = placement => {\n  const {\n    side,\n    alignment: floatingUIAlignment\n  } = parseFloatingUIPlacement(placement);\n  const position = getPositionMap()[side];\n  const alignment = floatingUIAlignment && getAlignmentMap(position)[floatingUIAlignment];\n  return {\n    position,\n    alignment\n  };\n};","map":{"version":3,"names":["parseFloatingUIPlacement","getPositionMap","top","bottom","right","left","getAlignmentMap","position","start","end","fromFloatingUIPlacement","placement","side","alignment","floatingUIAlignment"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-positioning/lib/utils/fromFloatingUIPlacement.js"],"sourcesContent":["import { parseFloatingUIPlacement } from './parseFloatingUIPlacement';\nconst getPositionMap = ()=>({\n        top: 'above',\n        bottom: 'below',\n        right: 'after',\n        left: 'before'\n    });\n// Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\nconst getAlignmentMap = (position)=>{\n    if (position === 'above' || position === 'below') {\n        return {\n            start: 'start',\n            end: 'end'\n        };\n    }\n    return {\n        start: 'top',\n        end: 'bottom'\n    };\n};\n/**\n * Maps Floating UI placement to positioning values\n * @see positioningHelper.test.ts for expected placement values\n */ export const fromFloatingUIPlacement = (placement)=>{\n    const { side , alignment: floatingUIAlignment  } = parseFloatingUIPlacement(placement);\n    const position = getPositionMap()[side];\n    const alignment = floatingUIAlignment && getAlignmentMap(position)[floatingUIAlignment];\n    return {\n        position,\n        alignment\n    };\n};\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,4BAA4B;AACrE,MAAMC,cAAc,GAAGA,CAAA,MAAK;EACpBC,GAAG,EAAE,OAAO;EACZC,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACV,CAAC,CAAC;AACN;AACA;AACA,MAAMC,eAAe,GAAIC,QAAQ,IAAG;EAChC,IAAIA,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,OAAO,EAAE;IAC9C,OAAO;MACHC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE;IACT,CAAC;EACL;EACA,OAAO;IACHD,KAAK,EAAE,KAAK;IACZC,GAAG,EAAE;EACT,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AAAI,OAAO,MAAMC,uBAAuB,GAAIC,SAAS,IAAG;EACpD,MAAM;IAAEC,IAAI;IAAGC,SAAS,EAAEC;EAAqB,CAAC,GAAGd,wBAAwB,CAACW,SAAS,CAAC;EACtF,MAAMJ,QAAQ,GAAGN,cAAc,CAAC,CAAC,CAACW,IAAI,CAAC;EACvC,MAAMC,SAAS,GAAGC,mBAAmB,IAAIR,eAAe,CAACC,QAAQ,CAAC,CAACO,mBAAmB,CAAC;EACvF,OAAO;IACHP,QAAQ;IACRM;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}