{"ast":null,"code":"import { useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { fluentProviderClassNames } from './useFluentProviderStyles.styles';\n// String concatenation is used to prevent bundlers to complain with older versions of React\nconst useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useIsomorphicLayoutEffect;\nconst createStyleTag = (target, elementAttributes) => {\n  if (!target) {\n    return undefined;\n  }\n  const tag = target.createElement('style');\n  Object.keys(elementAttributes).forEach(attrName => {\n    tag.setAttribute(attrName, elementAttributes[attrName]);\n  });\n  target.head.appendChild(tag);\n  return tag;\n};\nconst insertSheet = (tag, rule) => {\n  const sheet = tag.sheet;\n  if (sheet) {\n    if (sheet.cssRules.length > 0) {\n      sheet.deleteRule(0);\n    }\n    sheet.insertRule(rule, 0);\n  } else if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.error('FluentProvider: No sheet available on styleTag, styles will not be inserted into DOM.');\n  }\n};\n/**\n * Writes a theme as css variables in a style tag on the provided targetDocument as a rule applied to a CSS class\n * @internal\n * @returns CSS class to apply the rule\n */\nexport const useFluentProviderThemeStyleTag = options => {\n  const {\n    targetDocument,\n    theme,\n    rendererAttributes\n  } = options;\n  const styleTag = React.useRef();\n  const styleTagId = useId(fluentProviderClassNames.root);\n  const styleElementAttributes = rendererAttributes;\n  const cssVarsAsString = React.useMemo(() => {\n    return theme ? Object.keys(theme).reduce((cssVarRule, cssVar) => {\n      cssVarRule += `--${cssVar}: ${theme[cssVar]}; `;\n      return cssVarRule;\n    }, '') : '';\n  }, [theme]);\n  const rule = `.${styleTagId} { ${cssVarsAsString} }`;\n  useHandleSSRStyleElements(targetDocument, styleTagId);\n  useInsertionEffect(() => {\n    // The style element could already have been created during SSR - no need to recreate it\n    const ssrStyleElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(styleTagId);\n    if (ssrStyleElement) {\n      styleTag.current = ssrStyleElement;\n    } else {\n      styleTag.current = createStyleTag(targetDocument, {\n        ...styleElementAttributes,\n        id: styleTagId\n      });\n      if (styleTag.current) {\n        insertSheet(styleTag.current, rule);\n      }\n    }\n    return () => {\n      var _styleTag_current;\n      (_styleTag_current = styleTag.current) === null || _styleTag_current === void 0 ? void 0 : _styleTag_current.remove();\n    };\n  }, [styleTagId, targetDocument, rule, styleElementAttributes]);\n  return {\n    styleTagId,\n    rule\n  };\n};\nfunction useHandleSSRStyleElements(targetDocument, styleTagId) {\n  // Using a state factory so that this logic only runs once per render\n  // Each FluentProvider can create its own style element during SSR as a slot\n  // Moves all theme style elements to document head during render to avoid hydration errors.\n  // Should be strict mode safe since the logic is idempotent.\n  React.useState(() => {\n    if (!targetDocument) {\n      return;\n    }\n    const themeStyleElement = targetDocument.getElementById(styleTagId);\n    if (themeStyleElement) {\n      targetDocument.head.append(themeStyleElement);\n    }\n  });\n}","map":{"version":3,"names":["useId","useIsomorphicLayoutEffect","React","fluentProviderClassNames","useInsertionEffect","createStyleTag","target","elementAttributes","undefined","tag","createElement","Object","keys","forEach","attrName","setAttribute","head","appendChild","insertSheet","rule","sheet","cssRules","length","deleteRule","insertRule","process","env","NODE_ENV","console","error","useFluentProviderThemeStyleTag","options","targetDocument","theme","rendererAttributes","styleTag","useRef","styleTagId","root","styleElementAttributes","cssVarsAsString","useMemo","reduce","cssVarRule","cssVar","useHandleSSRStyleElements","ssrStyleElement","getElementById","current","id","_styleTag_current","remove","useState","themeStyleElement","append"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js"],"sourcesContent":["import { useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { fluentProviderClassNames } from './useFluentProviderStyles.styles';\n// String concatenation is used to prevent bundlers to complain with older versions of React\nconst useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useIsomorphicLayoutEffect;\nconst createStyleTag = (target, elementAttributes)=>{\n    if (!target) {\n        return undefined;\n    }\n    const tag = target.createElement('style');\n    Object.keys(elementAttributes).forEach((attrName)=>{\n        tag.setAttribute(attrName, elementAttributes[attrName]);\n    });\n    target.head.appendChild(tag);\n    return tag;\n};\nconst insertSheet = (tag, rule)=>{\n    const sheet = tag.sheet;\n    if (sheet) {\n        if (sheet.cssRules.length > 0) {\n            sheet.deleteRule(0);\n        }\n        sheet.insertRule(rule, 0);\n    } else if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.error('FluentProvider: No sheet available on styleTag, styles will not be inserted into DOM.');\n    }\n};\n/**\n * Writes a theme as css variables in a style tag on the provided targetDocument as a rule applied to a CSS class\n * @internal\n * @returns CSS class to apply the rule\n */ export const useFluentProviderThemeStyleTag = (options)=>{\n    const { targetDocument , theme , rendererAttributes  } = options;\n    const styleTag = React.useRef();\n    const styleTagId = useId(fluentProviderClassNames.root);\n    const styleElementAttributes = rendererAttributes;\n    const cssVarsAsString = React.useMemo(()=>{\n        return theme ? Object.keys(theme).reduce((cssVarRule, cssVar)=>{\n            cssVarRule += `--${cssVar}: ${theme[cssVar]}; `;\n            return cssVarRule;\n        }, '') : '';\n    }, [\n        theme\n    ]);\n    const rule = `.${styleTagId} { ${cssVarsAsString} }`;\n    useHandleSSRStyleElements(targetDocument, styleTagId);\n    useInsertionEffect(()=>{\n        // The style element could already have been created during SSR - no need to recreate it\n        const ssrStyleElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(styleTagId);\n        if (ssrStyleElement) {\n            styleTag.current = ssrStyleElement;\n        } else {\n            styleTag.current = createStyleTag(targetDocument, {\n                ...styleElementAttributes,\n                id: styleTagId\n            });\n            if (styleTag.current) {\n                insertSheet(styleTag.current, rule);\n            }\n        }\n        return ()=>{\n            var _styleTag_current;\n            (_styleTag_current = styleTag.current) === null || _styleTag_current === void 0 ? void 0 : _styleTag_current.remove();\n        };\n    }, [\n        styleTagId,\n        targetDocument,\n        rule,\n        styleElementAttributes\n    ]);\n    return {\n        styleTagId,\n        rule\n    };\n};\nfunction useHandleSSRStyleElements(targetDocument, styleTagId) {\n    // Using a state factory so that this logic only runs once per render\n    // Each FluentProvider can create its own style element during SSR as a slot\n    // Moves all theme style elements to document head during render to avoid hydration errors.\n    // Should be strict mode safe since the logic is idempotent.\n    React.useState(()=>{\n        if (!targetDocument) {\n            return;\n        }\n        const themeStyleElement = targetDocument.getElementById(styleTagId);\n        if (themeStyleElement) {\n            targetDocument.head.append(themeStyleElement);\n        }\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}