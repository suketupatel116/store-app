{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps, useMergedRefs } from '@fluentui/react-utilities';\nimport { useModalAttributes } from '@fluentui/react-tabster';\nimport { usePopoverContext_unstable } from '../../popoverContext';\n/**\n * Create the state required to render PopoverSurface.\n *\n * The returned state can be modified with hooks such as usePopoverSurfaceStyles_unstable,\n * before being passed to renderPopoverSurface_unstable.\n *\n * @param props - props from this instance of PopoverSurface\n * @param ref - reference to root HTMLDivElement of PopoverSurface\n */\nexport const usePopoverSurface_unstable = (props, ref) => {\n  const contentRef = usePopoverContext_unstable(context => context.contentRef);\n  const openOnHover = usePopoverContext_unstable(context => context.openOnHover);\n  const setOpen = usePopoverContext_unstable(context => context.setOpen);\n  const mountNode = usePopoverContext_unstable(context => context.mountNode);\n  const arrowRef = usePopoverContext_unstable(context => context.arrowRef);\n  const size = usePopoverContext_unstable(context => context.size);\n  const withArrow = usePopoverContext_unstable(context => context.withArrow);\n  const appearance = usePopoverContext_unstable(context => context.appearance);\n  const trapFocus = usePopoverContext_unstable(context => context.trapFocus);\n  const inertTrapFocus = usePopoverContext_unstable(context => context.inertTrapFocus);\n  const inline = usePopoverContext_unstable(context => context.inline);\n  const {\n    modalAttributes\n  } = useModalAttributes({\n    trapFocus,\n    legacyTrapFocus: !inertTrapFocus,\n    alwaysFocusable: !trapFocus\n  });\n  const state = {\n    inline,\n    appearance,\n    withArrow,\n    size,\n    arrowRef,\n    mountNode,\n    components: {\n      root: 'div'\n    },\n    root: getNativeElementProps('div', {\n      ref: useMergedRefs(ref, contentRef),\n      role: trapFocus ? 'dialog' : 'group',\n      'aria-modal': trapFocus ? true : undefined,\n      ...modalAttributes,\n      ...props\n    })\n  };\n  const {\n    onMouseEnter: onMouseEnterOriginal,\n    onMouseLeave: onMouseLeaveOriginal,\n    onKeyDown: onKeyDownOriginal\n  } = state.root;\n  state.root.onMouseEnter = e => {\n    if (openOnHover) {\n      setOpen(e, true);\n    }\n    onMouseEnterOriginal === null || onMouseEnterOriginal === void 0 ? void 0 : onMouseEnterOriginal(e);\n  };\n  state.root.onMouseLeave = e => {\n    if (openOnHover) {\n      setOpen(e, false);\n    }\n    onMouseLeaveOriginal === null || onMouseLeaveOriginal === void 0 ? void 0 : onMouseLeaveOriginal(e);\n  };\n  state.root.onKeyDown = e => {\n    var _contentRef_current;\n    // only close if the event happened inside the current popover\n    // If using a stack of inline popovers, the user should call `stopPropagation` to avoid dismissing the entire stack\n    if (e.key === 'Escape' && ((_contentRef_current = contentRef.current) === null || _contentRef_current === void 0 ? void 0 : _contentRef_current.contains(e.target))) {\n      e.preventDefault();\n      setOpen(e, false);\n    }\n    onKeyDownOriginal === null || onKeyDownOriginal === void 0 ? void 0 : onKeyDownOriginal(e);\n  };\n  return state;\n};","map":{"version":3,"names":["React","getNativeElementProps","useMergedRefs","useModalAttributes","usePopoverContext_unstable","usePopoverSurface_unstable","props","ref","contentRef","context","openOnHover","setOpen","mountNode","arrowRef","size","withArrow","appearance","trapFocus","inertTrapFocus","inline","modalAttributes","legacyTrapFocus","alwaysFocusable","state","components","root","role","undefined","onMouseEnter","onMouseEnterOriginal","onMouseLeave","onMouseLeaveOriginal","onKeyDown","onKeyDownOriginal","e","_contentRef_current","key","current","contains","target","preventDefault"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-popover/lib/components/PopoverSurface/usePopoverSurface.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useMergedRefs } from '@fluentui/react-utilities';\nimport { useModalAttributes } from '@fluentui/react-tabster';\nimport { usePopoverContext_unstable } from '../../popoverContext';\n/**\n * Create the state required to render PopoverSurface.\n *\n * The returned state can be modified with hooks such as usePopoverSurfaceStyles_unstable,\n * before being passed to renderPopoverSurface_unstable.\n *\n * @param props - props from this instance of PopoverSurface\n * @param ref - reference to root HTMLDivElement of PopoverSurface\n */ export const usePopoverSurface_unstable = (props, ref)=>{\n    const contentRef = usePopoverContext_unstable((context)=>context.contentRef);\n    const openOnHover = usePopoverContext_unstable((context)=>context.openOnHover);\n    const setOpen = usePopoverContext_unstable((context)=>context.setOpen);\n    const mountNode = usePopoverContext_unstable((context)=>context.mountNode);\n    const arrowRef = usePopoverContext_unstable((context)=>context.arrowRef);\n    const size = usePopoverContext_unstable((context)=>context.size);\n    const withArrow = usePopoverContext_unstable((context)=>context.withArrow);\n    const appearance = usePopoverContext_unstable((context)=>context.appearance);\n    const trapFocus = usePopoverContext_unstable((context)=>context.trapFocus);\n    const inertTrapFocus = usePopoverContext_unstable((context)=>context.inertTrapFocus);\n    const inline = usePopoverContext_unstable((context)=>context.inline);\n    const { modalAttributes  } = useModalAttributes({\n        trapFocus,\n        legacyTrapFocus: !inertTrapFocus,\n        alwaysFocusable: !trapFocus\n    });\n    const state = {\n        inline,\n        appearance,\n        withArrow,\n        size,\n        arrowRef,\n        mountNode,\n        components: {\n            root: 'div'\n        },\n        root: getNativeElementProps('div', {\n            ref: useMergedRefs(ref, contentRef),\n            role: trapFocus ? 'dialog' : 'group',\n            'aria-modal': trapFocus ? true : undefined,\n            ...modalAttributes,\n            ...props\n        })\n    };\n    const { onMouseEnter: onMouseEnterOriginal , onMouseLeave: onMouseLeaveOriginal , onKeyDown: onKeyDownOriginal  } = state.root;\n    state.root.onMouseEnter = (e)=>{\n        if (openOnHover) {\n            setOpen(e, true);\n        }\n        onMouseEnterOriginal === null || onMouseEnterOriginal === void 0 ? void 0 : onMouseEnterOriginal(e);\n    };\n    state.root.onMouseLeave = (e)=>{\n        if (openOnHover) {\n            setOpen(e, false);\n        }\n        onMouseLeaveOriginal === null || onMouseLeaveOriginal === void 0 ? void 0 : onMouseLeaveOriginal(e);\n    };\n    state.root.onKeyDown = (e)=>{\n        var _contentRef_current;\n        // only close if the event happened inside the current popover\n        // If using a stack of inline popovers, the user should call `stopPropagation` to avoid dismissing the entire stack\n        if (e.key === 'Escape' && ((_contentRef_current = contentRef.current) === null || _contentRef_current === void 0 ? void 0 : _contentRef_current.contains(e.target))) {\n            e.preventDefault();\n            setOpen(e, false);\n        }\n        onKeyDownOriginal === null || onKeyDownOriginal === void 0 ? void 0 : onKeyDownOriginal(e);\n    };\n    return state;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}