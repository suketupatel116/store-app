{"ast":null,"code":"const getPositionMap = rtl => ({\n  above: 'top',\n  below: 'bottom',\n  before: rtl ? 'right' : 'left',\n  after: rtl ? 'left' : 'right'\n});\n// Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\nconst getAlignmentMap = () => ({\n  start: 'start',\n  end: 'end',\n  top: 'start',\n  bottom: 'end',\n  center: undefined\n});\nconst shouldAlignToCenter = (p, a) => {\n  const positionedVertically = p === 'above' || p === 'below';\n  const alignedVertically = a === 'top' || a === 'bottom';\n  return positionedVertically && alignedVertically || !positionedVertically && !alignedVertically;\n};\n/**\n * Maps internal positioning values to Floating UI placement\n * @see positioningHelper.test.ts for expected placement values\n */\nexport const toFloatingUIPlacement = (align, position, rtl) => {\n  const alignment = shouldAlignToCenter(position, align) ? 'center' : align;\n  const computedPosition = position && getPositionMap(rtl)[position];\n  const computedAlignment = alignment && getAlignmentMap()[alignment];\n  if (computedPosition && computedAlignment) {\n    return `${computedPosition}-${computedAlignment}`;\n  }\n  return computedPosition;\n};","map":{"version":3,"names":["getPositionMap","rtl","above","below","before","after","getAlignmentMap","start","end","top","bottom","center","undefined","shouldAlignToCenter","p","a","positionedVertically","alignedVertically","toFloatingUIPlacement","align","position","alignment","computedPosition","computedAlignment"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-positioning/lib/utils/toFloatingUIPlacement.js"],"sourcesContent":["const getPositionMap = (rtl)=>({\n        above: 'top',\n        below: 'bottom',\n        before: rtl ? 'right' : 'left',\n        after: rtl ? 'left' : 'right'\n    });\n// Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\nconst getAlignmentMap = ()=>({\n        start: 'start',\n        end: 'end',\n        top: 'start',\n        bottom: 'end',\n        center: undefined\n    });\nconst shouldAlignToCenter = (p, a)=>{\n    const positionedVertically = p === 'above' || p === 'below';\n    const alignedVertically = a === 'top' || a === 'bottom';\n    return positionedVertically && alignedVertically || !positionedVertically && !alignedVertically;\n};\n/**\n * Maps internal positioning values to Floating UI placement\n * @see positioningHelper.test.ts for expected placement values\n */ export const toFloatingUIPlacement = (align, position, rtl)=>{\n    const alignment = shouldAlignToCenter(position, align) ? 'center' : align;\n    const computedPosition = position && getPositionMap(rtl)[position];\n    const computedAlignment = alignment && getAlignmentMap()[alignment];\n    if (computedPosition && computedAlignment) {\n        return `${computedPosition}-${computedAlignment}`;\n    }\n    return computedPosition;\n};\n"],"mappings":"AAAA,MAAMA,cAAc,GAAIC,GAAG,KAAI;EACvBC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAEH,GAAG,GAAG,OAAO,GAAG,MAAM;EAC9BI,KAAK,EAAEJ,GAAG,GAAG,MAAM,GAAG;AAC1B,CAAC,CAAC;AACN;AACA;AACA,MAAMK,eAAe,GAAGA,CAAA,MAAK;EACrBC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,OAAO;EACZC,MAAM,EAAE,KAAK;EACbC,MAAM,EAAEC;AACZ,CAAC,CAAC;AACN,MAAMC,mBAAmB,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAG;EAChC,MAAMC,oBAAoB,GAAGF,CAAC,KAAK,OAAO,IAAIA,CAAC,KAAK,OAAO;EAC3D,MAAMG,iBAAiB,GAAGF,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,QAAQ;EACvD,OAAOC,oBAAoB,IAAIC,iBAAiB,IAAI,CAACD,oBAAoB,IAAI,CAACC,iBAAiB;AACnG,CAAC;AACD;AACA;AACA;AACA;AAAI,OAAO,MAAMC,qBAAqB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEnB,GAAG,KAAG;EAC7D,MAAMoB,SAAS,GAAGR,mBAAmB,CAACO,QAAQ,EAAED,KAAK,CAAC,GAAG,QAAQ,GAAGA,KAAK;EACzE,MAAMG,gBAAgB,GAAGF,QAAQ,IAAIpB,cAAc,CAACC,GAAG,CAAC,CAACmB,QAAQ,CAAC;EAClE,MAAMG,iBAAiB,GAAGF,SAAS,IAAIf,eAAe,CAAC,CAAC,CAACe,SAAS,CAAC;EACnE,IAAIC,gBAAgB,IAAIC,iBAAiB,EAAE;IACvC,OAAQ,GAAED,gBAAiB,IAAGC,iBAAkB,EAAC;EACrD;EACA,OAAOD,gBAAgB;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}