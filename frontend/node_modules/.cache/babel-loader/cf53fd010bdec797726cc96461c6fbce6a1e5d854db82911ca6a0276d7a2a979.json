{"ast":null,"code":"import { shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\n/**\n * @internal\n * Helper that creates a makeStyles rule for an arrow element.\n * For runtime arrow size toggling simply create extra classnames to apply to the arrow element\n *\n * ```ts\n *   makeStyles({\n *     arrowWithSize: createArrowStyles({ arrowHeight: 6 }),\n *\n *     arrowWithoutSize: createArrowStyles({ arrowHeight: undefined }),\n *     mediumArrow: createArrowHeightStyles(4),\n *     smallArrow: createArrowHeightStyles(2),\n *   })\n *   ...\n *\n *   state.arrowWithSize.className = styles.arrowWithSize;\n *   state.arrowWithoutSize.className = mergeClasses(\n *     styles.arrowWithoutSize,\n *     state.smallArrow && styles.smallArrow,\n *     state.mediumArrow && styles.mediumArrow,\n *   )\n * ```\n */\nexport function createArrowStyles(options) {\n  const {\n    arrowHeight,\n    borderWidth = '1px',\n    borderStyle = 'solid',\n    borderColor = tokens.colorTransparentStroke\n  } = options;\n  return {\n    position: 'absolute',\n    backgroundColor: 'inherit',\n    visibility: 'hidden',\n    zIndex: -1,\n    ...(arrowHeight && createArrowHeightStyles(arrowHeight)),\n    '::before': {\n      content: '\"\"',\n      visibility: 'visible',\n      position: 'absolute',\n      boxSizing: 'border-box',\n      width: 'inherit',\n      height: 'inherit',\n      backgroundColor: 'inherit',\n      ...shorthands.borderRight(`${borderWidth} /* @noflip */`, `${borderStyle} /* @noflip */`, `${borderColor} /* @noflip */`),\n      ...shorthands.borderBottom(borderWidth, borderStyle, borderColor),\n      borderBottomRightRadius: tokens.borderRadiusSmall,\n      transform: 'rotate(var(--angle)) translate(0, 50%) rotate(45deg)'\n    },\n    // Popper sets data-popper-placement on the root element, which is used to align the arrow\n    ':global([data-popper-placement^=\"top\"])': {\n      bottom: `-${borderWidth}`,\n      '--angle': '0'\n    },\n    ':global([data-popper-placement^=\"right\"])': {\n      left: `-${borderWidth} /* @noflip */`,\n      '--angle': '90deg'\n    },\n    ':global([data-popper-placement^=\"bottom\"])': {\n      top: `-${borderWidth}`,\n      '--angle': '180deg'\n    },\n    ':global([data-popper-placement^=\"left\"])': {\n      right: `-${borderWidth} /* @noflip */`,\n      '--angle': '270deg'\n    }\n  };\n}\n/**\n * @internal\n * Creates CSS styles to size the arrow created by createArrowStyles to the given height.\n *\n * Use this when you need to create classes for several different arrow sizes. If you only need a\n * constant arrow size, you can pass the `arrowHeight` param to createArrowStyles instead.\n */\nexport function createArrowHeightStyles(arrowHeight) {\n  // The arrow is a square rotated 45 degrees to have its bottom and right edges form a right triangle.\n  // Multiply the triangle's height by sqrt(2) to get length of its edges.\n  const edgeLength = `${1.414 * arrowHeight}px`;\n  return {\n    width: edgeLength,\n    height: edgeLength\n  };\n}","map":{"version":3,"names":["shorthands","tokens","createArrowStyles","options","arrowHeight","borderWidth","borderStyle","borderColor","colorTransparentStroke","position","backgroundColor","visibility","zIndex","createArrowHeightStyles","content","boxSizing","width","height","borderRight","borderBottom","borderBottomRightRadius","borderRadiusSmall","transform","bottom","left","top","right","edgeLength"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-positioning/lib/createArrowStyles.js"],"sourcesContent":["import { shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\n/**\n * @internal\n * Helper that creates a makeStyles rule for an arrow element.\n * For runtime arrow size toggling simply create extra classnames to apply to the arrow element\n *\n * ```ts\n *   makeStyles({\n *     arrowWithSize: createArrowStyles({ arrowHeight: 6 }),\n *\n *     arrowWithoutSize: createArrowStyles({ arrowHeight: undefined }),\n *     mediumArrow: createArrowHeightStyles(4),\n *     smallArrow: createArrowHeightStyles(2),\n *   })\n *   ...\n *\n *   state.arrowWithSize.className = styles.arrowWithSize;\n *   state.arrowWithoutSize.className = mergeClasses(\n *     styles.arrowWithoutSize,\n *     state.smallArrow && styles.smallArrow,\n *     state.mediumArrow && styles.mediumArrow,\n *   )\n * ```\n */ export function createArrowStyles(options) {\n    const { arrowHeight , borderWidth ='1px' , borderStyle ='solid' , borderColor =tokens.colorTransparentStroke  } = options;\n    return {\n        position: 'absolute',\n        backgroundColor: 'inherit',\n        visibility: 'hidden',\n        zIndex: -1,\n        ...arrowHeight && createArrowHeightStyles(arrowHeight),\n        '::before': {\n            content: '\"\"',\n            visibility: 'visible',\n            position: 'absolute',\n            boxSizing: 'border-box',\n            width: 'inherit',\n            height: 'inherit',\n            backgroundColor: 'inherit',\n            ...shorthands.borderRight(`${borderWidth} /* @noflip */`, `${borderStyle} /* @noflip */`, `${borderColor} /* @noflip */`),\n            ...shorthands.borderBottom(borderWidth, borderStyle, borderColor),\n            borderBottomRightRadius: tokens.borderRadiusSmall,\n            transform: 'rotate(var(--angle)) translate(0, 50%) rotate(45deg)'\n        },\n        // Popper sets data-popper-placement on the root element, which is used to align the arrow\n        ':global([data-popper-placement^=\"top\"])': {\n            bottom: `-${borderWidth}`,\n            '--angle': '0'\n        },\n        ':global([data-popper-placement^=\"right\"])': {\n            left: `-${borderWidth} /* @noflip */`,\n            '--angle': '90deg'\n        },\n        ':global([data-popper-placement^=\"bottom\"])': {\n            top: `-${borderWidth}`,\n            '--angle': '180deg'\n        },\n        ':global([data-popper-placement^=\"left\"])': {\n            right: `-${borderWidth} /* @noflip */`,\n            '--angle': '270deg'\n        }\n    };\n}\n/**\n * @internal\n * Creates CSS styles to size the arrow created by createArrowStyles to the given height.\n *\n * Use this when you need to create classes for several different arrow sizes. If you only need a\n * constant arrow size, you can pass the `arrowHeight` param to createArrowStyles instead.\n */ export function createArrowHeightStyles(arrowHeight) {\n    // The arrow is a square rotated 45 degrees to have its bottom and right edges form a right triangle.\n    // Multiply the triangle's height by sqrt(2) to get length of its edges.\n    const edgeLength = `${1.414 * arrowHeight}px`;\n    return {\n        width: edgeLength,\n        height: edgeLength\n    };\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,MAAM,QAAQ,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAE;EAC3C,MAAM;IAAEC,WAAW;IAAGC,WAAW,GAAE,KAAK;IAAGC,WAAW,GAAE,OAAO;IAAGC,WAAW,GAAEN,MAAM,CAACO;EAAwB,CAAC,GAAGL,OAAO;EACzH,OAAO;IACHM,QAAQ,EAAE,UAAU;IACpBC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,CAAC,CAAC;IACV,IAAGR,WAAW,IAAIS,uBAAuB,CAACT,WAAW,CAAC;IACtD,UAAU,EAAE;MACRU,OAAO,EAAE,IAAI;MACbH,UAAU,EAAE,SAAS;MACrBF,QAAQ,EAAE,UAAU;MACpBM,SAAS,EAAE,YAAY;MACvBC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,SAAS;MACjBP,eAAe,EAAE,SAAS;MAC1B,GAAGV,UAAU,CAACkB,WAAW,CAAE,GAAEb,WAAY,gBAAe,EAAG,GAAEC,WAAY,gBAAe,EAAG,GAAEC,WAAY,gBAAe,CAAC;MACzH,GAAGP,UAAU,CAACmB,YAAY,CAACd,WAAW,EAAEC,WAAW,EAAEC,WAAW,CAAC;MACjEa,uBAAuB,EAAEnB,MAAM,CAACoB,iBAAiB;MACjDC,SAAS,EAAE;IACf,CAAC;IACD;IACA,yCAAyC,EAAE;MACvCC,MAAM,EAAG,IAAGlB,WAAY,EAAC;MACzB,SAAS,EAAE;IACf,CAAC;IACD,2CAA2C,EAAE;MACzCmB,IAAI,EAAG,IAAGnB,WAAY,gBAAe;MACrC,SAAS,EAAE;IACf,CAAC;IACD,4CAA4C,EAAE;MAC1CoB,GAAG,EAAG,IAAGpB,WAAY,EAAC;MACtB,SAAS,EAAE;IACf,CAAC;IACD,0CAA0C,EAAE;MACxCqB,KAAK,EAAG,IAAGrB,WAAY,gBAAe;MACtC,SAAS,EAAE;IACf;EACJ,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,SAASQ,uBAAuBA,CAACT,WAAW,EAAE;EACrD;EACA;EACA,MAAMuB,UAAU,GAAI,GAAE,KAAK,GAAGvB,WAAY,IAAG;EAC7C,OAAO;IACHY,KAAK,EAAEW,UAAU;IACjBV,MAAM,EAAEU;EACZ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}