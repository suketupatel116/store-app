{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps, isResolvedShorthand, resolveShorthand, useEventCallback } from '@fluentui/react-utilities';\nimport { useAccordionItemContext_unstable } from '../AccordionItem/index';\nimport { useARIAButtonShorthand } from '@fluentui/react-aria';\nimport { useAccordionContext_unstable } from '../Accordion/AccordionContext';\nimport { ChevronRightRegular } from '@fluentui/react-icons';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionHeader properties\n * @param ref - reference to root HTMLElement of AccordionHeader\n */\nexport const useAccordionHeader_unstable = (props, ref) => {\n  const {\n    as,\n    icon,\n    button,\n    expandIcon,\n    inline = false,\n    size = 'medium',\n    expandIconPosition = 'start'\n  } = props;\n  const {\n    onHeaderClick: onAccordionHeaderClick,\n    disabled,\n    open\n  } = useAccordionItemContext_unstable();\n  /**\n  * force disabled state on button if accordion isn't collapsible\n  * and this is the only item opened\n  */\n  const disabledFocusable = useAccordionContext_unstable(ctx => !ctx.collapsible && ctx.openItems.length === 1 && open);\n  const {\n    dir\n  } = useFluent();\n  // Calculate how to rotate the expand icon [>] (ChevronRightRegular)\n  let expandIconRotation;\n  if (expandIconPosition === 'end') {\n    // If expand icon is at the end, the chevron points up [^] when open, and down [v] when closed\n    expandIconRotation = open ? -90 : 90;\n  } else {\n    // Otherwise, the chevron points down [v] when open, and right [>] (or left [<] in RTL) when closed\n    expandIconRotation = open ? 90 : dir !== 'rtl' ? 0 : 180;\n  }\n  return {\n    disabled,\n    open,\n    size,\n    inline,\n    expandIconPosition,\n    components: {\n      root: 'div',\n      button: 'button',\n      expandIcon: 'span',\n      icon: 'div'\n    },\n    root: getNativeElementProps(as || 'div', {\n      ref,\n      ...props\n    }),\n    icon: resolveShorthand(icon),\n    expandIcon: resolveShorthand(expandIcon, {\n      required: true,\n      defaultProps: {\n        children: /*#__PURE__*/React.createElement(ChevronRightRegular, {\n          style: {\n            transform: `rotate(${expandIconRotation}deg)`\n          }\n        }),\n        'aria-hidden': true\n      }\n    }),\n    button: resolveShorthand({\n      ...useARIAButtonShorthand(button, {\n        required: true,\n        defaultProps: {\n          disabled,\n          disabledFocusable,\n          'aria-expanded': open,\n          type: 'button'\n        }\n      }),\n      onClick: useEventCallback(ev => {\n        if (isResolvedShorthand(button)) {\n          var _button_onClick;\n          (_button_onClick = button.onClick) === null || _button_onClick === void 0 ? void 0 : _button_onClick.call(button, ev);\n        }\n        if (!ev.defaultPrevented) {\n          onAccordionHeaderClick(ev);\n        }\n      })\n    }, {\n      required: true\n    })\n  };\n};","map":{"version":3,"names":["React","getNativeElementProps","isResolvedShorthand","resolveShorthand","useEventCallback","useAccordionItemContext_unstable","useARIAButtonShorthand","useAccordionContext_unstable","ChevronRightRegular","useFluent_unstable","useFluent","useAccordionHeader_unstable","props","ref","as","icon","button","expandIcon","inline","size","expandIconPosition","onHeaderClick","onAccordionHeaderClick","disabled","open","disabledFocusable","ctx","collapsible","openItems","length","dir","expandIconRotation","components","root","required","defaultProps","children","createElement","style","transform","type","onClick","ev","_button_onClick","call","defaultPrevented"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeader.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, isResolvedShorthand, resolveShorthand, useEventCallback } from '@fluentui/react-utilities';\nimport { useAccordionItemContext_unstable } from '../AccordionItem/index';\nimport { useARIAButtonShorthand } from '@fluentui/react-aria';\nimport { useAccordionContext_unstable } from '../Accordion/AccordionContext';\nimport { ChevronRightRegular } from '@fluentui/react-icons';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionHeader properties\n * @param ref - reference to root HTMLElement of AccordionHeader\n */ export const useAccordionHeader_unstable = (props, ref)=>{\n    const { as , icon , button , expandIcon , inline =false , size ='medium' , expandIconPosition ='start'  } = props;\n    const { onHeaderClick: onAccordionHeaderClick , disabled , open  } = useAccordionItemContext_unstable();\n    /**\n   * force disabled state on button if accordion isn't collapsible\n   * and this is the only item opened\n   */ const disabledFocusable = useAccordionContext_unstable((ctx)=>!ctx.collapsible && ctx.openItems.length === 1 && open);\n    const { dir  } = useFluent();\n    // Calculate how to rotate the expand icon [>] (ChevronRightRegular)\n    let expandIconRotation;\n    if (expandIconPosition === 'end') {\n        // If expand icon is at the end, the chevron points up [^] when open, and down [v] when closed\n        expandIconRotation = open ? -90 : 90;\n    } else {\n        // Otherwise, the chevron points down [v] when open, and right [>] (or left [<] in RTL) when closed\n        expandIconRotation = open ? 90 : dir !== 'rtl' ? 0 : 180;\n    }\n    return {\n        disabled,\n        open,\n        size,\n        inline,\n        expandIconPosition,\n        components: {\n            root: 'div',\n            button: 'button',\n            expandIcon: 'span',\n            icon: 'div'\n        },\n        root: getNativeElementProps(as || 'div', {\n            ref,\n            ...props\n        }),\n        icon: resolveShorthand(icon),\n        expandIcon: resolveShorthand(expandIcon, {\n            required: true,\n            defaultProps: {\n                children: /*#__PURE__*/ React.createElement(ChevronRightRegular, {\n                    style: {\n                        transform: `rotate(${expandIconRotation}deg)`\n                    }\n                }),\n                'aria-hidden': true\n            }\n        }),\n        button: resolveShorthand({\n            ...useARIAButtonShorthand(button, {\n                required: true,\n                defaultProps: {\n                    disabled,\n                    disabledFocusable,\n                    'aria-expanded': open,\n                    type: 'button'\n                }\n            }),\n            onClick: useEventCallback((ev)=>{\n                if (isResolvedShorthand(button)) {\n                    var _button_onClick;\n                    (_button_onClick = button.onClick) === null || _button_onClick === void 0 ? void 0 : _button_onClick.call(button, ev);\n                }\n                if (!ev.defaultPrevented) {\n                    onAccordionHeaderClick(ev);\n                }\n            })\n        }, {\n            required: true\n        })\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,2BAA2B;AAC1H,SAASC,gCAAgC,QAAQ,wBAAwB;AACzE,SAASC,sBAAsB,QAAQ,sBAAsB;AAC7D,SAASC,4BAA4B,QAAQ,+BAA+B;AAC5E,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,kBAAkB,IAAIC,SAAS,QAAQ,iCAAiC;AACjF;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,2BAA2B,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACzD,MAAM;IAAEC,EAAE;IAAGC,IAAI;IAAGC,MAAM;IAAGC,UAAU;IAAGC,MAAM,GAAE,KAAK;IAAGC,IAAI,GAAE,QAAQ;IAAGC,kBAAkB,GAAE;EAAS,CAAC,GAAGR,KAAK;EACjH,MAAM;IAAES,aAAa,EAAEC,sBAAsB;IAAGC,QAAQ;IAAGC;EAAM,CAAC,GAAGnB,gCAAgC,CAAC,CAAC;EACvG;AACJ;AACA;AACA;EAAM,MAAMoB,iBAAiB,GAAGlB,4BAA4B,CAAEmB,GAAG,IAAG,CAACA,GAAG,CAACC,WAAW,IAAID,GAAG,CAACE,SAAS,CAACC,MAAM,KAAK,CAAC,IAAIL,IAAI,CAAC;EACvH,MAAM;IAAEM;EAAK,CAAC,GAAGpB,SAAS,CAAC,CAAC;EAC5B;EACA,IAAIqB,kBAAkB;EACtB,IAAIX,kBAAkB,KAAK,KAAK,EAAE;IAC9B;IACAW,kBAAkB,GAAGP,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE;EACxC,CAAC,MAAM;IACH;IACAO,kBAAkB,GAAGP,IAAI,GAAG,EAAE,GAAGM,GAAG,KAAK,KAAK,GAAG,CAAC,GAAG,GAAG;EAC5D;EACA,OAAO;IACHP,QAAQ;IACRC,IAAI;IACJL,IAAI;IACJD,MAAM;IACNE,kBAAkB;IAClBY,UAAU,EAAE;MACRC,IAAI,EAAE,KAAK;MACXjB,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE,MAAM;MAClBF,IAAI,EAAE;IACV,CAAC;IACDkB,IAAI,EAAEhC,qBAAqB,CAACa,EAAE,IAAI,KAAK,EAAE;MACrCD,GAAG;MACH,GAAGD;IACP,CAAC,CAAC;IACFG,IAAI,EAAEZ,gBAAgB,CAACY,IAAI,CAAC;IAC5BE,UAAU,EAAEd,gBAAgB,CAACc,UAAU,EAAE;MACrCiB,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACVC,QAAQ,EAAE,aAAcpC,KAAK,CAACqC,aAAa,CAAC7B,mBAAmB,EAAE;UAC7D8B,KAAK,EAAE;YACHC,SAAS,EAAG,UAASR,kBAAmB;UAC5C;QACJ,CAAC,CAAC;QACF,aAAa,EAAE;MACnB;IACJ,CAAC,CAAC;IACFf,MAAM,EAAEb,gBAAgB,CAAC;MACrB,GAAGG,sBAAsB,CAACU,MAAM,EAAE;QAC9BkB,QAAQ,EAAE,IAAI;QACdC,YAAY,EAAE;UACVZ,QAAQ;UACRE,iBAAiB;UACjB,eAAe,EAAED,IAAI;UACrBgB,IAAI,EAAE;QACV;MACJ,CAAC,CAAC;MACFC,OAAO,EAAErC,gBAAgB,CAAEsC,EAAE,IAAG;QAC5B,IAAIxC,mBAAmB,CAACc,MAAM,CAAC,EAAE;UAC7B,IAAI2B,eAAe;UACnB,CAACA,eAAe,GAAG3B,MAAM,CAACyB,OAAO,MAAM,IAAI,IAAIE,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACC,IAAI,CAAC5B,MAAM,EAAE0B,EAAE,CAAC;QACzH;QACA,IAAI,CAACA,EAAE,CAACG,gBAAgB,EAAE;UACtBvB,sBAAsB,CAACoB,EAAE,CAAC;QAC9B;MACJ,CAAC;IACL,CAAC,EAAE;MACCR,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}