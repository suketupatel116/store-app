{"ast":null,"code":"/**\n * @param compare - comparison function for items\n * @returns Priority queue implemented with a min heap\n */export function createPriorityQueue(compare) {\n  const arr = [];\n  let size = 0;\n  const left = i => {\n    return 2 * i + 1;\n  };\n  const right = i => {\n    return 2 * i + 2;\n  };\n  const parent = i => {\n    return Math.floor((i - 1) / 2);\n  };\n  const swap = (a, b) => {\n    const tmp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = tmp;\n  };\n  const heapify = i => {\n    let smallest = i;\n    const l = left(i);\n    const r = right(i);\n    if (l < size && compare(arr[l], arr[smallest]) < 0) {\n      smallest = l;\n    }\n    if (r < size && compare(arr[r], arr[smallest]) < 0) {\n      smallest = r;\n    }\n    if (smallest !== i) {\n      swap(smallest, i);\n      heapify(smallest);\n    }\n  };\n  const dequeue = () => {\n    if (size === 0) {\n      throw new Error('Priority queue empty');\n    }\n    const res = arr[0];\n    arr[0] = arr[--size];\n    heapify(0);\n    return res;\n  };\n  const peek = () => {\n    if (size === 0) {\n      return null;\n    }\n    return arr[0];\n  };\n  const enqueue = item => {\n    arr[size++] = item;\n    let i = size - 1;\n    let p = parent(i);\n    while (i > 0 && compare(arr[p], arr[i]) > 0) {\n      swap(p, i);\n      i = p;\n      p = parent(i);\n    }\n  };\n  const contains = item => {\n    const index = arr.indexOf(item);\n    return index >= 0 && index < size;\n  };\n  const remove = item => {\n    const i = arr.indexOf(item);\n    if (i === -1 || i >= size) {\n      return;\n    }\n    arr[i] = arr[--size];\n    heapify(i);\n  };\n  const clear = () => {\n    size = 0;\n  };\n  const all = () => {\n    return arr.slice(0, size);\n  };\n  return {\n    all,\n    clear,\n    contains,\n    dequeue,\n    enqueue,\n    peek,\n    remove,\n    size: () => size\n  };\n}","map":{"version":3,"names":["createPriorityQueue","compare","arr","size","left","i","right","parent","Math","floor","swap","a","b","tmp","heapify","smallest","l","r","dequeue","Error","res","peek","enqueue","item","p","contains","index","indexOf","remove","clear","all","slice"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/priority-overflow/lib/priorityQueue.js"],"sourcesContent":["/**\n * @param compare - comparison function for items\n * @returns Priority queue implemented with a min heap\n */ export function createPriorityQueue(compare) {\n    const arr = [];\n    let size = 0;\n    const left = (i)=>{\n        return 2 * i + 1;\n    };\n    const right = (i)=>{\n        return 2 * i + 2;\n    };\n    const parent = (i)=>{\n        return Math.floor((i - 1) / 2);\n    };\n    const swap = (a, b)=>{\n        const tmp = arr[a];\n        arr[a] = arr[b];\n        arr[b] = tmp;\n    };\n    const heapify = (i)=>{\n        let smallest = i;\n        const l = left(i);\n        const r = right(i);\n        if (l < size && compare(arr[l], arr[smallest]) < 0) {\n            smallest = l;\n        }\n        if (r < size && compare(arr[r], arr[smallest]) < 0) {\n            smallest = r;\n        }\n        if (smallest !== i) {\n            swap(smallest, i);\n            heapify(smallest);\n        }\n    };\n    const dequeue = ()=>{\n        if (size === 0) {\n            throw new Error('Priority queue empty');\n        }\n        const res = arr[0];\n        arr[0] = arr[--size];\n        heapify(0);\n        return res;\n    };\n    const peek = ()=>{\n        if (size === 0) {\n            return null;\n        }\n        return arr[0];\n    };\n    const enqueue = (item)=>{\n        arr[size++] = item;\n        let i = size - 1;\n        let p = parent(i);\n        while(i > 0 && compare(arr[p], arr[i]) > 0){\n            swap(p, i);\n            i = p;\n            p = parent(i);\n        }\n    };\n    const contains = (item)=>{\n        const index = arr.indexOf(item);\n        return index >= 0 && index < size;\n    };\n    const remove = (item)=>{\n        const i = arr.indexOf(item);\n        if (i === -1 || i >= size) {\n            return;\n        }\n        arr[i] = arr[--size];\n        heapify(i);\n    };\n    const clear = ()=>{\n        size = 0;\n    };\n    const all = ()=>{\n        return arr.slice(0, size);\n    };\n    return {\n        all,\n        clear,\n        contains,\n        dequeue,\n        enqueue,\n        peek,\n        remove,\n        size: ()=>size\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}