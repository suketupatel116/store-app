{"ast":null,"code":"/**\n * Returns the parent node or the host of the node argument.\n * @param node - DOM node.\n * @returns - parent DOM node.\n */export const getParentNode = node => {\n  if (node.nodeName === 'HTML') {\n    return node;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return node.parentNode || node.host;\n};\n/**\n * Returns CSS styles of the given node.\n * @param node - DOM node.\n * @returns - CSS styles.\n */\nconst getStyleComputedProperty = node => {\n  var _node_ownerDocument;\n  if (node.nodeType !== 1) {\n    return {};\n  }\n  const window = (_node_ownerDocument = node.ownerDocument) === null || _node_ownerDocument === void 0 ? void 0 : _node_ownerDocument.defaultView;\n  return window.getComputedStyle(node, null);\n};\n/**\n * Returns the first scrollable parent of the given element.\n * @param node - DOM node.\n * @returns - the first scrollable parent.\n */\nexport const getScrollParent = node => {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  const parentNode = node && getParentNode(node);\n  // eslint-disable-next-line\n  if (!parentNode) return document.body;\n  switch (parentNode.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return parentNode.ownerDocument.body;\n    case '#document':\n      return parentNode.body;\n  }\n  // If any of the overflow props is defined for the node then we return it as the parent\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getStyleComputedProperty(parentNode);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return parentNode;\n  }\n  return getScrollParent(parentNode);\n};\nexport const hasScrollParent = node => {\n  var _scrollParentElement_ownerDocument;\n  const scrollParentElement = getScrollParent(node);\n  return scrollParentElement ? scrollParentElement !== ((_scrollParentElement_ownerDocument = scrollParentElement.ownerDocument) === null || _scrollParentElement_ownerDocument === void 0 ? void 0 : _scrollParentElement_ownerDocument.body) : false;\n};","map":{"version":3,"names":["getParentNode","node","nodeName","parentNode","host","getStyleComputedProperty","_node_ownerDocument","nodeType","window","ownerDocument","defaultView","getComputedStyle","getScrollParent","document","body","overflow","overflowX","overflowY","test","hasScrollParent","_scrollParentElement_ownerDocument","scrollParentElement"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-positioning/lib/utils/getScrollParent.js"],"sourcesContent":["/**\n * Returns the parent node or the host of the node argument.\n * @param node - DOM node.\n * @returns - parent DOM node.\n */ export const getParentNode = (node)=>{\n    if (node.nodeName === 'HTML') {\n        return node;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return node.parentNode || node.host;\n};\n/**\n * Returns CSS styles of the given node.\n * @param node - DOM node.\n * @returns - CSS styles.\n */ const getStyleComputedProperty = (node)=>{\n    var _node_ownerDocument;\n    if (node.nodeType !== 1) {\n        return {};\n    }\n    const window = (_node_ownerDocument = node.ownerDocument) === null || _node_ownerDocument === void 0 ? void 0 : _node_ownerDocument.defaultView;\n    return window.getComputedStyle(node, null);\n};\n/**\n * Returns the first scrollable parent of the given element.\n * @param node - DOM node.\n * @returns - the first scrollable parent.\n */ export const getScrollParent = (node)=>{\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    const parentNode = node && getParentNode(node);\n    // eslint-disable-next-line\n    if (!parentNode) return document.body;\n    switch(parentNode.nodeName){\n        case 'HTML':\n        case 'BODY':\n            return parentNode.ownerDocument.body;\n        case '#document':\n            return parentNode.body;\n    }\n    // If any of the overflow props is defined for the node then we return it as the parent\n    const { overflow , overflowX , overflowY  } = getStyleComputedProperty(parentNode);\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n        return parentNode;\n    }\n    return getScrollParent(parentNode);\n};\nexport const hasScrollParent = (node)=>{\n    var _scrollParentElement_ownerDocument;\n    const scrollParentElement = getScrollParent(node);\n    return scrollParentElement ? scrollParentElement !== ((_scrollParentElement_ownerDocument = scrollParentElement.ownerDocument) === null || _scrollParentElement_ownerDocument === void 0 ? void 0 : _scrollParentElement_ownerDocument.body) : false;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAAI,OAAO,MAAMA,aAAa,GAAIC,IAAI,IAAG;EACrC,IAAIA,IAAI,CAACC,QAAQ,KAAK,MAAM,EAAE;IAC1B,OAAOD,IAAI;EACf;EACA;EACA,OAAOA,IAAI,CAACE,UAAU,IAAIF,IAAI,CAACG,IAAI;AACvC,CAAC;AACD;AACA;AACA;AACA;AACA;AAAI,MAAMC,wBAAwB,GAAIJ,IAAI,IAAG;EACzC,IAAIK,mBAAmB;EACvB,IAAIL,IAAI,CAACM,QAAQ,KAAK,CAAC,EAAE;IACrB,OAAO,CAAC,CAAC;EACb;EACA,MAAMC,MAAM,GAAG,CAACF,mBAAmB,GAAGL,IAAI,CAACQ,aAAa,MAAM,IAAI,IAAIH,mBAAmB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,mBAAmB,CAACI,WAAW;EAC/I,OAAOF,MAAM,CAACG,gBAAgB,CAACV,IAAI,EAAE,IAAI,CAAC;AAC9C,CAAC;AACD;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMW,eAAe,GAAIX,IAAI,IAAG;EACvC;EACA,MAAME,UAAU,GAAGF,IAAI,IAAID,aAAa,CAACC,IAAI,CAAC;EAC9C;EACA,IAAI,CAACE,UAAU,EAAE,OAAOU,QAAQ,CAACC,IAAI;EACrC,QAAOX,UAAU,CAACD,QAAQ;IACtB,KAAK,MAAM;IACX,KAAK,MAAM;MACP,OAAOC,UAAU,CAACM,aAAa,CAACK,IAAI;IACxC,KAAK,WAAW;MACZ,OAAOX,UAAU,CAACW,IAAI;EAC9B;EACA;EACA,MAAM;IAAEC,QAAQ;IAAGC,SAAS;IAAGC;EAAW,CAAC,GAAGZ,wBAAwB,CAACF,UAAU,CAAC;EAClF,IAAI,uBAAuB,CAACe,IAAI,CAACH,QAAQ,GAAGE,SAAS,GAAGD,SAAS,CAAC,EAAE;IAChE,OAAOb,UAAU;EACrB;EACA,OAAOS,eAAe,CAACT,UAAU,CAAC;AACtC,CAAC;AACD,OAAO,MAAMgB,eAAe,GAAIlB,IAAI,IAAG;EACnC,IAAImB,kCAAkC;EACtC,MAAMC,mBAAmB,GAAGT,eAAe,CAACX,IAAI,CAAC;EACjD,OAAOoB,mBAAmB,GAAGA,mBAAmB,MAAM,CAACD,kCAAkC,GAAGC,mBAAmB,CAACZ,aAAa,MAAM,IAAI,IAAIW,kCAAkC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kCAAkC,CAACN,IAAI,CAAC,GAAG,KAAK;AACxP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}