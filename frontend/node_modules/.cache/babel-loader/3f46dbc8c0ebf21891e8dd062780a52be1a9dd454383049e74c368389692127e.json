{"ast":null,"code":"import { canUseDOM } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Provides a way of reporting element width.\n * Returns\n * `width` - current element width (0 by default),\n * `measureElementRef` - a ref function to be passed as `ref` to the element you want to measure\n */\nexport function useMeasureElement() {\n  const [width, setWidth] = React.useState(0);\n  const container = React.useRef(undefined);\n  const {\n    targetDocument\n  } = useFluent();\n  // the handler for resize observer\n  const handleResize = React.useCallback(() => {\n    var _container_current;\n    const containerWidth = (_container_current = container.current) === null || _container_current === void 0 ? void 0 : _container_current.getBoundingClientRect().width;\n    setWidth(containerWidth || 0);\n  }, []);\n  // Keep the reference of ResizeObserver in the state, as it should live through renders\n  const [resizeObserver] = React.useState(canUseDOM() ? new ResizeObserver(handleResize) : undefined);\n  const measureElementRef = React.useCallback(el => {\n    if (!targetDocument || !resizeObserver) {\n      return;\n    }\n    // cleanup previous container\n    if (container.current) {\n      resizeObserver.unobserve(container.current);\n      container.current.remove();\n    }\n    if (el) {\n      container.current = targetDocument.createElement('div');\n      el.insertAdjacentElement('beforebegin', container.current);\n      resizeObserver.observe(container.current);\n      handleResize();\n    }\n  }, [targetDocument, resizeObserver, handleResize]);\n  React.useEffect(() => {\n    return () => {\n      return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();\n    };\n  }, [resizeObserver]);\n  return {\n    width,\n    measureElementRef\n  };\n}","map":{"version":3,"names":["canUseDOM","React","useFluent_unstable","useFluent","useMeasureElement","width","setWidth","useState","container","useRef","undefined","targetDocument","handleResize","useCallback","_container_current","containerWidth","current","getBoundingClientRect","resizeObserver","ResizeObserver","measureElementRef","el","unobserve","remove","createElement","insertAdjacentElement","observe","useEffect","disconnect"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-table/lib/hooks/useMeasureElement.js"],"sourcesContent":["import { canUseDOM } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Provides a way of reporting element width.\n * Returns\n * `width` - current element width (0 by default),\n * `measureElementRef` - a ref function to be passed as `ref` to the element you want to measure\n */ export function useMeasureElement() {\n    const [width, setWidth] = React.useState(0);\n    const container = React.useRef(undefined);\n    const { targetDocument  } = useFluent();\n    // the handler for resize observer\n    const handleResize = React.useCallback(()=>{\n        var _container_current;\n        const containerWidth = (_container_current = container.current) === null || _container_current === void 0 ? void 0 : _container_current.getBoundingClientRect().width;\n        setWidth(containerWidth || 0);\n    }, []);\n    // Keep the reference of ResizeObserver in the state, as it should live through renders\n    const [resizeObserver] = React.useState(canUseDOM() ? new ResizeObserver(handleResize) : undefined);\n    const measureElementRef = React.useCallback((el)=>{\n        if (!targetDocument || !resizeObserver) {\n            return;\n        }\n        // cleanup previous container\n        if (container.current) {\n            resizeObserver.unobserve(container.current);\n            container.current.remove();\n        }\n        if (el) {\n            container.current = targetDocument.createElement('div');\n            el.insertAdjacentElement('beforebegin', container.current);\n            resizeObserver.observe(container.current);\n            handleResize();\n        }\n    }, [\n        targetDocument,\n        resizeObserver,\n        handleResize\n    ]);\n    React.useEffect(()=>{\n        return ()=>{\n            return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();\n        };\n    }, [\n        resizeObserver\n    ]);\n    return {\n        width,\n        measureElementRef\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,2BAA2B;AACrD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,IAAIC,SAAS,QAAQ,iCAAiC;AACjF;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMC,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAACC,SAAS,CAAC;EACzC,MAAM;IAAEC;EAAgB,CAAC,GAAGR,SAAS,CAAC,CAAC;EACvC;EACA,MAAMS,YAAY,GAAGX,KAAK,CAACY,WAAW,CAAC,MAAI;IACvC,IAAIC,kBAAkB;IACtB,MAAMC,cAAc,GAAG,CAACD,kBAAkB,GAAGN,SAAS,CAACQ,OAAO,MAAM,IAAI,IAAIF,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACG,qBAAqB,CAAC,CAAC,CAACZ,KAAK;IACrKC,QAAQ,CAACS,cAAc,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAM,CAACG,cAAc,CAAC,GAAGjB,KAAK,CAACM,QAAQ,CAACP,SAAS,CAAC,CAAC,GAAG,IAAImB,cAAc,CAACP,YAAY,CAAC,GAAGF,SAAS,CAAC;EACnG,MAAMU,iBAAiB,GAAGnB,KAAK,CAACY,WAAW,CAAEQ,EAAE,IAAG;IAC9C,IAAI,CAACV,cAAc,IAAI,CAACO,cAAc,EAAE;MACpC;IACJ;IACA;IACA,IAAIV,SAAS,CAACQ,OAAO,EAAE;MACnBE,cAAc,CAACI,SAAS,CAACd,SAAS,CAACQ,OAAO,CAAC;MAC3CR,SAAS,CAACQ,OAAO,CAACO,MAAM,CAAC,CAAC;IAC9B;IACA,IAAIF,EAAE,EAAE;MACJb,SAAS,CAACQ,OAAO,GAAGL,cAAc,CAACa,aAAa,CAAC,KAAK,CAAC;MACvDH,EAAE,CAACI,qBAAqB,CAAC,aAAa,EAAEjB,SAAS,CAACQ,OAAO,CAAC;MAC1DE,cAAc,CAACQ,OAAO,CAAClB,SAAS,CAACQ,OAAO,CAAC;MACzCJ,YAAY,CAAC,CAAC;IAClB;EACJ,CAAC,EAAE,CACCD,cAAc,EACdO,cAAc,EACdN,YAAY,CACf,CAAC;EACFX,KAAK,CAAC0B,SAAS,CAAC,MAAI;IAChB,OAAO,MAAI;MACP,OAAOT,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACU,UAAU,CAAC,CAAC;IACtG,CAAC;EACL,CAAC,EAAE,CACCV,cAAc,CACjB,CAAC;EACF,OAAO;IACHb,KAAK;IACLe;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}