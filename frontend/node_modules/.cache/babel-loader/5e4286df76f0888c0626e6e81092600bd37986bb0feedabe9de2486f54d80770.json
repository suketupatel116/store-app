{"ast":null,"code":"import * as React from 'react';\nimport { Avatar } from '../Avatar/Avatar';\nimport { AvatarGroupContext, useAvatarGroupContext_unstable } from '../../contexts/AvatarGroupContext';\nimport { defaultAvatarGroupSize } from '../AvatarGroup/useAvatarGroup';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\n/**\n * Create the state required to render AvatarGroupItem.\n *\n * The returned state can be modified with hooks such as useAvatarGroupItemStyles_unstable,\n * before being passed to renderAvatarGroupItem_unstable.\n *\n * @param props - props from this instance of AvatarGroupItem\n * @param ref - reference to root HTMLElement of AvatarGroupItem\n */\nexport const useAvatarGroupItem_unstable = (props, ref) => {\n  const groupIsOverflow = useAvatarGroupContext_unstable(ctx => ctx.isOverflow);\n  const groupSize = useAvatarGroupContext_unstable(ctx => ctx.size);\n  const layout = useAvatarGroupContext_unstable(ctx => ctx.layout);\n  // Since the primary slot is not an intrinsic element, getPartitionedNativeProps cannot be used here.\n  const {\n    style,\n    className,\n    ...avatarSlotProps\n  } = props;\n  const size = groupSize !== null && groupSize !== void 0 ? groupSize : defaultAvatarGroupSize;\n  const hasAvatarGroupContext = useHasParentContext(AvatarGroupContext);\n  if (process.env.NODE_ENV !== 'production' && !hasAvatarGroupContext) {\n    // eslint-disable-next-line no-console\n    console.warn('AvatarGroupItem must only be used inside an AvatarGroup component.');\n  }\n  return {\n    isOverflowItem: groupIsOverflow,\n    layout,\n    size,\n    components: {\n      root: groupIsOverflow ? 'li' : 'div',\n      avatar: Avatar,\n      overflowLabel: 'span'\n    },\n    root: resolveShorthand(props.root, {\n      required: true,\n      defaultProps: {\n        style,\n        className\n      }\n    }),\n    avatar: resolveShorthand(props.avatar, {\n      required: true,\n      defaultProps: {\n        ref,\n        size,\n        color: 'colorful',\n        ...avatarSlotProps\n      }\n    }),\n    overflowLabel: resolveShorthand(props.overflowLabel, {\n      required: true,\n      defaultProps: {\n        // Avatar already has its aria-label set to the name, this will prevent the name to be read twice.\n        'aria-hidden': true,\n        children: props.name\n      }\n    })\n  };\n};","map":{"version":3,"names":["React","Avatar","AvatarGroupContext","useAvatarGroupContext_unstable","defaultAvatarGroupSize","resolveShorthand","useHasParentContext","useAvatarGroupItem_unstable","props","ref","groupIsOverflow","ctx","isOverflow","groupSize","size","layout","style","className","avatarSlotProps","hasAvatarGroupContext","process","env","NODE_ENV","console","warn","isOverflowItem","components","root","avatar","overflowLabel","required","defaultProps","color","children","name"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/useAvatarGroupItem.js"],"sourcesContent":["import * as React from 'react';\nimport { Avatar } from '../Avatar/Avatar';\nimport { AvatarGroupContext, useAvatarGroupContext_unstable } from '../../contexts/AvatarGroupContext';\nimport { defaultAvatarGroupSize } from '../AvatarGroup/useAvatarGroup';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\n/**\n * Create the state required to render AvatarGroupItem.\n *\n * The returned state can be modified with hooks such as useAvatarGroupItemStyles_unstable,\n * before being passed to renderAvatarGroupItem_unstable.\n *\n * @param props - props from this instance of AvatarGroupItem\n * @param ref - reference to root HTMLElement of AvatarGroupItem\n */ export const useAvatarGroupItem_unstable = (props, ref)=>{\n    const groupIsOverflow = useAvatarGroupContext_unstable((ctx)=>ctx.isOverflow);\n    const groupSize = useAvatarGroupContext_unstable((ctx)=>ctx.size);\n    const layout = useAvatarGroupContext_unstable((ctx)=>ctx.layout);\n    // Since the primary slot is not an intrinsic element, getPartitionedNativeProps cannot be used here.\n    const { style , className , ...avatarSlotProps } = props;\n    const size = groupSize !== null && groupSize !== void 0 ? groupSize : defaultAvatarGroupSize;\n    const hasAvatarGroupContext = useHasParentContext(AvatarGroupContext);\n    if (process.env.NODE_ENV !== 'production' && !hasAvatarGroupContext) {\n        // eslint-disable-next-line no-console\n        console.warn('AvatarGroupItem must only be used inside an AvatarGroup component.');\n    }\n    return {\n        isOverflowItem: groupIsOverflow,\n        layout,\n        size,\n        components: {\n            root: groupIsOverflow ? 'li' : 'div',\n            avatar: Avatar,\n            overflowLabel: 'span'\n        },\n        root: resolveShorthand(props.root, {\n            required: true,\n            defaultProps: {\n                style,\n                className\n            }\n        }),\n        avatar: resolveShorthand(props.avatar, {\n            required: true,\n            defaultProps: {\n                ref,\n                size,\n                color: 'colorful',\n                ...avatarSlotProps\n            }\n        }),\n        overflowLabel: resolveShorthand(props.overflowLabel, {\n            required: true,\n            defaultProps: {\n                // Avatar already has its aria-label set to the name, this will prevent the name to be read twice.\n                'aria-hidden': true,\n                children: props.name\n            }\n        })\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,kBAAkB,EAAEC,8BAA8B,QAAQ,mCAAmC;AACtG,SAASC,sBAAsB,QAAQ,+BAA+B;AACtE,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,2BAA2B,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACzD,MAAMC,eAAe,GAAGP,8BAA8B,CAAEQ,GAAG,IAAGA,GAAG,CAACC,UAAU,CAAC;EAC7E,MAAMC,SAAS,GAAGV,8BAA8B,CAAEQ,GAAG,IAAGA,GAAG,CAACG,IAAI,CAAC;EACjE,MAAMC,MAAM,GAAGZ,8BAA8B,CAAEQ,GAAG,IAAGA,GAAG,CAACI,MAAM,CAAC;EAChE;EACA,MAAM;IAAEC,KAAK;IAAGC,SAAS;IAAG,GAAGC;EAAgB,CAAC,GAAGV,KAAK;EACxD,MAAMM,IAAI,GAAGD,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAGA,SAAS,GAAGT,sBAAsB;EAC5F,MAAMe,qBAAqB,GAAGb,mBAAmB,CAACJ,kBAAkB,CAAC;EACrE,IAAIkB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,CAACH,qBAAqB,EAAE;IACjE;IACAI,OAAO,CAACC,IAAI,CAAC,oEAAoE,CAAC;EACtF;EACA,OAAO;IACHC,cAAc,EAAEf,eAAe;IAC/BK,MAAM;IACND,IAAI;IACJY,UAAU,EAAE;MACRC,IAAI,EAAEjB,eAAe,GAAG,IAAI,GAAG,KAAK;MACpCkB,MAAM,EAAE3B,MAAM;MACd4B,aAAa,EAAE;IACnB,CAAC;IACDF,IAAI,EAAEtB,gBAAgB,CAACG,KAAK,CAACmB,IAAI,EAAE;MAC/BG,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACVf,KAAK;QACLC;MACJ;IACJ,CAAC,CAAC;IACFW,MAAM,EAAEvB,gBAAgB,CAACG,KAAK,CAACoB,MAAM,EAAE;MACnCE,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACVtB,GAAG;QACHK,IAAI;QACJkB,KAAK,EAAE,UAAU;QACjB,GAAGd;MACP;IACJ,CAAC,CAAC;IACFW,aAAa,EAAExB,gBAAgB,CAACG,KAAK,CAACqB,aAAa,EAAE;MACjDC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACV;QACA,aAAa,EAAE,IAAI;QACnBE,QAAQ,EAAEzB,KAAK,CAAC0B;MACpB;IACJ,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}