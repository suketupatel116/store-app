{"ast":null,"code":"import * as React from 'react';\nimport { useFocusableGroup } from '@fluentui/react-tabster';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useColumnIdContext } from '../../contexts/columnIdContext';\n/**\n * Create the state required to render DataGridCell.\n *\n * The returned state can be modified with hooks such as useDataGridCellStyles_unstable,\n * before being passed to renderDataGridCell_unstable.\n *\n * @param props - props from this instance of DataGridCell\n * @param ref - reference to root HTMLElement of DataGridCell\n */\nexport const useDataGridCell_unstable = (props, ref) => {\n  const {\n    focusMode = 'cell'\n  } = props;\n  const columnId = useColumnIdContext();\n  const tabbable = useDataGridContext_unstable(ctx => (ctx.focusMode === 'cell' || ctx.focusMode === 'composite') && focusMode !== 'none');\n  const resizableColumns = useDataGridContext_unstable(ctx => ctx.resizableColumns);\n  const columnSizing = useDataGridContext_unstable(ctx => ctx.columnSizing_unstable);\n  const focusableGroupAttr = useFocusableGroup({\n    tabBehavior: 'limited-trap-focus'\n  });\n  return useTableCell_unstable({\n    as: 'div',\n    role: 'gridcell',\n    ...(focusMode === 'group' && focusableGroupAttr),\n    tabIndex: tabbable ? 0 : undefined,\n    ...(resizableColumns ? columnSizing.getTableCellProps(columnId) : {}),\n    ...props\n  }, ref);\n};","map":{"version":3,"names":["React","useFocusableGroup","useTableCell_unstable","useDataGridContext_unstable","useColumnIdContext","useDataGridCell_unstable","props","ref","focusMode","columnId","tabbable","ctx","resizableColumns","columnSizing","columnSizing_unstable","focusableGroupAttr","tabBehavior","as","role","tabIndex","undefined","getTableCellProps"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-table/lib/components/DataGridCell/useDataGridCell.js"],"sourcesContent":["import * as React from 'react';\nimport { useFocusableGroup } from '@fluentui/react-tabster';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useColumnIdContext } from '../../contexts/columnIdContext';\n/**\n * Create the state required to render DataGridCell.\n *\n * The returned state can be modified with hooks such as useDataGridCellStyles_unstable,\n * before being passed to renderDataGridCell_unstable.\n *\n * @param props - props from this instance of DataGridCell\n * @param ref - reference to root HTMLElement of DataGridCell\n */ export const useDataGridCell_unstable = (props, ref)=>{\n    const { focusMode ='cell'  } = props;\n    const columnId = useColumnIdContext();\n    const tabbable = useDataGridContext_unstable((ctx)=>(ctx.focusMode === 'cell' || ctx.focusMode === 'composite') && focusMode !== 'none');\n    const resizableColumns = useDataGridContext_unstable((ctx)=>ctx.resizableColumns);\n    const columnSizing = useDataGridContext_unstable((ctx)=>ctx.columnSizing_unstable);\n    const focusableGroupAttr = useFocusableGroup({\n        tabBehavior: 'limited-trap-focus'\n    });\n    return useTableCell_unstable({\n        as: 'div',\n        role: 'gridcell',\n        ...focusMode === 'group' && focusableGroupAttr,\n        tabIndex: tabbable ? 0 : undefined,\n        ...resizableColumns ? columnSizing.getTableCellProps(columnId) : {},\n        ...props\n    }, ref);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,2BAA2B,QAAQ,gCAAgC;AAC5E,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,wBAAwB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACtD,MAAM;IAAEC,SAAS,GAAE;EAAQ,CAAC,GAAGF,KAAK;EACpC,MAAMG,QAAQ,GAAGL,kBAAkB,CAAC,CAAC;EACrC,MAAMM,QAAQ,GAAGP,2BAA2B,CAAEQ,GAAG,IAAG,CAACA,GAAG,CAACH,SAAS,KAAK,MAAM,IAAIG,GAAG,CAACH,SAAS,KAAK,WAAW,KAAKA,SAAS,KAAK,MAAM,CAAC;EACxI,MAAMI,gBAAgB,GAAGT,2BAA2B,CAAEQ,GAAG,IAAGA,GAAG,CAACC,gBAAgB,CAAC;EACjF,MAAMC,YAAY,GAAGV,2BAA2B,CAAEQ,GAAG,IAAGA,GAAG,CAACG,qBAAqB,CAAC;EAClF,MAAMC,kBAAkB,GAAGd,iBAAiB,CAAC;IACzCe,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,OAAOd,qBAAqB,CAAC;IACzBe,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,UAAU;IAChB,IAAGV,SAAS,KAAK,OAAO,IAAIO,kBAAkB;IAC9CI,QAAQ,EAAET,QAAQ,GAAG,CAAC,GAAGU,SAAS;IAClC,IAAGR,gBAAgB,GAAGC,YAAY,CAACQ,iBAAiB,CAACZ,QAAQ,CAAC,GAAG,CAAC,CAAC;IACnE,GAAGH;EACP,CAAC,EAAEC,GAAG,CAAC;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}