{"ast":null,"code":"import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { useTableHeaderCell_unstable } from '../TableHeaderCell/useTableHeaderCell';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useColumnIdContext } from '../../contexts/columnIdContext';\nimport { useTableContext } from '../../contexts/tableContext';\n/**\n * Create the state required to render DataGridHeaderCell.\n *\n * The returned state can be modified with hooks such as useDataGridHeaderCellStyles_unstable,\n * before being passed to renderDataGridHeaderCell_unstable.\n *\n * @param props - props from this instance of DataGridHeaderCell\n * @param ref - reference to root HTMLElement of DataGridHeaderCell\n */\nexport const useDataGridHeaderCell_unstable = (props, ref) => {\n  const columnId = useColumnIdContext();\n  const {\n    sortable\n  } = useTableContext();\n  const toggleColumnSort = useDataGridContext_unstable(ctx => ctx.sort.toggleColumnSort);\n  const sortDirection = useDataGridContext_unstable(ctx => sortable ? ctx.sort.getSortDirection(columnId) : undefined);\n  const resizableColumns = useDataGridContext_unstable(ctx => ctx.resizableColumns);\n  const columnSizing = useDataGridContext_unstable(ctx => ctx.columnSizing_unstable);\n  // eslint-disable-next-line deprecation/deprecation -- prefer HTMLTableCellElement\n  const onClick = useEventCallback(e => {\n    var _props_onClick;\n    if (sortable) {\n      toggleColumnSort(e, columnId);\n    }\n    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);\n  });\n  return useTableHeaderCell_unstable({\n    sortDirection,\n    as: 'div',\n    tabIndex: sortable ? undefined : 0,\n    ...(resizableColumns ? columnSizing.getTableHeaderCellProps(columnId) : {}),\n    ...props,\n    onClick\n  }, ref);\n};","map":{"version":3,"names":["React","useEventCallback","useTableHeaderCell_unstable","useDataGridContext_unstable","useColumnIdContext","useTableContext","useDataGridHeaderCell_unstable","props","ref","columnId","sortable","toggleColumnSort","ctx","sort","sortDirection","getSortDirection","undefined","resizableColumns","columnSizing","columnSizing_unstable","onClick","e","_props_onClick","call","as","tabIndex","getTableHeaderCellProps"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/useDataGridHeaderCell.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { useTableHeaderCell_unstable } from '../TableHeaderCell/useTableHeaderCell';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useColumnIdContext } from '../../contexts/columnIdContext';\nimport { useTableContext } from '../../contexts/tableContext';\n/**\n * Create the state required to render DataGridHeaderCell.\n *\n * The returned state can be modified with hooks such as useDataGridHeaderCellStyles_unstable,\n * before being passed to renderDataGridHeaderCell_unstable.\n *\n * @param props - props from this instance of DataGridHeaderCell\n * @param ref - reference to root HTMLElement of DataGridHeaderCell\n */ export const useDataGridHeaderCell_unstable = (props, ref)=>{\n    const columnId = useColumnIdContext();\n    const { sortable  } = useTableContext();\n    const toggleColumnSort = useDataGridContext_unstable((ctx)=>ctx.sort.toggleColumnSort);\n    const sortDirection = useDataGridContext_unstable((ctx)=>sortable ? ctx.sort.getSortDirection(columnId) : undefined);\n    const resizableColumns = useDataGridContext_unstable((ctx)=>ctx.resizableColumns);\n    const columnSizing = useDataGridContext_unstable((ctx)=>ctx.columnSizing_unstable);\n    // eslint-disable-next-line deprecation/deprecation -- prefer HTMLTableCellElement\n    const onClick = useEventCallback((e)=>{\n        var _props_onClick;\n        if (sortable) {\n            toggleColumnSort(e, columnId);\n        }\n        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);\n    });\n    return useTableHeaderCell_unstable({\n        sortDirection,\n        as: 'div',\n        tabIndex: sortable ? undefined : 0,\n        ...resizableColumns ? columnSizing.getTableHeaderCellProps(columnId) : {},\n        ...props,\n        onClick\n    }, ref);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,2BAA2B,QAAQ,uCAAuC;AACnF,SAASC,2BAA2B,QAAQ,gCAAgC;AAC5E,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,eAAe,QAAQ,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,8BAA8B,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EAC5D,MAAMC,QAAQ,GAAGL,kBAAkB,CAAC,CAAC;EACrC,MAAM;IAAEM;EAAU,CAAC,GAAGL,eAAe,CAAC,CAAC;EACvC,MAAMM,gBAAgB,GAAGR,2BAA2B,CAAES,GAAG,IAAGA,GAAG,CAACC,IAAI,CAACF,gBAAgB,CAAC;EACtF,MAAMG,aAAa,GAAGX,2BAA2B,CAAES,GAAG,IAAGF,QAAQ,GAAGE,GAAG,CAACC,IAAI,CAACE,gBAAgB,CAACN,QAAQ,CAAC,GAAGO,SAAS,CAAC;EACpH,MAAMC,gBAAgB,GAAGd,2BAA2B,CAAES,GAAG,IAAGA,GAAG,CAACK,gBAAgB,CAAC;EACjF,MAAMC,YAAY,GAAGf,2BAA2B,CAAES,GAAG,IAAGA,GAAG,CAACO,qBAAqB,CAAC;EAClF;EACA,MAAMC,OAAO,GAAGnB,gBAAgB,CAAEoB,CAAC,IAAG;IAClC,IAAIC,cAAc;IAClB,IAAIZ,QAAQ,EAAE;MACVC,gBAAgB,CAACU,CAAC,EAAEZ,QAAQ,CAAC;IACjC;IACA,CAACa,cAAc,GAAGf,KAAK,CAACa,OAAO,MAAM,IAAI,IAAIE,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACC,IAAI,CAAChB,KAAK,EAAEc,CAAC,CAAC;EACnH,CAAC,CAAC;EACF,OAAOnB,2BAA2B,CAAC;IAC/BY,aAAa;IACbU,EAAE,EAAE,KAAK;IACTC,QAAQ,EAAEf,QAAQ,GAAGM,SAAS,GAAG,CAAC;IAClC,IAAGC,gBAAgB,GAAGC,YAAY,CAACQ,uBAAuB,CAACjB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACzE,GAAGF,KAAK;IACRa;EACJ,CAAC,EAAEZ,GAAG,CAAC;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}