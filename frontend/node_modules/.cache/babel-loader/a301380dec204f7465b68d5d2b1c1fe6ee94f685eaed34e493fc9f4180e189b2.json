{"ast":null,"code":"import * as keys from '@fluentui/keyboard-keys';\nimport * as React from 'react';\n/**\n * Converts a keyboard interaction into a defined action\n */\nexport function getDropdownActionFromKey(e) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    open = true,\n    multiselect = false\n  } = options;\n  const code = e.key;\n  const {\n    altKey,\n    ctrlKey,\n    key,\n    metaKey\n  } = e;\n  // typing action occurs whether open or closed\n  if (key.length === 1 && code !== keys.Space && !altKey && !ctrlKey && !metaKey) {\n    return 'Type';\n  }\n  // handle opening the dropdown if closed\n  if (!open) {\n    if (code === keys.ArrowDown || code === keys.ArrowUp || code === keys.Enter || code === keys.Space) {\n      return 'Open';\n    }\n    // if the dropdown is closed and an action did not match the above, do nothing\n    return 'None';\n  }\n  // select or close actions\n  if (code === keys.ArrowUp && altKey || code === keys.Enter || !multiselect && code === keys.Space) {\n    return 'CloseSelect';\n  }\n  if (multiselect && code === keys.Space) {\n    return 'Select';\n  }\n  if (code === keys.Escape) {\n    return 'Close';\n  }\n  // navigation interactions\n  if (code === keys.ArrowDown) {\n    return 'Next';\n  }\n  if (code === keys.ArrowUp) {\n    return 'Previous';\n  }\n  if (code === keys.Home) {\n    return 'First';\n  }\n  if (code === keys.End) {\n    return 'Last';\n  }\n  if (code === keys.PageUp) {\n    return 'PageUp';\n  }\n  if (code === keys.PageDown) {\n    return 'PageDown';\n  }\n  if (code === keys.Tab) {\n    return 'Tab';\n  }\n  // if nothing matched, return none\n  return 'None';\n}\n/**\n * Returns the requested option index from an action\n */\nexport function getIndexFromAction(action, currentIndex, maxIndex) {\n  switch (action) {\n    case 'Next':\n      return Math.min(maxIndex, currentIndex + 1);\n      break;\n    case 'Previous':\n      return Math.max(0, currentIndex - 1);\n    case 'First':\n      return 0;\n    case 'Last':\n      return maxIndex;\n    case 'PageDown':\n      return Math.min(maxIndex, currentIndex + 10);\n    case 'PageUp':\n      return Math.max(0, currentIndex - 10);\n    default:\n      return currentIndex;\n  }\n}","map":{"version":3,"names":["keys","React","getDropdownActionFromKey","e","options","arguments","length","undefined","open","multiselect","code","key","altKey","ctrlKey","metaKey","Space","ArrowDown","ArrowUp","Enter","Escape","Home","End","PageUp","PageDown","Tab","getIndexFromAction","action","currentIndex","maxIndex","Math","min","max"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-combobox/lib/utils/dropdownKeyActions.js"],"sourcesContent":["import * as keys from '@fluentui/keyboard-keys';\nimport * as React from 'react';\n/**\n * Converts a keyboard interaction into a defined action\n */ export function getDropdownActionFromKey(e, options = {}) {\n    const { open =true , multiselect =false  } = options;\n    const code = e.key;\n    const { altKey , ctrlKey , key , metaKey  } = e;\n    // typing action occurs whether open or closed\n    if (key.length === 1 && code !== keys.Space && !altKey && !ctrlKey && !metaKey) {\n        return 'Type';\n    }\n    // handle opening the dropdown if closed\n    if (!open) {\n        if (code === keys.ArrowDown || code === keys.ArrowUp || code === keys.Enter || code === keys.Space) {\n            return 'Open';\n        }\n        // if the dropdown is closed and an action did not match the above, do nothing\n        return 'None';\n    }\n    // select or close actions\n    if (code === keys.ArrowUp && altKey || code === keys.Enter || !multiselect && code === keys.Space) {\n        return 'CloseSelect';\n    }\n    if (multiselect && code === keys.Space) {\n        return 'Select';\n    }\n    if (code === keys.Escape) {\n        return 'Close';\n    }\n    // navigation interactions\n    if (code === keys.ArrowDown) {\n        return 'Next';\n    }\n    if (code === keys.ArrowUp) {\n        return 'Previous';\n    }\n    if (code === keys.Home) {\n        return 'First';\n    }\n    if (code === keys.End) {\n        return 'Last';\n    }\n    if (code === keys.PageUp) {\n        return 'PageUp';\n    }\n    if (code === keys.PageDown) {\n        return 'PageDown';\n    }\n    if (code === keys.Tab) {\n        return 'Tab';\n    }\n    // if nothing matched, return none\n    return 'None';\n}\n/**\n * Returns the requested option index from an action\n */ export function getIndexFromAction(action, currentIndex, maxIndex) {\n    switch(action){\n        case 'Next':\n            return Math.min(maxIndex, currentIndex + 1);\n            break;\n        case 'Previous':\n            return Math.max(0, currentIndex - 1);\n        case 'First':\n            return 0;\n        case 'Last':\n            return maxIndex;\n        case 'PageDown':\n            return Math.min(maxIndex, currentIndex + 10);\n        case 'PageUp':\n            return Math.max(0, currentIndex - 10);\n        default:\n            return currentIndex;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}