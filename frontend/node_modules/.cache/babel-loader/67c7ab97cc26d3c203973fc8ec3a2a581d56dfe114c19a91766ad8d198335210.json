{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Button } from '../Button/Button';\nimport { MenuButton } from '../MenuButton/MenuButton';\n/**\n * Given user props, defines default props for the SplitButton and returns processed state.\n * @param props - User provided props to the SplitButton component.\n * @param ref - User provided ref to be passed to the SplitButton component.\n */\nexport const useSplitButton_unstable = (props, ref) => {\n  const {\n    appearance = 'secondary',\n    children,\n    disabled = false,\n    disabledFocusable = false,\n    icon,\n    iconPosition = 'before',\n    menuButton,\n    menuIcon,\n    primaryActionButton,\n    shape = 'rounded',\n    size = 'medium'\n  } = props;\n  const baseId = useId('splitButton-');\n  const menuButtonShorthand = resolveShorthand(menuButton, {\n    defaultProps: {\n      appearance,\n      disabled,\n      disabledFocusable,\n      menuIcon,\n      shape,\n      size\n    },\n    required: true\n  });\n  const primaryActionButtonShorthand = resolveShorthand(primaryActionButton, {\n    defaultProps: {\n      appearance,\n      children,\n      disabled,\n      disabledFocusable,\n      icon,\n      iconPosition,\n      id: baseId + '__primaryActionButton',\n      shape,\n      size\n    },\n    required: true\n  });\n  // Resolve menu button's aria-labelledby to be labelled by the primary action button if not a label was not provided\n  // by the user.\n  if (menuButtonShorthand && primaryActionButtonShorthand && !menuButtonShorthand['aria-label'] && !menuButtonShorthand['aria-labelledby']) {\n    menuButtonShorthand['aria-labelledby'] = primaryActionButtonShorthand.id;\n  }\n  return {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    iconPosition,\n    shape,\n    size,\n    // Slots definition\n    components: {\n      root: 'div',\n      menuButton: MenuButton,\n      primaryActionButton: Button\n    },\n    root: getNativeElementProps('div', {\n      ref,\n      ...props\n    }),\n    menuButton: menuButtonShorthand,\n    primaryActionButton: primaryActionButtonShorthand\n  };\n};","map":{"version":3,"names":["React","getNativeElementProps","resolveShorthand","useId","Button","MenuButton","useSplitButton_unstable","props","ref","appearance","children","disabled","disabledFocusable","icon","iconPosition","menuButton","menuIcon","primaryActionButton","shape","size","baseId","menuButtonShorthand","defaultProps","required","primaryActionButtonShorthand","id","components","root"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-button/lib/components/SplitButton/useSplitButton.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Button } from '../Button/Button';\nimport { MenuButton } from '../MenuButton/MenuButton';\n/**\n * Given user props, defines default props for the SplitButton and returns processed state.\n * @param props - User provided props to the SplitButton component.\n * @param ref - User provided ref to be passed to the SplitButton component.\n */ export const useSplitButton_unstable = (props, ref)=>{\n    const { appearance ='secondary' , children , disabled =false , disabledFocusable =false , icon , iconPosition ='before' , menuButton , menuIcon , primaryActionButton , shape ='rounded' , size ='medium'  } = props;\n    const baseId = useId('splitButton-');\n    const menuButtonShorthand = resolveShorthand(menuButton, {\n        defaultProps: {\n            appearance,\n            disabled,\n            disabledFocusable,\n            menuIcon,\n            shape,\n            size\n        },\n        required: true\n    });\n    const primaryActionButtonShorthand = resolveShorthand(primaryActionButton, {\n        defaultProps: {\n            appearance,\n            children,\n            disabled,\n            disabledFocusable,\n            icon,\n            iconPosition,\n            id: baseId + '__primaryActionButton',\n            shape,\n            size\n        },\n        required: true\n    });\n    // Resolve menu button's aria-labelledby to be labelled by the primary action button if not a label was not provided\n    // by the user.\n    if (menuButtonShorthand && primaryActionButtonShorthand && !menuButtonShorthand['aria-label'] && !menuButtonShorthand['aria-labelledby']) {\n        menuButtonShorthand['aria-labelledby'] = primaryActionButtonShorthand.id;\n    }\n    return {\n        // Props passed at the top-level\n        appearance,\n        disabled,\n        disabledFocusable,\n        iconPosition,\n        shape,\n        size,\n        // Slots definition\n        components: {\n            root: 'div',\n            menuButton: MenuButton,\n            primaryActionButton: Button\n        },\n        root: getNativeElementProps('div', {\n            ref,\n            ...props\n        }),\n        menuButton: menuButtonShorthand,\n        primaryActionButton: primaryActionButtonShorthand\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,2BAA2B;AAC1F,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,UAAU,QAAQ,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACrD,MAAM;IAAEC,UAAU,GAAE,WAAW;IAAGC,QAAQ;IAAGC,QAAQ,GAAE,KAAK;IAAGC,iBAAiB,GAAE,KAAK;IAAGC,IAAI;IAAGC,YAAY,GAAE,QAAQ;IAAGC,UAAU;IAAGC,QAAQ;IAAGC,mBAAmB;IAAGC,KAAK,GAAE,SAAS;IAAGC,IAAI,GAAE;EAAU,CAAC,GAAGZ,KAAK;EACpN,MAAMa,MAAM,GAAGjB,KAAK,CAAC,cAAc,CAAC;EACpC,MAAMkB,mBAAmB,GAAGnB,gBAAgB,CAACa,UAAU,EAAE;IACrDO,YAAY,EAAE;MACVb,UAAU;MACVE,QAAQ;MACRC,iBAAiB;MACjBI,QAAQ;MACRE,KAAK;MACLC;IACJ,CAAC;IACDI,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAMC,4BAA4B,GAAGtB,gBAAgB,CAACe,mBAAmB,EAAE;IACvEK,YAAY,EAAE;MACVb,UAAU;MACVC,QAAQ;MACRC,QAAQ;MACRC,iBAAiB;MACjBC,IAAI;MACJC,YAAY;MACZW,EAAE,EAAEL,MAAM,GAAG,uBAAuB;MACpCF,KAAK;MACLC;IACJ,CAAC;IACDI,QAAQ,EAAE;EACd,CAAC,CAAC;EACF;EACA;EACA,IAAIF,mBAAmB,IAAIG,4BAA4B,IAAI,CAACH,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAACA,mBAAmB,CAAC,iBAAiB,CAAC,EAAE;IACtIA,mBAAmB,CAAC,iBAAiB,CAAC,GAAGG,4BAA4B,CAACC,EAAE;EAC5E;EACA,OAAO;IACH;IACAhB,UAAU;IACVE,QAAQ;IACRC,iBAAiB;IACjBE,YAAY;IACZI,KAAK;IACLC,IAAI;IACJ;IACAO,UAAU,EAAE;MACRC,IAAI,EAAE,KAAK;MACXZ,UAAU,EAAEV,UAAU;MACtBY,mBAAmB,EAAEb;IACzB,CAAC;IACDuB,IAAI,EAAE1B,qBAAqB,CAAC,KAAK,EAAE;MAC/BO,GAAG;MACH,GAAGD;IACP,CAAC,CAAC;IACFQ,UAAU,EAAEM,mBAAmB;IAC/BJ,mBAAmB,EAAEO;EACzB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}