{"ast":null,"code":"import hashString from '@emotion/hash';\nimport { HASH_PREFIX } from '../../constants.esm.js';\nfunction hashClassName(_ref) {\n  let {\n    container,\n    media,\n    layer,\n    property,\n    selectors,\n    support,\n    value\n  } = _ref;\n  // Trimming of value is required to generate consistent hashes\n  const classNameHash = hashString(selectors.join('') + container + media + layer + support + property + value.trim());\n  return HASH_PREFIX + classNameHash;\n}\nexport { hashClassName };","map":{"version":3,"names":["hashClassName","_ref","container","media","layer","property","selectors","support","value","classNameHash","hashString","join","trim","HASH_PREFIX"],"sources":["/Users/suketupatel/Desktop/application/frontend/packages/core/src/runtime/utils/hashClassName.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport { HASH_PREFIX } from '../../constants';\n\ninterface HashedClassNameParts {\n  property: string;\n  value: string;\n  selectors: string[];\n  media: string;\n  layer: string;\n  support: string;\n  container: string;\n}\n\nexport function hashClassName({\n  container,\n  media,\n  layer,\n  property,\n  selectors,\n  support,\n  value,\n}: HashedClassNameParts): string {\n  // Trimming of value is required to generate consistent hashes\n  const classNameHash = hashString(selectors.join('') + container + media + layer + support + property + value.trim());\n\n  return HASH_PREFIX + classNameHash;\n}\n"],"mappings":";;SAagBA,aAAaA,CAAAC,IAAA,EAQN;EAAA,IARO;IAC5BC,SAAS;IACTC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,SAAS;IACTC,OAAO;IACPC;GACqB,GAAAP,IAAA;;EAErB,MAAMQ,aAAa,GAAGC,UAAU,CAACJ,SAAS,CAACK,IAAI,CAAC,EAAE,CAAC,GAAGT,SAAS,GAAGC,KAAK,GAAGC,KAAK,GAAGG,OAAO,GAAGF,QAAQ,GAAGG,KAAK,CAACI,IAAI,EAAE,CAAC;EAEpH,OAAOC,WAAW,GAAGJ,aAAa;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}