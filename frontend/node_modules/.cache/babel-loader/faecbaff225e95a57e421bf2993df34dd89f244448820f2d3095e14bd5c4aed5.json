{"ast":null,"code":"import * as React from 'react';\nimport { useControllableState, useEventCallback, useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport { useDisableBodyScroll, useFocusFirstElement } from '../../utils';\nimport { DialogContext } from '../../contexts';\nimport { useModalAttributes } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Dialog.\n *\n * The returned state can be modified with hooks such as useDialogStyles_unstable,\n * before being passed to renderDialog_unstable.\n *\n * @param props - props from this instance of Dialog\n */\nexport const useDialog_unstable = props => {\n  const {\n    children,\n    modalType = 'modal',\n    onOpenChange,\n    inertTrapFocus = false\n  } = props;\n  const [trigger, content] = childrenToTriggerAndContent(children);\n  const [open, setOpen] = useControllableState({\n    state: props.open,\n    defaultState: props.defaultOpen,\n    initialState: false\n  });\n  const requestOpenChange = useEventCallback(data => {\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(data.event, data);\n    // if user prevents default then do not change state value\n    // otherwise updates state value and trigger reference to the element that caused the opening\n    if (!data.event.isDefaultPrevented()) {\n      setOpen(data.open);\n    }\n  });\n  const focusRef = useFocusFirstElement(open, modalType);\n  const disableBodyScroll = useDisableBodyScroll();\n  const isBodyScrollLocked = Boolean(open && modalType !== 'non-modal');\n  useIsomorphicLayoutEffect(() => {\n    if (isBodyScrollLocked) {\n      return disableBodyScroll();\n    }\n  }, [disableBodyScroll, isBodyScrollLocked]);\n  const {\n    modalAttributes,\n    triggerAttributes\n  } = useModalAttributes({\n    trapFocus: modalType !== 'non-modal',\n    legacyTrapFocus: !inertTrapFocus\n  });\n  return {\n    components: {\n      backdrop: 'div'\n    },\n    inertTrapFocus,\n    open,\n    modalType,\n    content: open ? content : null,\n    trigger,\n    requestOpenChange,\n    dialogTitleId: useId('dialog-title-'),\n    isNestedDialog: useHasParentContext(DialogContext),\n    dialogRef: focusRef,\n    modalAttributes: modalType !== 'non-modal' ? modalAttributes : undefined,\n    triggerAttributes\n  };\n};\n/**\n * Extracts trigger and content from children\n */\nfunction childrenToTriggerAndContent(children) {\n  const childrenArray = React.Children.toArray(children);\n  if (process.env.NODE_ENV !== 'production') {\n    if (childrenArray.length !== 1 && childrenArray.length !== 2) {\n      // eslint-disable-next-line no-console\n      console.warn('Dialog must contain at least one child <DialogSurface/>,\\n' + 'and at most two children <DialogTrigger/> <DialogSurface/> (in this order)');\n    }\n  }\n  switch (childrenArray.length) {\n    // case where there's a trigger followed by content\n    case 2:\n      return childrenArray;\n    // case where there's only content\n    case 1:\n      return [undefined, childrenArray[0]];\n    // unknown case\n    default:\n      return [undefined, undefined];\n  }\n}","map":{"version":3,"names":["React","useControllableState","useEventCallback","useId","useIsomorphicLayoutEffect","useHasParentContext","useDisableBodyScroll","useFocusFirstElement","DialogContext","useModalAttributes","useDialog_unstable","props","children","modalType","onOpenChange","inertTrapFocus","trigger","content","childrenToTriggerAndContent","open","setOpen","state","defaultState","defaultOpen","initialState","requestOpenChange","data","event","isDefaultPrevented","focusRef","disableBodyScroll","isBodyScrollLocked","Boolean","modalAttributes","triggerAttributes","trapFocus","legacyTrapFocus","components","backdrop","dialogTitleId","isNestedDialog","dialogRef","undefined","childrenArray","Children","toArray","process","env","NODE_ENV","length","console","warn"],"sources":["/Users/suketupatel/Desktop/application/frontend/node_modules/@fluentui/react-dialog/lib/components/Dialog/useDialog.js"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState, useEventCallback, useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport { useDisableBodyScroll, useFocusFirstElement } from '../../utils';\nimport { DialogContext } from '../../contexts';\nimport { useModalAttributes } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Dialog.\n *\n * The returned state can be modified with hooks such as useDialogStyles_unstable,\n * before being passed to renderDialog_unstable.\n *\n * @param props - props from this instance of Dialog\n */ export const useDialog_unstable = (props)=>{\n    const { children , modalType ='modal' , onOpenChange , inertTrapFocus =false  } = props;\n    const [trigger, content] = childrenToTriggerAndContent(children);\n    const [open, setOpen] = useControllableState({\n        state: props.open,\n        defaultState: props.defaultOpen,\n        initialState: false\n    });\n    const requestOpenChange = useEventCallback((data)=>{\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(data.event, data);\n        // if user prevents default then do not change state value\n        // otherwise updates state value and trigger reference to the element that caused the opening\n        if (!data.event.isDefaultPrevented()) {\n            setOpen(data.open);\n        }\n    });\n    const focusRef = useFocusFirstElement(open, modalType);\n    const disableBodyScroll = useDisableBodyScroll();\n    const isBodyScrollLocked = Boolean(open && modalType !== 'non-modal');\n    useIsomorphicLayoutEffect(()=>{\n        if (isBodyScrollLocked) {\n            return disableBodyScroll();\n        }\n    }, [\n        disableBodyScroll,\n        isBodyScrollLocked\n    ]);\n    const { modalAttributes , triggerAttributes  } = useModalAttributes({\n        trapFocus: modalType !== 'non-modal',\n        legacyTrapFocus: !inertTrapFocus\n    });\n    return {\n        components: {\n            backdrop: 'div'\n        },\n        inertTrapFocus,\n        open,\n        modalType,\n        content: open ? content : null,\n        trigger,\n        requestOpenChange,\n        dialogTitleId: useId('dialog-title-'),\n        isNestedDialog: useHasParentContext(DialogContext),\n        dialogRef: focusRef,\n        modalAttributes: modalType !== 'non-modal' ? modalAttributes : undefined,\n        triggerAttributes\n    };\n};\n/**\n * Extracts trigger and content from children\n */ function childrenToTriggerAndContent(children) {\n    const childrenArray = React.Children.toArray(children);\n    if (process.env.NODE_ENV !== 'production') {\n        if (childrenArray.length !== 1 && childrenArray.length !== 2) {\n            // eslint-disable-next-line no-console\n            console.warn('Dialog must contain at least one child <DialogSurface/>,\\n' + 'and at most two children <DialogTrigger/> <DialogSurface/> (in this order)');\n        }\n    }\n    switch(childrenArray.length){\n        // case where there's a trigger followed by content\n        case 2:\n            return childrenArray;\n        // case where there's only content\n        case 1:\n            return [\n                undefined,\n                childrenArray[0]\n            ];\n        // unknown case\n        default:\n            return [\n                undefined,\n                undefined\n            ];\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}