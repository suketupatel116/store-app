{"version":3,"file":"resolveStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport type { GriffelAnimation, GriffelStyle } from '@griffel/style-types';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX, UNSUPPORTED_CSS_PROPERTIES } from '../constants';\nimport { CSSClassesMap, CSSRulesByBucket, StyleBucketName, CSSBucketEntry } from '../types';\nimport { compileAtomicCSSRule, CompileAtomicCSSOptions } from './compileAtomicCSSRule';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule';\nimport { warnAboutUnsupportedProperties } from './warnings/warnAboutUnsupportedProperties';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction createBucketEntry(cssRule: string, metadata: Record<string, unknown> | undefined): CSSBucketEntry {\n  if (metadata) {\n    return [cssRule, metadata];\n  }\n\n  return cssRule;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string | undefined,\n  rtlCSS: string | undefined,\n  media: string | undefined,\n) {\n  let metadata: Record<string, unknown> | undefined;\n  if (styleBucketName === 'm' && media) {\n    metadata = { m: media };\n  }\n\n  cssRulesByBucket[styleBucketName] ??= [];\n\n  if (ltrCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(ltrCSS, metadata));\n  }\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(rtlCSS, metadata));\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  selectors: string[] = [],\n  media = '',\n  layer = '',\n  support = '',\n  container = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      warnAboutUnsupportedProperties(property, styles[property as keyof GriffelStyle]);\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selectors, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        selectors,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            container,\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            selectors,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n            media,\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        selectors,\n        media,\n        layer,\n        support,\n        container,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const key = hashPropertyKey(selectors, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        selectors,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            container,\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            selectors,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value: value as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors.concat(normalizeNestedProperty(property)),\n          media,\n          layer,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          combinedMediaQuery,\n          layer,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          combinedLayerQuery,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          layer,\n          combinedSupportQuery,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isContainerQuerySelector(property)) {\n        // TODO implement nested container queries if needed\n        // The only way to target multiple containers is to nest container queries\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/@container#nested_container_queries\n        const containerQuery = property.slice(10).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          layer,\n          support,\n          containerQuery,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        warnAboutUnresolvedRule(property, value);\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","createBucketEntry","cssRule","metadata","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","media","m","push","resolveStyleRules","styles","selectors","layer","support","container","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","warnAboutUnsupportedProperties","value","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileAtomicCSSRule","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","join","process","env","NODE_ENV","console","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","error","d","isObject","isNestedSelector","concat","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","isContainerQuerySelector","containerQuery","warnAboutUnresolvedRule"],"mappings":"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"}