// src/useIsStrictMode.ts
import * as React from "react";
var getCurrentOwner = () => React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner.current;
var REACT_STRICT_MODE_TYPE = /* @__PURE__ */ Symbol.for("react.strict_mode");
var useIsStrictMode = () => {
  if (process.env.NODE_ENV === "production") {
    return false;
  }
  const isStrictMode = React.useRef(void 0);
  const reactMajorVersion = React.useMemo(() => {
    return Number(React.version.split(".")[0]);
  }, [React.version]);
  if (isNaN(reactMajorVersion) || reactMajorVersion < 18) {
    return false;
  }
  if (isStrictMode.current === void 0) {
    let currentOwner = getCurrentOwner();
    while (currentOwner.return) {
      currentOwner = currentOwner.return;
      if (currentOwner.type === REACT_STRICT_MODE_TYPE || currentOwner.elementType === REACT_STRICT_MODE_TYPE) {
        isStrictMode.current = true;
      }
    }
  }
  return !!isStrictMode.current;
};

// src/useDisposable.ts
import * as React4 from "react";

// src/useStrictEffect.ts
import * as React2 from "react";
var effectSet = /* @__PURE__ */ new WeakSet();
function useStrictEffect(effect, deps) {
  const currentOwner = getCurrentOwner();
  React2.useEffect(() => {
    if (!effectSet.has(currentOwner)) {
      effectSet.add(currentOwner);
      effect();
      return;
    }
    const dispose = effect();
    return dispose;
  }, deps);
}

// src/useStrictMemo.ts
import * as React3 from "react";
var memoSet = /* @__PURE__ */ new WeakSet();
function useStrictMemo(factory, deps) {
  return React3.useMemo(() => {
    const currentOwner = getCurrentOwner();
    if (!memoSet.has(currentOwner)) {
      memoSet.add(currentOwner);
      return null;
    }
    return factory();
  }, deps);
}

// src/useDisposable.ts
function useDisposable(factory, deps) {
  var _a;
  const isStrictMode = useIsStrictMode() && process.env.NODE_ENV !== "production";
  const useMemo4 = isStrictMode ? useStrictMemo : React4.useMemo;
  const useEffect3 = isStrictMode ? useStrictEffect : React4.useEffect;
  const [disposable, dispose] = (_a = useMemo4(() => factory(), deps)) != null ? _a : [
    null,
    () => null
  ];
  useEffect3(() => {
    return dispose;
  }, deps);
  return disposable;
}
export {
  useDisposable,
  useIsStrictMode
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3VzZUlzU3RyaWN0TW9kZS50cyIsICIuLi9zcmMvdXNlRGlzcG9zYWJsZS50cyIsICIuLi9zcmMvdXNlU3RyaWN0RWZmZWN0LnRzIiwgIi4uL3NyYy91c2VTdHJpY3RNZW1vLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuLyoqXG4gKiBAcmV0dXJucyBDdXJyZW50IHJlYWN0IGZpYmVyIGJlaW5nIHJlbmRlcmVkXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRDdXJyZW50T3duZXIgPSAoKSA9PlxuICAvLyBAdHMtaWdub3JlIC0gdXNpbmcgcmVhY3QgaW50ZXJuYWxzXG4gIFJlYWN0Ll9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELlJlYWN0Q3VycmVudE93bmVyXG4gICAgLmN1cnJlbnQ7XG5cbmNvbnN0IFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSAvKiNfX1BVUkVfXyovIFN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtcblxuLyoqXG4gKiBUcmF2ZXJzZXMgdXAgdGhlIFJlYWN0IGZpYmVyIHRyZWUgdG8gZmluZCB0aGUgU3RyaWN0TW9kZSBjb21wb25lbnQuXG4gKiBOb3RlOiBUaGlzIG9ubHkgZGV0ZWN0cyBzdHJpY3QgbW9kZSBmcm9tIFJlYWN0ID49IDE4XG4gKiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3R3Zy9yZWFjdC0xOC9kaXNjdXNzaW9ucy8xOVxuICogQHJldHVybnMgSWYgc3RyaWN0IG1vZGUgaXMgYmVpbmcgdXNlZCBpbiB0aGUgUmVhY3QgdHJlZVxuICovXG5leHBvcnQgY29uc3QgdXNlSXNTdHJpY3RNb2RlID0gKCk6IGJvb2xlYW4gPT4ge1xuICAvLyBUaGlzIGNoZWNrIHZpb2xhdGVzIFJ1bGVzIG9mIEhvb2tzLCBidXQgXCJwcm9jZXNzLmVudi5OT0RFX0VOVlwiIGRvZXMgbm90IGNoYW5nZSBpbiBidW5kbGVcbiAgLy8gb3IgZHVyaW5nIGFwcGxpY2F0aW9uIGxpZmVjeWNsZVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3QgaXNTdHJpY3RNb2RlID0gUmVhY3QudXNlUmVmPGJvb2xlYW4gfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG4gIGNvbnN0IHJlYWN0TWFqb3JWZXJzaW9uID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIE51bWJlcihSZWFjdC52ZXJzaW9uLnNwbGl0KFwiLlwiKVswXSk7XG4gIH0sIFtSZWFjdC52ZXJzaW9uXSk7XG5cbiAgaWYgKGlzTmFOKHJlYWN0TWFqb3JWZXJzaW9uKSB8fCByZWFjdE1ham9yVmVyc2lvbiA8IDE4KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKGlzU3RyaWN0TW9kZS5jdXJyZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICBsZXQgY3VycmVudE93bmVyID0gZ2V0Q3VycmVudE93bmVyKCk7XG4gICAgd2hpbGUgKGN1cnJlbnRPd25lci5yZXR1cm4pIHtcbiAgICAgIGN1cnJlbnRPd25lciA9IGN1cnJlbnRPd25lci5yZXR1cm47XG4gICAgICBpZiAoXG4gICAgICAgIGN1cnJlbnRPd25lci50eXBlID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFIHx8XG4gICAgICAgIGN1cnJlbnRPd25lci5lbGVtZW50VHlwZSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRVxuICAgICAgKSB7XG4gICAgICAgIGlzU3RyaWN0TW9kZS5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gISFpc1N0cmljdE1vZGUuY3VycmVudDtcbn07XG4iLCAiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHlwZSB7IERpc3Bvc2FibGVGYWN0b3J5IH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB7IHVzZUlzU3RyaWN0TW9kZSB9IGZyb20gXCIuL3VzZUlzU3RyaWN0TW9kZVwiO1xuaW1wb3J0IHsgdXNlU3RyaWN0RWZmZWN0IH0gZnJvbSBcIi4vdXNlU3RyaWN0RWZmZWN0XCI7XG5pbXBvcnQgeyB1c2VTdHJpY3RNZW1vIH0gZnJvbSBcIi4vdXNlU3RyaWN0TWVtb1wiO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBkaXNwb3NhYmxlIGluc3RhbmNlIGR1cmluZyAqKnJlbmRlciB0aW1lKiogdGhhdCB3aWxsXG4gKiBiZSBjcmVhdGVkIG9uY2UgKGJhc2VkIG9uIGRlcGVuZGVuY3kgYXJyYXkpIGV2ZW4gZHVyaW5nIHN0cmljdCBtb2RlLlxuICogVGhlIGRpc3Bvc2FibGUgd2lsbCBiZSBkaXNwb3NlZCBiYXNlZCBvbiB0aGUgZGVwZW5kZW5jeSBhcnJheSBzaW1pbGFyIHRvXG4gKiB1c2VFZmZlY3QuXG4gKlxuICogXHUyNkEwXHVGRTBGIFRoaXMgY2FuIG9ubHkgYmUgY2FsbGVkICoqb25jZSoqIHBlciBjb21wb25lbnRcbiAqIEBwYXJhbSBmYWN0b3J5IC0gZmFjdG9yeSBmb3IgZGlzcG9zYWJsZSBhbmQgaXRzIGRpc3Bvc2UgZnVuY3Rpb25cbiAqIEBwYXJhbSBkZXBzIC0gU2ltaWxhciB0byBhIFJlYWN0IGRlcGVuZGVuY3kgYXJyYXlcbiAqIEByZXR1cm5zIC0gVGhlIGRpc3Bvc2FibGUgaW5zdGFuY2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZURpc3Bvc2FibGU8VEluc3RhbmNlPihcbiAgZmFjdG9yeTogRGlzcG9zYWJsZUZhY3Rvcnk8VEluc3RhbmNlPixcbiAgZGVwczogYW55W11cbikge1xuICAvLyBJbiBwcm9kdWN0aW9uLCBzdHJpY3QgbW9kZSBkb2VzIG5vdCByZXF1aXJlIHNwZWNpYWwgaGFuZGxpbmdcbiAgY29uc3QgaXNTdHJpY3RNb2RlID1cbiAgICB1c2VJc1N0cmljdE1vZGUoKSAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCI7XG5cbiAgY29uc3QgdXNlTWVtbyA9IGlzU3RyaWN0TW9kZSA/IHVzZVN0cmljdE1lbW8gOiBSZWFjdC51c2VNZW1vO1xuICBjb25zdCB1c2VFZmZlY3QgPSBpc1N0cmljdE1vZGUgPyB1c2VTdHJpY3RFZmZlY3QgOiBSZWFjdC51c2VFZmZlY3Q7XG5cbiAgY29uc3QgW2Rpc3Bvc2FibGUsIGRpc3Bvc2VdID0gdXNlTWVtbygoKSA9PiBmYWN0b3J5KCksIGRlcHMpID8/IFtcbiAgICBudWxsLFxuICAgICgpID0+IG51bGwsXG4gIF07XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuIGRpc3Bvc2U7XG4gIH0sIGRlcHMpO1xuXG4gIHJldHVybiBkaXNwb3NhYmxlO1xufVxuIiwgImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgZ2V0Q3VycmVudE93bmVyIH0gZnJvbSBcIi4vdXNlSXNTdHJpY3RNb2RlXCI7XG5cbi8vIHdlIGtub3cgc3RyaWN0IG1vZGUgd2lsbCByZW5kZXIgdXNlTWVtbyBmYWNvcnkgdHdpY2Vcbi8vIGtlZXAgYSB3ZWFrIHNldCB0byBkZXRlY3Qgd2hlbiB0aGUgc2Vjb25kIHJlbmRlciBoYXBwZW5zXG5jb25zdCBlZmZlY3RTZXQgPSBuZXcgV2Vha1NldCgpO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlU3RyaWN0RWZmZWN0KFxuICBlZmZlY3Q6ICgpID0+ICgpID0+IHZvaWQsXG4gIGRlcHM6IFJlYWN0LkRlcGVuZGVuY3lMaXN0IHwgdW5kZWZpbmVkXG4pIHtcbiAgY29uc3QgY3VycmVudE93bmVyID0gZ2V0Q3VycmVudE93bmVyKCk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFlZmZlY3RTZXQuaGFzKGN1cnJlbnRPd25lcikpIHtcbiAgICAgIGVmZmVjdFNldC5hZGQoY3VycmVudE93bmVyKTtcbiAgICAgIGVmZmVjdCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGRpc3Bvc2UgPSBlZmZlY3QoKTtcbiAgICByZXR1cm4gZGlzcG9zZTtcbiAgfSwgZGVwcyk7XG59XG4iLCAiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBnZXRDdXJyZW50T3duZXIgfSBmcm9tIFwiLi91c2VJc1N0cmljdE1vZGVcIjtcblxuLy8gd2Uga25vdyBzdHJpY3QgbW9kZSB3aWxsIHJlbmRlciB1c2VNZW1vIGZhY29yeSB0d2ljZVxuLy8ga2VlcCBhIHdlYWsgc2V0IHRvIGRldGVjdCB3aGVuIHRoZSBzZWNvbmQgcmVuZGVyIGhhcHBlbnNcbmNvbnN0IG1lbW9TZXQgPSBuZXcgV2Vha1NldCgpO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlU3RyaWN0TWVtbzxUTWVtb2l6ZWQ+KFxuICBmYWN0b3J5OiAoKSA9PiBhbnksXG4gIGRlcHM6IFJlYWN0LkRlcGVuZGVuY3lMaXN0IHwgdW5kZWZpbmVkXG4pOiBUTWVtb2l6ZWQgfCBudWxsIHtcbiAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRPd25lciA9IGdldEN1cnJlbnRPd25lcigpO1xuICAgIGlmICghbWVtb1NldC5oYXMoY3VycmVudE93bmVyKSkge1xuICAgICAgbWVtb1NldC5hZGQoY3VycmVudE93bmVyKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBmYWN0b3J5KCk7XG4gIH0sIGRlcHMpO1xufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLFlBQVksV0FBVztBQUtoQixJQUFNLGtCQUFrQixNQUV2Qix5REFBbUQsa0JBQ3REO0FBRUwsSUFBTSx5QkFBdUMsdUJBQU8sSUFBSSxtQkFBbUI7QUFRcEUsSUFBTSxrQkFBa0IsTUFBZTtBQUc1QyxNQUFJLFFBQVEsSUFBSSxhQUFhLGNBQWM7QUFDekMsV0FBTztBQUFBLEVBQ1Q7QUFFQSxRQUFNLGVBQXFCLGFBQTRCLE1BQVM7QUFDaEUsUUFBTSxvQkFBMEIsY0FBUSxNQUFNO0FBQzVDLFdBQU8sT0FBYSxjQUFRLE1BQU0sR0FBRyxFQUFFLEVBQUU7QUFBQSxFQUMzQyxHQUFHLENBQU8sYUFBTyxDQUFDO0FBRWxCLE1BQUksTUFBTSxpQkFBaUIsS0FBSyxvQkFBb0IsSUFBSTtBQUN0RCxXQUFPO0FBQUEsRUFDVDtBQUVBLE1BQUksYUFBYSxZQUFZLFFBQVc7QUFDdEMsUUFBSSxlQUFlLGdCQUFnQjtBQUNuQyxXQUFPLGFBQWEsUUFBUTtBQUMxQixxQkFBZSxhQUFhO0FBQzVCLFVBQ0UsYUFBYSxTQUFTLDBCQUN0QixhQUFhLGdCQUFnQix3QkFDN0I7QUFDQSxxQkFBYSxVQUFVO0FBQUEsTUFDekI7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUVBLFNBQU8sQ0FBQyxDQUFDLGFBQWE7QUFDeEI7OztBQ2hEQSxZQUFZQSxZQUFXOzs7QUNBdkIsWUFBWUMsWUFBVztBQUt2QixJQUFNLFlBQVksb0JBQUksUUFBUTtBQUV2QixTQUFTLGdCQUNkLFFBQ0EsTUFDQTtBQUNBLFFBQU0sZUFBZSxnQkFBZ0I7QUFDckMsRUFBTSxpQkFBVSxNQUFNO0FBQ3BCLFFBQUksQ0FBQyxVQUFVLElBQUksWUFBWSxHQUFHO0FBQ2hDLGdCQUFVLElBQUksWUFBWTtBQUMxQixhQUFPO0FBQ1A7QUFBQSxJQUNGO0FBRUEsVUFBTSxVQUFVLE9BQU87QUFDdkIsV0FBTztBQUFBLEVBQ1QsR0FBRyxJQUFJO0FBQ1Q7OztBQ3RCQSxZQUFZQyxZQUFXO0FBS3ZCLElBQU0sVUFBVSxvQkFBSSxRQUFRO0FBRXJCLFNBQVMsY0FDZCxTQUNBLE1BQ2tCO0FBQ2xCLFNBQWEsZUFBUSxNQUFNO0FBQ3pCLFVBQU0sZUFBZSxnQkFBZ0I7QUFDckMsUUFBSSxDQUFDLFFBQVEsSUFBSSxZQUFZLEdBQUc7QUFDOUIsY0FBUSxJQUFJLFlBQVk7QUFDeEIsYUFBTztBQUFBLElBQ1Q7QUFFQSxXQUFPLFFBQVE7QUFBQSxFQUNqQixHQUFHLElBQUk7QUFDVDs7O0FGSE8sU0FBUyxjQUNkLFNBQ0EsTUFDQTtBQXBCRjtBQXNCRSxRQUFNLGVBQ0osZ0JBQWdCLEtBQUssUUFBUSxJQUFJLGFBQWE7QUFFaEQsUUFBTUMsV0FBVSxlQUFlLGdCQUFzQjtBQUNyRCxRQUFNQyxhQUFZLGVBQWUsa0JBQXdCO0FBRXpELFFBQU0sQ0FBQyxZQUFZLE9BQU8sS0FBSSxLQUFBRCxTQUFRLE1BQU0sUUFBUSxHQUFHLElBQUksTUFBN0IsWUFBa0M7QUFBQSxJQUM5RDtBQUFBLElBQ0EsTUFBTTtBQUFBLEVBQ1I7QUFDQSxFQUFBQyxXQUFVLE1BQU07QUFDZCxXQUFPO0FBQUEsRUFDVCxHQUFHLElBQUk7QUFFUCxTQUFPO0FBQ1Q7IiwKICAibmFtZXMiOiBbIlJlYWN0IiwgIlJlYWN0IiwgIlJlYWN0IiwgInVzZU1lbW8iLCAidXNlRWZmZWN0Il0KfQo=